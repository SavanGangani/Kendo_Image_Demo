{"version":3,"file":"kendo.pivotgrid.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","ui","encode","htmlEncode","Class","Comparer","data","Widget","DataSource","outerWidth","_outerWidth","outerHeight","_outerHeight","common","pivotgrid","fetchDiscover","normalizeFilter","Query","normalizeSort","toString","identity","o","map","extend","isFunction","fetchData","createLocalDataState","createDataTree","sumAggregate","averageAggregate","minAggregate","maxAggregate","createDataState","toColumns","toRows","toTree","toData","headersReducer","RESIZE","READ","CHANGE","ERROR","PROGRESS","MEASURES","STATERESET","AUTO","DIV","NS","ROW_TOTAL_KEY","DATABINDING","DATABOUND","EXPANDMEMBER","HEADERTEMPLATE","ref","key","headerClass","colspan","rowspan","expandable","iconClass","icon","COLLAPSEMEMBER","STATE_EXPANDED_ICONNAME","STATE_COLLAPSED_ICONNAME","HEADER_TEMPLATE","member","caption","name","PIVOTGRID_TREND_ICONS_MAP","KPISTATUS_TEMPLATE","dataItem","value","KPITREND_TEMPLATE","DATACELL_TEMPLATE","fmtValue","tableStyles","normalizeMeasures","measure","descriptor","descriptors","call","d","type","normalizeMembers","expand","slice","normalizeName","indexOf","accumulateMembers","accumulator","rootTuple","tuple","level","idx","length","children","members","stringify","buildPath","descriptorsForAxes","tuples","result","k","push","JSON","parse","descriptorsForMembers","axis","measures","firstTuple","tupleMembers","found","j","getName","hierarchy","addMissingPathMembers","tupletoSearch","findExistingTuple","tupleToDescriptors","createAggregateGetter","m","measureGetter","getter","field","aggregatorContext","state","aggregate","isNumber","val","isNaN","isDate","getTime","flattenSortDescriptors","i","dir","split","pop","createLocalMeasure","format","measureMap","Sum","Average","Min","Max","item","this","bind","uniqueName","functions","sum","count","average","max","min","PivotCubeBuilder","init","options","dimensions","_normalizeDescriptors","keyField","fields","_rootTuples","rootNames","measureAggregators","root","parts","aggregatorsLength","dimensionsSchema","measureIdx","rootNamesLength","keys","levelName","levelNum","hasChildren","parentName","_sortMap","sortDescriptors","flattenTree","mapItem","sortedMaps","sortTree","directParentName","fillSortTree","sortItemsTree","create","flatColumns","index","_expandedTuples","expanded","current","currentKeys","memberInfo","expandedNames","accumulatorKeys","isEmptyObject","_findExpandedMember","uniquePath","names","expandedIdx","join","_asTuples","rootInfo","expandedInfo","concat","apply","_measuresInfo","rowAxis","aggregateNames","resultFuncs","formats","_toDataArray","measuresInfo","rowKeys","columnKeys","aggregates","n","row","column","columnKey","columnMeasureNames","rowMeasureNamesLength","rowMeasureNames","rowLength","columnLength","items","_addData","resultFunc","ordinal","_matchDescriptors","getters","parentField","expectedValue","_calculateAggregate","totalItem","aggregator","_processColumns","columns","rowTotal","updateColumn","path","columnIndex","childrenMap","_measureAggregators","defaultAggregate","measureDescriptors","aggregators","toLowerCase","Error","_buildGetters","_parseDescriptors","parsedDescriptors","parseDescriptors","getRootNames","mapNames","_filter","filter","expr","filters","operator","_normalizeFilter","logic","process","measuresRowAxis","measuresAxis","columnDescriptors","rowDescriptors","rows","rowValue","rowIdx","rowDescriptor","rowName","columnsInfo","rowsInfo","aggregatedData","columnGetters","rowGetters","processed","expandedColumns","expandedRows","hasExpandedRows","sort","axes","PivotTransport","transport","discover","read","update","destroy","success","catalog","connection","cube","PivotDataSourceV2","schema","cubes","catalogs","hierarchies","levels","cubeSchema","_cubeSchema","fn","transportOptions","_online","XmlaTransportV2","_columns","_rows","_measuresAxis","values","_measures","serverSorting","serverPaging","serverFiltering","serverGrouping","serverAggregates","normalizeAxis","_mergeState","fetch","callback","that","_data","_query","done","_createSettings","settings","dimensionsSettings","displayValueFunc","sortValueFunc","displayValue","sortValue","defaultHierarchy","restoreMeasure","memberType","_pristineData","distinct","levelUniqueName","childrenCardinality","isPrevented","trigger","params","_params","deferred","Deferred","originalData","reader","columnSettings","columnAxes","rowSettings","rowAxes","stateArgs","dataTree","dataField","columnsData","reverse","_saveState","resolve","newDataState","response","_preventRefresh","error","err","promise","measureAxes","schemaMeasures","command","restrictions","catalogName","cubeName","schemaKPIs","schemaDimensions","schemaHierarchies","dimensionName","dimensionUniqueName","schemaLevels","hierarchyName","hierarchyUniqueName","schemaCubes","schemaCatalogs","schemaMembers","_columnTuples","_rowTuples","_view","PivotDataSource","cubeBuilder","_skipNormalize","_axes","memberUniqueName","schemaData","dataGetter","_rawData","treeOp","_clearAxesData","query","rowsAxisDescriptors","columnsAxisDescriptors","_expandPath","origin","other","memberToExpand","_lastExpanded","_descriptorsForAxis","_process","e","page","pageSize","group","_updateLocalData","expandColumn","expandRow","_processResult","processedData","_requestData","columnIndexes","rowIndexes","resultAxis","axisToSkip","hasColumnTuples","_rowMeasures","_normalizeTuples","_columnMeasures","_normalizeData","columnsLength","rowsLength","validateAxis","sourceTuples","targetTuples","columnIdx","dataIdx","targetColumnsLength","membersCount","measuresLength","tupleIndex","adjustDataByColumn","adjustDataByRow","_mergeAxes","_readData","newData","_createTuple","buildRoot","Number","_hasRoot","target","source","isRoot","sourceAxes","startIndex","columnMeasures","rowMeasures","oldRowsLength","newRowsLength","oldColumnsLength","newColumnsLength","rowIndex","dataIndex","calcIndex","indices","buildDataIndices","Math","prepareDataOnColumns","parseSource","mergedColumns","mergeTuples","targetIndex","sourceIndex","parseInt","prepareDataOnRows","mergedRows","findDataIndex","parsedRoot","memberIndex","offset","_mergeColumnData","_mergeRowData","toAdd","toJSON","drop","splice","_observe","_ranges","_addRange","_total","_pristineTotal","memberIdx","last","roots","indexes","tupleName","_addMissingDataItems","metadata","addEmptyDataItem","_normalizeOrdinals","lastOrdinal","converter","_handleCustomErrors","status","reject","kpis","sortFunction","currentItem","newAxis","collection","queue","shift","counter","targetMembers","sourceMembers","equalTuples","first","second","equal","toFind","membersLength","addMembers","len","findParentMember","parentMember","parentPath","normalizeTupleMeasures","measureIndex","measurePosition","spliceIndex","baseHierarchyPath","memberName","expandMemberDescriptor","sortDescriptor","sortDescriptorForMember","crossJoin","r","crossJoinCommand","tmp","measureNames","rootName","rootLength","l","child","serializeMembers","crossJoinCommands","dataSource","filterFunctionFormats","contains","doesnotcontain","startswith","endswith","eq","neq","serializeExpression","expression","serializeOptions","parentTagName","capitalize","replace","toUpperCase","xmlaDiscoverCommands","convertersMap","serializeFilters","properties","Catalog","XmlaTransport","RemoteTransport","originalOptions","url","setup","dataType","contentType","parameterMap","ajax","fetchOptions","noop","then","catch","asArray","object","translateAxis","captionGetter","unameGetter","levelNameGetter","levelNumGetter","childrenGetter","hierarchyGetter","parentNameGetter","Member","schemaDataReaderMap","description","groupName","displayFolder","defaultFormat","goal","trend","statusGraphic","trendGraphic","defaultMember","orderingProperty","xmlaReaderMethods","XmlaDataReader","XmlDataReader","_extend","methodName","option","xml","errors","fault","faultstring","faultcode","cells","ordinalGetter","valueGetter","fmtValueGetter","_mapSchema","obj","transports","xmla","readers","removeExpr","expressions","PivotSettingTarget","element","addClass","_refreshHandler","refresh","template","actions","enabled","emptyTemplate","_sortable","on","closest","action","attr","hasClass","remove","sortable","sortDirection","currentTarget","find","filterable","fieldMenu","PivotFieldMenu","messages","setting","empty","setDataSource","unbind","kendoSortable","connectWith","hint","cursor","start","change","add","move","newIndex","_isKPI","validate","isMeasure","Array","isArray","sortExpressions","_sort","skipExpr","allowUnsort","html","sortIcon","_sortIcon","off","sortExpr","PivotSettingTargetV2","parent","text","PivotFieldMenuV2","events","_applyState","_sortState","_stateFilter","_savedState","_cancelChanges","deepExtend","_initialState","_redraw","_state","newState","modifyInit","focus","blur","_savedFilter","_emptyState","enable","removeClass","_targetsHTML","menuenabled","PivotConfiguratorButton","_element","_attachEvents","configurator","setOptions","toggle","pivot","pivotEl","toggleClass","getKendoPivotGridV2","_setContentWidth","_updateDimensions","PivotContainer","_addClasses","configuratorPosition","className","PivotGridV2","_dataSource","_bindConfigurator","_wrapper","_columnHeadersWrapper","_rowHeadersWrapper","_contentWrapper","wrapper","append","_columnBuilder","ColumnRowBuilder","columnHeaderTemplate","_rowBuilder","rowHeaderTemplate","_contentBuilder","ContentBuilderV2","dataCellTemplate","_scrollable","button","is","isRow","paths","eventName","reducerPayLoad","payload","tree","getTree","currentAxes","newHeaders","autoBind","notify","height","columnWidth","_windowResizeHandler","_progressHandler","_errorHandler","_requestStart","_error","_resize","div","scrollbar","style","setProperty","document","createElement","cssText","innerHTML","body","appendChild","offsetWidth","scrollWidth","removeChild","columnsHeader","rowsHeader","scroll","scrollLeft","scrollTop","_wheelScroll","ctrlKey","delta","wheelDeltaY","preventDefault","one","css","_progress","progress","offsetHeight","contentTable","columnTable","rowTable","width","kendoPivotConfiguratorV2","cellInfoByElement","cellInfo","contentBuilder","columnsCount","rowsCount","columnTuple","hash","rowTuple","setTuples","build","setRowColumnInfo","columnHeaderLeafs","getHeaderLeafs","rowHeaderLeafs","columnHeaderBreadth","getBreadth","rowHeaderDepth","plugin","PivotGrid","columnBuilder","rowBuilder","_createLayout","ColumnBuilder","RowBuilder","ContentBuilder","_templates","builder","eventArgs","parseJSON","request","childrenLoaded","maxChildren","reorderable","kpiStatusTemplate","kpiTrendTemplate","measureFields","columnFields","rowFields","columnTemplate","rowTemplate","dataTemplate","useWithBlock","kendoPivotConfigurator","columnInfo","rowInfo","view","measuresTarget","rowsTarget","columnsTarget","clearTimeout","_headerReflowTimeout","_stateResetHandler","_stateReset","reset","_measureFields","_createSettingTarget","pivotOptions","getIcons","_initSettingTargets","layoutTable","leftContainer","rightContainer","gridWrapper","wrap","support","content","columnsHeaderTree","dom","Tree","rowsHeaderTree","contentTree","firstChild","_setSectionsWidth","_setSectionsHeight","_setContentHeight","_columnHeaderReflow","browser","mozilla","setTimeout","leftColumn","measureFieldsHeight","columnFieldsHeight","rowFieldsHeight","innerHeight","columnsHeight","padding","firstRowHeight","secondRowHeight","calculatedWidth","minWidth","ceil","_resetColspan","skipScrollbar","clientHeight","cell","_colspan","_layoutTimeout","_axisMeasures","hasMeasure","columnAxis","render","_indexes","touchScroller","contentResized","movable","sender","x","y","htmlNode","createMetadata","maxMembers","addColElements","table","addRowElements","addColumCell","rowEl","rowItem","cellEl","total","headerTemplate","columnHeaderRows","rowSpan","colSpan","treeData","headerRows","headerLeafs","breadth","rowHeaderBreadth","_tree","_breadth","_headerLeafs","tbody","_tbody","colgroup","_colGroup","_rowLength","_buildRows","_normalize","cellsLength","cellIdx","tupleAll","_rowIndex","_row","parentRow","rowKey","notFirst","collapsed","measureRow","_cell","_content","childRow","childrenLength","allCell","nextMember","cellChildren","memberCollapsed","rootLevelNum","cellIconEl","maxcolSpan","allRow","firstMemberName","tuplePath","hasChild","axisInfo","axisInfoMember","skipChildren","firstEmpty","_buildRow","templateInfo","cellContent","startIdx","PivotExcelExporter","widget","columnHeaderTable","rowHeaderTable","columnHeaderLength","rowHeaderLength","autoWidth","_cells","background","color","rowHeaderRows","contentRows","columnRows","rowRows","_freezePane","colSplit","rowSplit","workbook","sheets","freezePane","PivotExcelMixin","proto","excel","saveAsExcel","proxyURL","fileName","book","ooxml","Workbook","toDataURLAsync","dataURI","saveAs","forceProxy","prototype","PDFMixin","_drawPDF","_drawPDFShadow","avoidLinks","pdf","jQuery"],"sources":["kendo.pivotgrid.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.pivot.common', 'kendo.dom', 'kendo.data', 'kendo.icons'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"pivotgrid\",\n        name: \"PivotGrid\",\n        category: \"web\",\n        description: \"The PivotGrid widget is a data summarization tool.\",\n        depends: [ \"dom\", \"data\", \"data.xml\", \"sortable\", \"pivot.common\", \"icons\" ],\n        features: [{\n            id: \"pivotgrid-configurator\",\n            name: \"Configurator\",\n            description: \"The PivotConfigurator widget allows the user to select data slices displayed in PivotGrid\",\n            depends: [ \"pivot.configurator\" ]\n        }, {\n            id: \"pivotgrid-filtering\",\n            name: \"Filtering\",\n            description: \"Support for filtering\",\n            depends: [ \"pivot.fieldmenu\" ]\n        }, {\n            id: \"pivotgrid-excel-export\",\n            name: \"Excel export\",\n            description: \"Export pivot grid data as Excel spreadsheet\",\n            depends: [ \"ooxml\" ]\n        }, {\n            id: \"pivotgrid-pdf-export\",\n            name: \"PDF export\",\n            description: \"Export pivot grid data as PDF\",\n            depends: [ \"pdf\", \"drawing\" ]\n        }, {\n            id: \"mobile-scroller\",\n            name: \"Mobile scroller\",\n            description: \"Support for kinetic scrolling in mobile device\",\n            depends: [ \"mobile.scroller\" ]\n        }]\n    };\n\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            Class = kendo.Class,\n            Comparer = kendo.data.Comparer,\n            Widget = ui.Widget,\n            DataSource = kendo.data.DataSource,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            common = window.kendo.pivotgrid.common,\n            fetchDiscover = common.fetchDiscover,\n            normalizeFilter = kendo.data.Query.normalizeFilter,\n            normalizeSort = kendo.data.Query.normalizeSort,\n            toString = {}.toString,\n            identity = function(o) { return o; },\n            map = $.map,\n            extend = $.extend,\n            isFunction = kendo.isFunction,\n            fetchData = common.fetchData,\n            createLocalDataState = common.createLocalDataState,\n            createDataTree = common.createDataTree,\n            sumAggregate = common.sumAggregate,\n            averageAggregate = common.averageAggregate,\n            minAggregate = common.minAggregate,\n            maxAggregate = common.maxAggregate,\n            createDataState = common.createDataState,\n            toColumns = common.toColumns,\n            toRows = common.toRows,\n            toTree = common.toTree,\n            toData = common.toData,\n            headersReducer = common.headersReducer,\n            RESIZE = \"resize\",\n            READ = \"read\",\n            CHANGE = \"change\",\n            ERROR = \"error\",\n            REQUESTSTART = \"requestStart\",\n            PROGRESS = \"progress\",\n            REQUESTEND = \"requestEnd\",\n            MEASURES = \"Measures\",\n            STATERESET = \"stateReset\",\n            AUTO = \"auto\",\n            DIV = \"<div></div>\",\n            NS = \".kendoPivotGrid\",\n            ROW_TOTAL_KEY = \"__row_total__\",\n            DATABINDING = \"dataBinding\",\n            DATABOUND = \"dataBound\",\n            EXPANDMEMBER = \"expandMember\",\n            HEADERTEMPLATE = function (ref) {\n                var key = ref.key;\n                var headerClass = ref.headerClass;\n                var colspan = ref.colspan;\n                var rowspan = ref.rowspan;\n                var expandable = ref.expandable;\n                var iconClass = ref.iconClass;\n\n                return \"<th data-key=\\\"\" + (encode(key)) + \"\\\" class=\\\"k-table-th \" + (encode(headerClass)) + \"\\\" \" + (colspan ? 'colspan=\"' + encode(colspan) + '\"' : '') + \" \" + (rowspan ? 'rowspan=\"' + encode(rowspan) + '\"' : '') + \">\" +\n                                        \"\" + (expandable ? kendo.ui.icon($('<span role=\"presentation\"></span>'), { icon: (\"chevron-\" + (encode(iconClass))) }) : '') +\n                                    '</th>';\n        },\n            COLLAPSEMEMBER = \"collapseMember\",\n            STATE_EXPANDED = \"k-i-caret-alt-down\",\n            STATE_EXPANDED_ICONNAME = \"caret-alt-down\",\n            STATE_EXPANDED_SELECTOR = \".k-i-\" + STATE_EXPANDED_ICONNAME + \",.k-svg-i-\" + STATE_EXPANDED_ICONNAME,\n            STATE_COLLAPSED = \"k-i-caret-alt-right\",\n            STATE_COLLAPSED_ICONNAME = \"caret-alt-right\",\n            STATE_COLLAPSED_SELECTOR = \".k-i-\" + STATE_COLLAPSED_ICONNAME + \",.k-svg-i-\" + STATE_COLLAPSED_ICONNAME,\n            HEADER_TEMPLATE = function (ref) {\n                var member = ref.member;\n\n                return (\"<span>\" + (encode(member.caption || member.name)) + \"</span>\");\n        },\n            PIVOTGRID_TREND_ICONS_MAP = {\n                \"kpi-trend-decrease\": \"caret-alt-down\",\n                \"kpi-trend-increase\": \"caret-alt-up\",\n                \"kpi-trend-equal\": \"minus\",\n            },\n            KPISTATUS_TEMPLATE = function (ref) {\n                var dataItem = ref.dataItem;\n\n                return kendo.ui.icon($((\"<span title=\\\"\" + (encode(dataItem.value)) + \"\\\"></span>\")), { icon: (\"kpi-status-\" + (dataItem.value > 0 ? \"open\" : dataItem.value < 0 ? \"deny\" : \"hold\")) });\n        },\n            KPITREND_TEMPLATE = function (ref) {\n                var dataItem = ref.dataItem;\n\n                return kendo.ui.icon($((\"<span title=\\\"\" + (encode(dataItem.value)) + \"\\\"></span>\")), { icon: PIVOTGRID_TREND_ICONS_MAP[(\"kpi-trend-\" + (dataItem.value > 0 ? \"increase\" : dataItem.value < 0 ? \"decrease\" : \"equal\"))] });\n        },\n            DATACELL_TEMPLATE = function (ref) {\n                var dataItem = ref.dataItem;\n\n                return (\"\" + (dataItem ? encode(dataItem.fmtValue || dataItem.value) || \"&nbsp;\" : \"&nbsp;\"));\n        },\n            LAYOUT_TABLE = '<table class=\"k-pivot-layout\">' +\n                                '<tr>' +\n                                    '<td>' +\n                                        '<div class=\"k-pivot-rowheaders\"></div>' +\n                                    '</td>' +\n                                    '<td>' +\n                                        '<div class=\"k-pivot-table\"></div>' +\n                                    '</td>' +\n                                '</tr>' +\n                            '</table>';\n            var AXIS_ROWS = \"rows\";\n            var AXIS_COLUMNS = \"columns\";\n\n            var tableStyles = {\n                tableRow: \"k-table-row\",\n                header: \"k-header k-table-th\",\n                headerTable: \"k-grid-header-table k-table k-table-md\",\n                table: \"k-table k-table-md\",\n                contentTable: \"k-grid-table k-table k-table-md\",\n                tbody: \"k-table-tbody\",\n                tableCell: \"k-table-td\"\n            };\n\n        function normalizeMeasures(measure) {\n            var descriptor = typeof measure === \"string\" ? [{ name: measure }] : measure;\n            var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return map(descriptors, function(d) {\n                if (typeof d === \"string\") {\n                    return { name: d };\n                }\n                return $.extend(true, d, { name: d.name, type: d.type });\n            });\n        }\n\n        function normalizeMembers(member) {\n            var descriptor = typeof member === \"string\" ? [{ name: [member], expand: false }] : member;\n            var descriptors = toString.call(descriptor) === \"[object Array]\" ? descriptor : (descriptor !== undefined$1 ? [descriptor] : []);\n\n            return map(descriptors, function(d) {\n                if (typeof d === \"string\") {\n                    return { name: [d], expand: false };\n                }\n                return { name: (toString.call(d.name) === \"[object Array]\" ? d.name.slice() : [d.name]), expand: d.expand };\n            });\n        }\n\n        function normalizeName(name) {\n            if (name.indexOf(\" \") !== -1) {\n                name = '[\"' + name + '\"]';\n            }\n\n            return name;\n        }\n\n        function accumulateMembers(accumulator, rootTuple, tuple, level) {\n            var idx, length;\n            var children;\n            var member;\n\n            if (!tuple) {\n                tuple = rootTuple;\n            }\n\n            if (!level) {\n                level = 0;\n            }\n\n            member = tuple.members[level];\n\n            if (!member || member.measure) { //return if no member or measure\n                return;\n            }\n\n            children = member.children;\n            length = children.length;\n\n            if (tuple === rootTuple) {\n                accumulator[kendo.stringify([member.name])] = !!length;\n            } else if (length) {\n                accumulator[kendo.stringify(buildPath(tuple, level))] = true;\n            }\n\n            if (length) {\n                for (idx = 0; idx < length; idx++) {\n                    accumulateMembers(accumulator, rootTuple, children[idx], level);\n                }\n            }\n\n            accumulateMembers(accumulator, rootTuple, tuple, level + 1);\n        }\n\n        function descriptorsForAxes(tuples) {\n            var result = {};\n\n            if (tuples.length) {\n                accumulateMembers(result, tuples[0]);\n            }\n\n            var descriptors = [];\n            for (var k in result) {\n                descriptors.push({ name: JSON.parse(k), expand: result[k] });\n            }\n\n            return descriptors;\n        }\n\n        function addMissingPathMembers(members, axis) {\n            var tuples = axis.tuples || [];\n            var firstTuple = tuples[0];\n\n            if (firstTuple && members.length < firstTuple.members.length) {\n                var tupleMembers = firstTuple.members;\n\n                for (var idx = 0; idx < tupleMembers.length; idx++) {\n                    if (tupleMembers[idx].measure) {\n                        continue;\n                    }\n\n                    var found = false;\n                    for (var j = 0; j < members.length; j++) {\n                        if (getName(members[j]).indexOf(tupleMembers[idx].hierarchy) === 0) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        members.push({ name: [tupleMembers[idx].name], expand: false }); //calling normalize here to make name from string to array\n                    }\n                }\n            }\n        }\n\n        function tupleToDescriptors(tuple) {\n            var result = [];\n            var members = tuple.members;\n\n            for (var idx = 0; idx < members.length; idx++) {\n                if (members[idx].measure) {\n                    continue;\n                }\n\n                //make tuple name an array\n                result.push({ name: [members[idx].name], expand: members[idx].children.length > 0 });\n            }\n\n            return result;\n        }\n\n        function descriptorsForMembers(axis, members, measures) {\n            axis = axis || {};\n\n            addMissingPathMembers(members, axis);\n\n            if (measures.length > 1) {\n                members.push({\n                    name: MEASURES,\n                    measure: true,\n                    children: normalizeMembers(measures)\n                });\n            }\n\n            var tupletoSearch = {\n                members: members\n            };\n\n            if (axis.tuples) {\n                var result = findExistingTuple(axis.tuples, tupletoSearch);\n                if (result.tuple) {\n                    members = tupleToDescriptors(result.tuple);\n                }\n            }\n\n            return members;\n        }\n\n        function createAggregateGetter(m) {\n            var measureGetter = kendo.getter(m.field, true);\n            return function(aggregatorContext, state) {\n                return m.aggregate(measureGetter(aggregatorContext.dataItem), state, aggregatorContext);\n            };\n        }\n\n        function isNumber(val) {\n            return typeof val === \"number\" && !isNaN(val);\n        }\n\n        function isDate(val) {\n            return val && val.getTime;\n        }\n\n        function getScollWidth() {\n            var scrollbar = 0;\n            var div;\n            if (document && document.createElement) {\n                div = document.createElement('div');\n\n                div.style.cssText = 'overflow:scroll;overflow-x:hidden;zoom:1;clear:both;display:block';\n                div.innerHTML = '&nbsp;';\n                document.body.appendChild(div);\n\n                scrollbar = div.offsetWidth - div.scrollWidth;\n\n                document.body.removeChild(div);\n            }\n\n            return scrollbar;\n        }\n\n        function flattenSortDescriptors(descriptors) {\n            var result = [];\n            for (var i = 0; i < descriptors.length; i++) {\n                result.push({\n                    dir: descriptors[i].dir,\n                    field: descriptors[i].field.split(\".\").pop()\n                });\n            }\n            return result;\n        }\n\n        function createLocalMeasure(field, key, format) {\n            var formatFunc = function(value) { return kendo.format(this.format, value); };\n            var measureMap = {\n                \"Sum\": sumAggregate,\n                \"Average\": averageAggregate,\n                \"Min\": minAggregate,\n                \"Max\": maxAggregate,\n            };\n            var valueFunc = function(item) { return item[this.field]; };\n            var measure = {\n                    value: valueFunc.bind({ field: field }),\n                    aggregate: measureMap[key],\n                    caption: key,\n                    uniqueName: key,\n                    type: 2,\n                    name: [key]\n                };\n            if (format) {\n                measure.aggregate.format = formatFunc.bind({ format: format });\n            }\n\n            return measure;\n        }\n\n        function getIcons(sortIcon, options, pivotOptions) {\n            var sortable = options.sortable,\n                filterable = options.filterable,\n                reorderable = pivotOptions.reorderable,\n                result = \"\";\n\n            if (sortable) {\n                result += sortIcon ? (\"<span class=\\\"k-chip-action\\\">\" + (kendo.ui.icon(sortIcon + \"-sm\")) + \"</span>\") : '';\n            }\n\n            if (filterable || sortable) {\n                result += \"<span class=\\\"k-setting-fieldmenu k-chip-action\\\">\" + (kendo.ui.icon(\"more-vertical\")) + \"</span>\";\n            }\n            if (reorderable) {\n                result += \"<span class=\\\"k-setting-delete k-chip-action\\\">\" + (kendo.ui.icon(\"x\")) + \"</span>\";\n            }\n\n            return result;\n        }\n\n        var functions = {\n            sum: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator)) {\n                    accumulator = value;\n                } else if (isNumber(value)) {\n                    accumulator += value;\n                }\n\n                return accumulator;\n            },\n            count: function(value, state) {\n                return (state.accumulator || 0) + 1;\n            },\n            average: {\n                aggregate: function(value, state) {\n                    var accumulator = state.accumulator;\n\n                    if (state.count === undefined$1) {\n                        state.count = 0;\n                    }\n\n                    if (!isNumber(accumulator)) {\n                        accumulator = value;\n                    } else if (isNumber(value)) {\n                        accumulator += value;\n                    }\n\n                    if (isNumber(value)) {\n                        state.count++;\n                    }\n\n                    return accumulator;\n                },\n                result: function(state) {\n                    var accumulator = state.accumulator;\n\n                    if (isNumber(accumulator)) {\n                        accumulator = accumulator / state.count;\n                    }\n\n                    return accumulator;\n                }\n            },\n            max: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n\n                if (accumulator < value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            },\n            min: function(value, state) {\n                var accumulator = state.accumulator;\n\n                if (!isNumber(accumulator) && !isDate(accumulator)) {\n                    accumulator = value;\n                }\n\n                if (accumulator > value && (isNumber(value) || isDate(value))) {\n                    accumulator = value;\n                }\n                return accumulator;\n            }\n        };\n\n        var PivotCubeBuilder = Class.extend({\n            init: function(options) {\n                this.options = extend({}, this.options, options);\n                this.dimensions = this._normalizeDescriptors(\"field\", this.options.dimensions);\n                this.measures = this._normalizeDescriptors(\"name\", this.options.measures);\n            },\n\n            _normalizeDescriptors: function(keyField, descriptors) {\n                descriptors = descriptors || {};\n                var fields = {};\n                var field;\n\n                if (toString.call(descriptors) === \"[object Array]\") {\n                    for (var idx = 0, length = descriptors.length; idx < length; idx++) {\n                        field = descriptors[idx];\n                        if (typeof field === \"string\") {\n                            fields[field] = {};\n                        } else if (field[keyField]) {\n                            fields[field[keyField]] = field;\n                        }\n                    }\n                    descriptors = fields;\n                }\n\n                return descriptors;\n            },\n\n            _rootTuples: function(rootNames, measureAggregators) {\n                var aggregatorsLength = measureAggregators.length || 1;\n                var dimensionsSchema = this.dimensions || [];\n                var root, name, parts;\n                var measureIdx = 0;\n                var idx;\n\n                var rootNamesLength = rootNames.length;\n                var result = [];\n                var keys = [];\n\n                if (rootNamesLength || measureAggregators.length) {\n                    for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n\n                        root = { members: [] };\n\n                        for (idx = 0; idx < rootNamesLength; idx++) {\n                            name = rootNames[idx];\n                            parts = name.split(\"&\");\n\n                            root.members[root.members.length] = {\n                                children: [],\n                                caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                name: name,\n                                levelName: name,\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                hierarchy: name\n                            };\n                        }\n\n                        if (aggregatorsLength > 1) {\n                            root.members[root.members.length] = {\n                                children: [],\n                                caption: (measureAggregators[measureIdx]).caption,\n                                name: measureAggregators[measureIdx].descriptor.name,\n                                levelName: \"MEASURES\",\n                                levelNum: \"0\",\n                                hasChildren: false,\n                                parentName: undefined$1,\n                                hierarchy: \"MEASURES\"\n                            };\n                        }\n\n                        result[result.length] = root;\n                    }\n\n                    keys.push(ROW_TOTAL_KEY);\n                }\n\n                return {\n                    keys: keys,\n                    tuples: result\n                };\n            },\n\n            _sortMap: function(map, sortDescriptors) {\n                var sortedMaps = [];\n                var sortTree = [];\n                var flattenTree = [];\n                var mapItem;\n                var key;\n\n                for (key in map) {\n                    if (!map[key].directParentName) {\n                        sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                    }\n                }\n\n                //if there are no root this means that something is expanding\n                //and we should only sort that part of the tree\n                if (!sortTree.length) {\n                    for (key in map) {\n                        sortTree.push($.extend({}, { name: key, parentName: map[key].parentName }));\n                    }\n                }\n\n                fillSortTree(sortTree, map);\n\n                // fill tree recursive\n                for (var i = 0; i < sortDescriptors.length; i++) {\n                    sortItemsTree(sortDescriptors[i].field.split(\".\").pop(), sortTree, Comparer.create({ field: \"name\", dir: sortDescriptors[i].dir }));\n                }\n\n                flattenTree = flatColumns(sortTree);\n\n                //we need to flatten the structure so the tuples can build correctly\n                for (var j = 0; j < flattenTree.length; j++) {\n                    mapItem = map[flattenTree[j].name];\n                    mapItem.index = j;\n                    sortedMaps[j] = mapItem;\n                }\n\n                return sortedMaps;\n            },\n\n            _expandedTuples: function(map, expanded, measureAggregators, sortDescriptors) {\n                var aggregatorsLength = measureAggregators.length || 1;\n                var dimensionsSchema = this.dimensions || [];\n                var measureIdx;\n                var tuple;\n\n                var key;\n                var mapItem;\n                var current;\n                var currentKeys;\n                var accumulator = [];\n                var accumulatorKeys = [];\n                var memberInfo;\n\n                var expandedNames;\n                var parts;\n                var name;\n                var idx;\n\n                if (sortDescriptors && sortDescriptors.length && !$.isEmptyObject(map)) {\n                    map = this._sortMap(map, sortDescriptors);\n                }\n\n                for (key in map) {\n                    mapItem = map[key];\n                    memberInfo = this._findExpandedMember(expanded, mapItem.uniquePath);\n\n                    current = accumulator[memberInfo.index] || [];\n                    currentKeys = accumulatorKeys[memberInfo.index] || [];\n\n                    expandedNames = memberInfo.member.names;\n\n                    for (measureIdx = 0; measureIdx < aggregatorsLength; measureIdx++) {\n                        tuple = { members: [] };\n                        for (idx = 0; idx < expandedNames.length; idx++) {\n                            if (idx === memberInfo.member.expandedIdx) {\n                                tuple.members[tuple.members.length] = {\n                                    children: [],\n                                    caption: mapItem.value,\n                                    name: mapItem.name,\n                                    hasChildren: false,\n                                    levelNum: 1,\n                                    levelName: mapItem.parentName + mapItem.name,\n                                    parentName: mapItem.parentName,\n                                    hierarchy: mapItem.parentName + mapItem.name\n                                };\n\n                                if (measureIdx === 0) {\n                                    currentKeys.push(buildPath(tuple, idx).join(\"\"));\n                                }\n                            } else {\n                                name = expandedNames[idx];\n                                parts = name.split(\"&\");\n                                tuple.members[tuple.members.length] = {\n                                    children: [],\n                                    caption: (dimensionsSchema[name] || {}).caption || \"All\",\n                                    name: name,\n                                    levelName: name,\n                                    levelNum: \"0\",\n                                    hasChildren: true,\n                                    parentName: parts.length > 1 ? parts[0] : undefined$1,\n                                    hierarchy: name\n                                };\n                            }\n                        }\n\n                        if (aggregatorsLength > 1) {\n                            tuple.members[tuple.members.length] = {\n                                children: [],\n                                caption: measureAggregators[measureIdx].caption,\n                                name: measureAggregators[measureIdx].descriptor.name,\n                                levelName: \"MEASURES\",\n                                levelNum: \"0\",\n                                hasChildren: true,\n                                parentName: undefined$1,\n                                hierarchy: \"MEASURES\"\n                            };\n                        }\n\n                        current[current.length] = tuple;\n                    }\n\n                    accumulator[memberInfo.index] = current;\n                    accumulatorKeys[memberInfo.index] = currentKeys;\n                }\n\n                return {\n                    keys: accumulatorKeys,\n                    tuples: accumulator\n                };\n            },\n\n            _findExpandedMember: function(members, parentName) {\n                for (var idx = 0; idx < members.length; idx++) {\n                    if (members[idx].uniquePath === parentName) {\n                        return {\n                            member: members[idx],\n                            index: idx\n                        };\n                    }\n                }\n            },\n\n            _asTuples: function(map, descriptor, measureAggregators, sortDescriptors) {\n                measureAggregators = measureAggregators || [];\n\n                var rootInfo = this._rootTuples(descriptor.root, measureAggregators);\n                var expandedInfo = this._expandedTuples(map, descriptor.expanded, measureAggregators, sortDescriptors);\n\n                return {\n                    keys: [].concat.apply(rootInfo.keys, expandedInfo.keys),\n                    tuples: [].concat.apply(rootInfo.tuples, expandedInfo.tuples)\n                };\n            },\n\n            _measuresInfo: function(measures, rowAxis) {\n                var idx = 0;\n                var length = measures && measures.length;\n\n                var aggregateNames = [];\n                var resultFuncs = {};\n                var formats = {};\n\n                var descriptors = (this.measures || {});\n                var measure;\n                var name;\n\n                for (; idx < length; idx++) {\n                    name = measures[idx].descriptor.name;\n                    measure = descriptors[name] || {};\n\n                    aggregateNames.push(name);\n\n                    if (measure.result) {\n                        resultFuncs[name] = measure.result;\n                    }\n\n                    if (measure.format) {\n                        formats[name] = measure.format;\n                    }\n                }\n\n                return {\n                    names: aggregateNames,\n                    formats: formats,\n                    resultFuncs: resultFuncs,\n                    rowAxis: rowAxis\n                };\n            },\n\n            _toDataArray: function(map, measuresInfo, rowKeys, columnKeys) {\n                var result = [];\n\n                var aggregates;\n                var name, i, j, k, n;\n                var row, column, columnKey;\n\n                var rowMeasureNamesLength = 1;\n                var rowMeasureNames = [];\n                var columnMeasureNames;\n\n                var rowLength = rowKeys.length || 1;\n                var columnLength = columnKeys.length || 1;\n\n                if (measuresInfo.rowAxis) {\n                    rowMeasureNames = measuresInfo.names;\n                    rowMeasureNamesLength = rowMeasureNames.length;\n                } else {\n                    columnMeasureNames = measuresInfo.names;\n                }\n\n                for (i = 0; i < rowLength; i++) {\n                    row = map[rowKeys[i] || ROW_TOTAL_KEY];\n\n                    for (n = 0; n < rowMeasureNamesLength; n++) {\n                        if (measuresInfo.rowAxis) {\n                            columnMeasureNames = [rowMeasureNames[n]];\n                        }\n\n                        for (j = 0; j < columnLength; j++) {\n                            columnKey = columnKeys[j] || ROW_TOTAL_KEY;\n                            column = row.items[columnKey];\n\n                            if (columnKey === ROW_TOTAL_KEY) {\n                                aggregates = row.aggregates;\n                            } else {\n                                aggregates = column ? column.aggregates : {};\n                            }\n\n                            for (k = 0; k < columnMeasureNames.length; k++) {\n                                name = columnMeasureNames[k];\n                                this._addData(result, aggregates[name], measuresInfo.formats[name], measuresInfo.resultFuncs[name]);\n                            }\n                        }\n                    }\n                }\n\n                return result;\n            },\n\n            _addData: function(result, value, format, resultFunc) {\n                var fmtValue = \"\";\n                var ordinal;\n\n                if (value) {\n                    value = resultFunc ? resultFunc(value) : value.accumulator;\n                    fmtValue = format ? kendo.format(format, value) : value;\n                }\n\n                ordinal = result.length;\n\n                result[ordinal] = {\n                    ordinal: ordinal,\n                    value: value || \"\",\n                    fmtValue: fmtValue\n                };\n            },\n\n            _matchDescriptors: function(dataItem, descriptor, getters) {\n                var parts;\n                var parentField;\n                var expectedValue;\n\n                var names = descriptor.names;\n                var idx = descriptor.expandedIdx;\n                var value;\n\n                while (idx > 0) {\n                    parts = names[--idx].split(\"&\");\n                    if (parts.length > 1) {\n                        parentField = parts[0];\n                        expectedValue = parts[1];\n\n                        value = getters[parentField](dataItem);\n                        value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                        if (value != expectedValue) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            },\n\n            _calculateAggregate: function(measureAggregators, aggregatorContext, totalItem) {\n                var result = {};\n                var state;\n                var name;\n\n                for (var measureIdx = 0; measureIdx < measureAggregators.length; measureIdx++) {\n                    name = measureAggregators[measureIdx].descriptor.name;\n                    state = totalItem.aggregates[name] || { };\n                    state.accumulator = measureAggregators[measureIdx].aggregator(aggregatorContext, state);\n                    result[name] = state;\n                }\n\n                return result;\n            },\n\n            _processColumns: function(measureAggregators, descriptors, getters, columns, aggregatorContext, rowTotal, state, updateColumn) {\n                var value;\n                var descriptor;\n                var column;\n                var totalItem;\n                var key, name, parentName, path;\n                var dataItem = aggregatorContext.dataItem;\n                var idx = 0;\n\n                for (; idx < descriptors.length; idx++) {\n                    descriptor = descriptors[idx];\n\n                    //checks whether the dataItem is relevant to the descriptors\n                    if (!this._matchDescriptors(dataItem, descriptor, getters)) {\n                        continue;\n                    }\n\n                    path = descriptor.names.slice(0, descriptor.expandedIdx).join(\"\");\n                    name = descriptor.names[descriptor.expandedIdx];\n\n\n                    value = getters[name](dataItem);\n                    value = (value !== undefined$1 && value !== null) ? value.toString() : value;\n\n                    parentName = name;\n                    name = name + \"&\" + value;\n                    key = path + name;\n\n                    column = columns[key] || {\n                        index: state.columnIndex,\n                        parentName: parentName,\n                        name: name,\n                        directParentName: path.indexOf(\"&\") !== -1 ? path : \"\",\n                        uniquePath: path + parentName,\n                        childrenMap: {},\n                        value: value\n                    };\n\n                    if (path && columns[path] && !columns[path].childrenMap[path + parentName + \"&\" + value]) {\n                        columns[path].childrenMap[path + parentName + \"&\" + value] = true;\n                    }\n\n                    totalItem = rowTotal.items[key] || {\n                        aggregates: {}\n                    };\n\n                    rowTotal.items[key] = {\n                        index: column.index,\n                        aggregates: this._calculateAggregate(measureAggregators, aggregatorContext, totalItem)\n                    };\n\n                    if (updateColumn) {\n                        if (!columns[key]) {\n                            state.columnIndex++;\n                        }\n                        columns[key] = column;\n                    }\n                }\n            },\n\n            _measureAggregators: function(options) {\n                var measureDescriptors = options.measures || [];\n                var measures = this.measures || {};\n                var aggregators = [];\n                var descriptor, measure, idx, length;\n                var defaultAggregate, aggregate;\n\n                if (measureDescriptors.length) {\n                    for (idx = 0, length = measureDescriptors.length; idx < length; idx++) {\n                        descriptor = measureDescriptors[idx];\n                        measure = measures[descriptor.name];\n                        defaultAggregate = null;\n\n                        if (measure) {\n                            aggregate = measure.aggregate;\n                            if (typeof aggregate === \"string\") {\n                                defaultAggregate = functions[aggregate.toLowerCase()];\n\n                                if (!defaultAggregate) {\n                                    throw new Error(\"There is no such aggregate function\");\n                                }\n\n                                measure.aggregate = defaultAggregate.aggregate || defaultAggregate;\n                                measure.result = defaultAggregate.result;\n                            }\n\n\n                            aggregators.push({\n                                descriptor: descriptor,\n                                caption: measure.caption,\n                                result: measure.result,\n                                aggregator: createAggregateGetter(measure)\n                            });\n                        }\n                    }\n                } else {\n                    aggregators.push({\n                        descriptor: { name: \"default\" },\n                        caption: \"default\",\n                        aggregator: function() { return 1; }\n                    });\n                }\n\n                return aggregators;\n            },\n\n            _buildGetters: function(names) {\n                var result = {};\n                var parts;\n                var name;\n\n                for (var idx = 0; idx < names.length; idx++) {\n                    name = names[idx];\n                    parts = name.split(\"&\");\n\n                    if (parts.length > 1) {\n                        result[parts[0]] = kendo.getter(parts[0], true);\n                    } else {\n                        result[name] = kendo.getter(normalizeName(name), true);\n                    }\n                }\n\n                return result;\n            },\n\n            _parseDescriptors: function(descriptors) {\n                var parsedDescriptors = parseDescriptors(descriptors);\n                var rootNames = getRootNames(parsedDescriptors.root);\n                var expanded = parsedDescriptors.expanded;\n                var result = [];\n\n                for (var idx = 0; idx < expanded.length; idx++) {\n                    result.push(mapNames(expanded[idx].name, rootNames));\n                }\n\n                return {\n                    root: rootNames,\n                    expanded: result\n                };\n            },\n\n            _filter: function(data, filter) {\n                if (!filter) {\n                    return data;\n                }\n\n                var expr;\n                var idx = 0;\n                var filters = filter.filters;\n\n                for (; idx < filters.length; idx++) {\n                    expr = filters[idx];\n\n                    if (expr.operator === \"in\") {\n                        filters[idx] = this._normalizeFilter(expr);\n                    }\n                }\n\n                return new kendo.data.Query(data).filter(filter).data;\n            },\n\n            _normalizeFilter: function(filter) {\n                var value = filter.value.split(\",\");\n                var result = [];\n\n                if (!value.length) {\n                    return value;\n                }\n\n                for (var idx = 0; idx < value.length; idx++) {\n                    result.push({\n                        field: filter.field,\n                        operator: \"eq\",\n                        value: value[idx]\n                    });\n                }\n\n                return {\n                    logic: \"or\",\n                    filters: result\n                };\n            },\n\n            process: function(data, options) {\n                data = data || [];\n                options = options || {};\n\n                data = this._filter(data, options.filter);\n\n                var measures = options.measures || [];\n\n                var measuresRowAxis = options.measuresAxis === \"rows\";\n\n                var columnDescriptors = options.columns || [];\n                var rowDescriptors = options.rows || [];\n\n                if (!columnDescriptors.length && rowDescriptors.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                    columnDescriptors = rowDescriptors;\n                    rowDescriptors = [];\n                    measuresRowAxis = false;\n                }\n\n                if (!columnDescriptors.length && !rowDescriptors.length) {\n                    measuresRowAxis = false;\n                }\n\n                if (!columnDescriptors.length && measures.length) {\n                    columnDescriptors = normalizeMembers(options.measures);\n                }\n\n                columnDescriptors = this._parseDescriptors(columnDescriptors);\n                rowDescriptors = this._parseDescriptors(rowDescriptors);\n\n                var aggregatedData = {};\n                var columns = {};\n                var rows = {};\n\n                var rowValue;\n                var state = { columnIndex: 0 };\n\n                var measureAggregators = this._measureAggregators(options);\n\n                var columnGetters = this._buildGetters(columnDescriptors.root);\n                var rowGetters = this._buildGetters(rowDescriptors.root);\n\n                var processed = false;\n\n                var expandedColumns = columnDescriptors.expanded;\n                var expandedRows = rowDescriptors.expanded;\n\n                var dataItem;\n                var aggregatorContext;\n                var hasExpandedRows = expandedRows.length !== 0;\n\n                var rowIdx, rowDescriptor, rowName, rowTotal;\n                var key, path, parentName, value;\n                var columnsInfo, rowsInfo;\n                var length = data.length;\n                var idx = 0;\n\n                if (columnDescriptors.root.length || rowDescriptors.root.length) {\n                    processed = true;\n\n                    for (idx = 0; idx < length; idx++) {\n                        dataItem = data[idx];\n\n                        aggregatorContext = {\n                            dataItem: dataItem,\n                            index: idx\n                        };\n\n                        rowTotal = aggregatedData[ROW_TOTAL_KEY] || {\n                            items: {},\n                            aggregates: {}\n                        };\n\n                        this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, rowTotal, state, !hasExpandedRows);\n\n                        rowTotal.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, rowTotal);\n                        aggregatedData[ROW_TOTAL_KEY] = rowTotal;\n\n                        for (rowIdx = 0; rowIdx < expandedRows.length; rowIdx++) {\n                            rowDescriptor = expandedRows[rowIdx];\n\n                            if (!this._matchDescriptors(dataItem, rowDescriptor, rowGetters)) {\n                                this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, { items: {}, aggregates: {} }, state, true);\n                                continue;\n                            }\n\n                            path = rowDescriptor.names.slice(0, rowDescriptor.expandedIdx).join(\"\");\n                            rowName = rowDescriptor.names[rowDescriptor.expandedIdx];\n\n                            parentName = rowName;\n\n                            rowValue = rowGetters[rowName](dataItem);\n                            rowValue = rowValue !== undefined$1 ? rowValue.toString() : rowValue;\n\n                            rowName = rowName + \"&\" + rowValue;\n                            key = path + rowName;\n\n                            rows[key] = {\n                                uniquePath: path + parentName,\n                                parentName: parentName,\n                                name: rowName,\n                                value: rowValue\n                            };\n\n                            value = aggregatedData[key] || {\n                                items: {},\n                                aggregates: {}\n                            };\n\n                            this._processColumns(measureAggregators, expandedColumns, columnGetters, columns, aggregatorContext, value, state, true);\n\n                            value.aggregates = this._calculateAggregate(measureAggregators, aggregatorContext, value);\n                            aggregatedData[key] = value;\n                        }\n                    }\n                }\n\n                if (processed && length) {\n                    if (measureAggregators.length > 1 && (!options.columns || !options.columns.length)) {\n                        columnDescriptors = {\n                            root: [],\n                            expanded: []\n                        };\n                    }\n\n                    columnsInfo = this._asTuples(columns, columnDescriptors, measuresRowAxis ? [] : measureAggregators, options.sort ? options.sort : []);\n                    rowsInfo = this._asTuples(rows, rowDescriptors, measuresRowAxis ? measureAggregators : [], options.sort ? options.sort : []);\n\n                    columns = columnsInfo.tuples;\n                    rows = rowsInfo.tuples;\n\n                    aggregatedData = this._toDataArray(aggregatedData, this._measuresInfo(measureAggregators, measuresRowAxis), rowsInfo.keys, columnsInfo.keys);\n                } else {\n                    aggregatedData = columns = rows = [];\n                }\n\n                return {\n                    axes: {\n                        columns: { tuples: columns },\n                        rows: { tuples: rows }\n                    },\n                    data: aggregatedData\n                };\n            }\n        });\n\n        var PivotTransport = Class.extend({\n            init: function(options, transport) {\n                this.transport = transport;\n                this.options = transport.options || {};\n\n                if (!this.transport.discover) {\n                    if (isFunction(options.discover)) {\n                        this.discover = options.discover;\n                    }\n                }\n            },\n            read: function(options) {\n                return this.transport.read(options);\n            },\n            update: function(options) {\n                return this.transport.update(options);\n            },\n            create: function(options) {\n                return this.transport.create(options);\n            },\n            destroy: function(options) {\n                return this.transport.destroy(options);\n            },\n            discover: function(options) {\n                if (this.transport.discover) {\n                    return this.transport.discover(options);\n                }\n                options.success({});\n            },\n            catalog: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).catalog;\n\n                }\n\n                var connection = options.connection || {};\n                connection.catalog = val;\n\n                this.options.connection = connection;\n                $.extend(this.transport.options, { connection: connection });\n            },\n            cube: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).cube;\n                }\n\n                var connection = options.connection || {};\n                connection.cube = val;\n\n                this.options.connection = connection;\n                extend(true, this.transport.options, { connection: connection });\n            }\n        });\n\n        var PivotDataSourceV2 = DataSource.extend({\n            init: function(options) {\n\n                var cube = ((options || {}).schema || {}).cube;\n\n                var schema = {\n                    axes: identity,\n                    cubes: identity,\n                    catalogs: identity,\n                    measures: identity,\n                    dimensions: identity,\n                    hierarchies: identity,\n                    levels: identity,\n                    members: identity\n                };\n\n                if (cube) {\n                    this.cubeSchema = $.extend(schema, this._cubeSchema(cube));\n                }\n\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    //schema: schema\n                }, options));\n\n                var transportOptions = this.options.transport || {};\n                if ((this.options.type || \"xmla\").toLowerCase() === \"xmla\") {\n                    this._online = true;\n                    this.transport = new XmlaTransportV2(transportOptions);\n                }\n\n                this._columns = normalizeMembers(this.options.columns);\n                this._rows = normalizeMembers(this.options.rows);\n\n                var measures = this.cubeSchema ? this.cubeSchema.measures() : this.options.measures || [];\n\n                if (toString.call(measures) === \"[object Object]\") {\n                    this._measuresAxis = measures.axis || \"columns\";\n                    measures = measures.values || [];\n                }\n\n                this._measures = normalizeMeasures(measures);\n            },\n\n            options: {\n                serverSorting: true,\n                serverPaging: true,\n                serverFiltering: true,\n                serverGrouping: true,\n                serverAggregates: true\n            },\n\n            axes: function() {\n                return {\n                    columns: normalizeAxis(this.columns()),\n                    rows: normalizeAxis(this.rows())\n                };\n            },\n\n            catalog: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.catalog();\n                }\n\n                this.transport.catalog(val);\n                this._mergeState({});// clears current state\n                this.read();\n            },\n\n            cube: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.cube();\n                }\n\n                this.transport.cube(val);\n                this._mergeState({});// clears current state\n                this.read();\n            },\n\n            measuresAxis: function() {\n                return this._measuresAxis || \"columns\";\n            },\n\n            fetch: function(callback) {\n                var that = this;\n                if (this._data === undefined$1 || this._data.length === 0) {\n                    var fn = function() {\n                        if (isFunction(callback)) {\n                            callback.call(that);\n                        }\n                    };\n\n                    return this._query().done(fn);\n                }\n            },\n\n            _createSettings: function(axes) {\n                var settings = [];\n                var key;\n                var dimensions = this.cubeSchema.dimensionsSettings();\n                var displayValueFunc = function(item) { return item[this.key]; };\n                var sortValueFunc = function(value) { return value; };\n                for (var i = 0; i < axes.length; i++) {\n                    key = axes[i].name[0];\n                    settings.push({\n                        key: key,\n                        displayValue: displayValueFunc.bind({ key: key }),\n                        sortValue: sortValueFunc,\n                        caption: (dimensions[key] || {}).caption || key\n                    });\n                }\n                return settings;\n            },\n\n            _cubeSchema: function(cube) {\n                return {\n                    dimensionsSettings: function() {\n                        return cube.dimensions;\n                    },\n                    dimensions: function() {\n                        var result = [];\n                        var dimensions = cube.dimensions;\n\n                        for (var key in dimensions) {\n                            result.push({\n                                name: key,\n                                caption: dimensions[key].caption || key,\n                                uniqueName: key,\n                                defaultHierarchy: key,\n                                type: 1\n                            });\n                        }\n\n                        if (cube.measures) {\n                            result.push({\n                                name: MEASURES,\n                                caption: MEASURES,\n                                uniqueName: MEASURES,\n                                type: 2\n                            });\n                        }\n\n                        return result;\n                    },\n                    restoreMeasure: function(measures, measure) {\n                        for (var i = 0; i < measures.length; i++) {\n                            if (!measures[i].aggregate) {\n                                measures[i].aggregate = measure.aggregate;\n                                measures[i].value = measure.value;\n                                measures[i].caption = measure.caption;\n                                measures[i].uniqueName = measure.uniqueName;\n                                measures[i].type = 2;\n                            }\n                        }\n                    },\n                    measures: function() {\n                        var result = [];\n                        var measures = cube.measures;\n\n                        for (var key in measures) {\n                            result.push(createLocalMeasure(measures[key].field, key, measures[key].format));\n                        }\n\n                        return result;\n                    },\n                    memberType: function(name) {\n                        var getter = kendo.getter(normalizeName(name), true);\n                        var data = this.options.data || this._pristineData || [];\n                        if (!data.length) {\n                            return null;\n                        }\n\n                        return typeof getter(data[0]);\n                    }.bind(this),\n                    members: function(name) {\n                        var data = this.options.data || this._pristineData || [];\n                        var result = [];\n                        var distinct = {};\n                        var getter;\n                        var value;\n                        var idx = 0;\n\n                        if (name.indexOf(\"[(ALL)]\") !== -1) {\n                            return [\n                                {\n                                    caption: cube.dimensions[name.split(\".\")[0]].caption || name,\n                                    levelUniqueName: name,\n                                    name: name,\n                                    childrenCardinality: 1,\n                                    uniqueName: name\n                                }\n                            ];\n                        }\n\n                        getter = kendo.getter(normalizeName(name), true);\n\n                        for (; idx < data.length; idx++) {\n                            value = getter(data[idx]);\n                            if ((value || value === 0 || value === false) && !distinct[value]) {\n                                distinct[value] = true;\n\n                                result.push({\n                                    caption: value + \"\",\n                                    name: value + \"\",\n                                    childrenCardinality: 0,\n                                    uniqueName: value\n                                });\n                            }\n                        }\n\n                        return result;\n                    }.bind(this)\n                };\n            },\n\n            read: function(data) {\n                var that = this;\n                var isPrevented = that.trigger(REQUESTSTART, { type: READ });\n                var params = that._params(data);\n                var deferred = $.Deferred();\n                if (!isPrevented) {\n                    that.trigger(PROGRESS);\n\n                    if (that.options.data) {\n\n                        var originalData = (this.reader.data(this.options.data) || []).slice(0);\n                        if (originalData && !this._pristineData) {\n                            this._pristineData = originalData;\n                        }\n                        var columnSettings = that._createSettings(params.columnAxes);\n                        var rowSettings = that._createSettings(params.rowAxes);\n                        var measures = that.measures();\n                        var dataTree = createDataTree(that.options.data, rowSettings, columnSettings, measures, { dataField: \"aggregate\", columnsData: \"columns\" }, that.filter() || []);\n\n                        var stateArgs = {\n                            dataTree: dataTree,\n                            columnSettings: columnSettings,\n                            rowSettings: rowSettings,\n                            columnAxes: params.columnAxes,\n                            rowAxes: params.rowAxes,\n                            measures: measures.map(function(item) { return item; }).reverse(),\n                            fields: { dataField: \"aggregate\", columnsData: \"columns\" },\n                            sort: flattenSortDescriptors(params.sort || [])\n                        };\n\n                        that._saveState(createLocalDataState(stateArgs));\n                        that.trigger(CHANGE);\n                        deferred.resolve();\n                    } else {\n                        that.transport.read({\n                            data: params,\n                            success: function(newDataState) {\n                                that._saveState(newDataState);\n                                that.trigger(REQUESTEND, { response: newDataState, type: READ });\n                                that.trigger(CHANGE);\n                                if (that._preventRefresh) {\n                                    that._preventRefresh = false;\n                                }\n                                deferred.resolve();\n                            },\n                            error: function(err) {\n                                that.trigger(ERROR, { error: err });\n                            }\n                        });\n                    }\n                }\n                return deferred.promise();\n            },\n\n            _params: function(data) {\n                var that = this;\n                var options = DataSource.fn._params.call(that, data);\n\n                options = extend({\n                    columnAxes: JSON.parse(JSON.stringify(that._columns)),\n                    rowAxes: JSON.parse(JSON.stringify(that._rows)),\n                    measuresAxis: that.measuresAxis(),\n                    measureAxes: that._measures\n                }, options);\n\n                if ((this.options.type || \"\").toLowerCase() === \"xmla\") {\n                    options.connection = that.options.transport.connection;\n                }\n\n                if (options.filter) {\n                    options.filter = normalizeFilter(options.filter);\n                    options.filter = (options.filter || {}).filters;\n                }\n\n                if (options.sort) {\n                    options.sort = normalizeSort(options.sort);\n                }\n\n                return options;\n            },\n\n            discover: function(options) {\n                var that = this,\n                    transport = that.transport;\n\n                if (transport.discover) {\n                    return transport.discover(options);\n                }\n            },\n\n            schemaMeasures: function() {\n                var that = this;\n                return that.discover(\n                    {\n                        command: \"schemaMeasures\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }, function(response) {\n                        return response;\n                    });\n            },\n\n            schemaKPIs: function() {\n                var that = this;\n\n                return that.discover(\n                {\n                    command: \"schemaKPIs\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaDimensions: function() {\n                var that = this;\n\n                return that.discover(\n                {\n                    command: \"schemaDimensions\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube()\n                    }\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaHierarchies: function(dimensionName) {\n                var that = this;\n\n                return that.discover({\n                   command: \"schemaHierarchies\",\n                   restrictions: {\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube(),\n                       dimensionUniqueName: dimensionName\n                   }\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaLevels: function(hierarchyName) {\n                var that = this;\n\n                return that.discover({\n                    command: \"schemaLevels\",\n                    restrictions: {\n                        catalogName: that.transport.catalog(),\n                        cubeName: that.transport.cube(),\n                        hierarchyUniqueName: hierarchyName\n                    }\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaCubes: function() {\n                var that = this;\n\n                return that.discover({\n                    command: \"schemaCubes\",\n                    restrictions: {\n                        catalogName: that.transport.catalog()\n                    }\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaCatalogs: function() {\n                var that = this;\n\n                return that.discover({\n                    command: \"schemaCatalogs\"\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            schemaMembers: function(restrictions) {\n                var that = this;\n\n                return that.discover({\n                    command: \"schemaMembers\",\n                    restrictions: extend({\n                       catalogName: that.transport.catalog(),\n                       cubeName: that.transport.cube()\n                    }, restrictions)\n                }, function(response) {\n                    return response;\n                });\n            },\n\n            _saveState: function(state) {\n                var that = this;\n\n                that._columnTuples = state.columns;\n                that._rowTuples = state.rows;\n                that._view = that._data = state.data;\n            },\n\n            columns: function(val) {\n                if (val === undefined$1) {\n                    return this._columns;\n                }\n\n                this._columns = normalizeMembers(val);\n                this.read();\n            },\n\n            rows: function(val) {\n                if (val === undefined$1) {\n                    return this._rows;\n                }\n\n                this._rows = normalizeMembers(val);\n\n                this.read();\n            },\n\n            measures: function(val) {\n                if (val === undefined$1) {\n                    return this._measures;\n                }\n\n                this._measures = normalizeMeasures(val);\n\n                this.read();\n            },\n\n            _mergeState: function(options) {\n                options = DataSource.fn._mergeState.call(this, options);\n\n                return options;\n            },\n\n            _query: function(options) {\n                var that = this;\n                var params = extend({}, {\n                    sort: that.sort(),\n                    measuresAxis: that.measuresAxis(),\n                    filter: that.filter()\n                }, options);\n                this._mergeState(params);\n\n                return this.read();\n            },\n        });\n\n        var PivotDataSource = DataSource.extend({\n            init: function(options) {\n                var cube = ((options || {}).schema || {}).cube;\n                var measuresAxis = \"columns\";\n                var measures;\n\n                var schema = {\n                    axes: identity,\n                    cubes: identity,\n                    catalogs: identity,\n                    measures: identity,\n                    dimensions: identity,\n                    hierarchies: identity,\n                    levels: identity,\n                    members: identity\n                };\n\n                if (cube) {\n                    schema = $.extend(schema, this._cubeSchema(cube));\n                    this.cubeBuilder = new PivotCubeBuilder(cube);\n                }\n\n                DataSource.fn.init.call(this, extend(true, {}, {\n                    schema: schema\n                }, options));\n\n                this.transport = new PivotTransport(this.options.transport || {}, this.transport);\n\n                this._columns = normalizeMembers(this.options.columns);\n                this._rows = normalizeMembers(this.options.rows);\n\n                measures = this.options.measures || [];\n\n                if (toString.call(measures) === \"[object Object]\") {\n                    measuresAxis = measures.axis || \"columns\";\n                    measures = measures.values || [];\n                }\n\n                this._measures = normalizeMeasures(measures);\n                this._measuresAxis = measuresAxis;\n\n                this._skipNormalize = 0;\n                this._axes = {};\n            },\n\n            _cubeSchema: function(cube) {\n                return {\n                    dimensions: function() {\n                        var result = [];\n                        var dimensions = cube.dimensions;\n\n                        for (var key in dimensions) {\n                            result.push({\n                                name: key,\n                                caption: dimensions[key].caption || key,\n                                uniqueName: key,\n                                defaultHierarchy: key,\n                                type: 1\n                            });\n                        }\n\n                        if (cube.measures) {\n                            result.push({\n                                name: MEASURES,\n                                caption: MEASURES,\n                                uniqueName: MEASURES,\n                                type: 2\n                            });\n                        }\n\n                        return result;\n                    },\n                    hierarchies: function() {\n                        return [];\n                    },\n                    measures: function() {\n                        var result = [];\n                        var measures = cube.measures;\n\n                        for (var key in measures) {\n                            result.push({\n                                name: key,\n                                caption: key,\n                                uniqueName: key,\n                                aggregator: key\n                            });\n                        }\n\n                        return result;\n                    },\n                    members: function(response, restrictions) {\n                        var name = restrictions.levelUniqueName || restrictions.memberUniqueName;\n                        var schemaData = this.options.schema.data;\n                        var dataGetter = isFunction(schemaData) ? schemaData : kendo.getter(schemaData, true);\n                        var data = (this.options.data && dataGetter(this.options.data)) || this._rawData || [];\n                        var result = [];\n                        var getter;\n                        var value;\n                        var idx = 0;\n                        var distinct = {};\n\n                        if (name) {\n                            name = name.split(\".\")[0];\n                        }\n\n                        if (!restrictions.treeOp) {\n                            result.push({\n                                caption: cube.dimensions[name].caption || name,\n                                childrenCardinality: \"1\",\n                                dimensionUniqueName: name,\n                                hierarchyUniqueName: name,\n                                levelUniqueName: name,\n                                name: name,\n                                uniqueName: name\n                            });\n\n                            return result;\n                        }\n\n                        getter = kendo.getter(normalizeName(name), true);\n\n                        for (; idx < data.length; idx++) {\n                            value = getter(data[idx]);\n                            if ((value || value === 0) && !distinct[value]) {\n                                distinct[value] = true;\n\n                                result.push({\n                                    caption: value,\n                                    childrenCardinality: \"0\",\n                                    dimensionUniqueName: name,\n                                    hierarchyUniqueName: name,\n                                    levelUniqueName: name,\n                                    name: value,\n                                    uniqueName: value\n                                });\n                            }\n                        }\n\n                        return result;\n                    }.bind(this)\n                };\n            },\n\n            options: {\n                serverSorting: true,\n                serverPaging: true,\n                serverFiltering: true,\n                serverGrouping: true,\n                serverAggregates: true\n            },\n\n            catalog: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.catalog();\n                }\n\n                this.transport.catalog(val);\n                this._mergeState({});// clears current state\n                this._axes = {};\n                this.data([]);\n            },\n\n            cube: function(val) {\n                if (val === undefined$1) {\n                    return this.transport.cube();\n                }\n\n                this.transport.cube(val);\n                this._axes = {};\n                this._mergeState({});// clears current state\n                this.data([]);\n            },\n\n            axes: function() {\n                return this._axes;\n            },\n\n            columns: function(val) {\n                if (val === undefined$1) {\n                    return this._columns;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this._columns = normalizeMembers(val);\n                this.query({\n                    columns: val,\n                    rows: this.rowsAxisDescriptors(),\n                    measures: this.measures(),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            rows: function(val) {\n                if (val === undefined$1) {\n                    return this._rows;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this._rows = normalizeMembers(val);\n\n                this.query({\n                    columns: this.columnsAxisDescriptors(),\n                    rows: val,\n                    measures: this.measures(),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            measures: function(val) {\n                if (val === undefined$1) {\n                    return this._measures;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n\n                this.query({\n                    columns: this.columnsAxisDescriptors(),\n                    rows: this.rowsAxisDescriptors(),\n                    measures: normalizeMeasures(val),\n                    sort: this.sort(),\n                    filter: this.filter()\n                });\n            },\n\n            measuresAxis: function() {\n                return this._measuresAxis || \"columns\";\n            },\n\n            _expandPath: function(path, axis) {\n                var origin = axis === \"columns\" ? \"columns\" : \"rows\";\n                var other = axis === \"columns\" ? \"rows\" : \"columns\";\n\n                var members = normalizeMembers(path);\n                var memberToExpand = getName(members[members.length - 1]);\n\n                this._lastExpanded = origin;\n\n                members = descriptorsForMembers(this.axes()[origin], members, this.measures());\n\n                for (var idx = 0; idx < members.length; idx++) {\n                    var memberName = getName(members[idx]);\n\n                    if (memberName === memberToExpand) {\n                        if (members[idx].expand) {\n                            return;\n                        }\n                        members[idx].expand = true;\n                    } else {\n                        members[idx].expand = false;\n                    }\n                }\n\n                var descriptors = {};\n                descriptors[origin] = members;\n                descriptors[other] = this._descriptorsForAxis(other);\n\n                this._query(descriptors);\n            },\n\n            _descriptorsForAxis: function(axis) {\n                var axes = this.axes();\n                var descriptors = this[axis]() || [];\n\n                if (axes && axes[axis] && axes[axis].tuples && axes[axis].tuples[0]) {\n                    descriptors = descriptorsForAxes(axes[axis].tuples || []);\n                }\n                return descriptors;\n            },\n\n            columnsAxisDescriptors: function() {\n                return this._descriptorsForAxis(\"columns\");\n            },\n\n            rowsAxisDescriptors: function() {\n                return this._descriptorsForAxis(\"rows\");\n            },\n\n            _process: function(data, e) {\n                this._view = data;\n\n                e = e || {};\n                e.items = e.items || this._view;\n\n                this.trigger(CHANGE, e);\n            },\n\n            _query: function(options) {\n                var that = this;\n\n                if (!options) {\n                    this._skipNormalize += 1;\n                    this._clearAxesData = true;\n                }\n\n                return that.query(extend({}, {\n                    page: that.page(),\n                    pageSize: that.pageSize(),\n                    sort: that.sort(),\n                    filter: that.filter(),\n                    group: that.group(),\n                    aggregate: that.aggregate(),\n                    columns: this.columnsAxisDescriptors(),\n                    rows: this.rowsAxisDescriptors(),\n                    measures: this.measures()\n                }, options));\n            },\n\n            query: function(options) {\n                var state = this._mergeState(options);\n\n                if (this._data.length && this.cubeBuilder) {\n                    this._params(state);\n                    this._updateLocalData(this._pristineData);\n\n                    return $.Deferred().resolve().promise();\n                }\n\n                return this.read(state);\n            },\n\n            _mergeState: function(options) {\n                options = DataSource.fn._mergeState.call(this, options);\n\n                if (options !== undefined$1) {\n                    this._measures = normalizeMeasures(options.measures);\n\n                    if (options.columns) {\n                        options.columns = normalizeMembers(options.columns);\n                    } else if (!options.columns) {\n                        this._columns = [];\n                    }\n\n                    if (options.rows) {\n                        options.rows = normalizeMembers(options.rows);\n                    } else if (!options.rows) {\n                        this._rows = [];\n                    }\n                }\n                return options;\n            },\n\n            filter: function(val) {\n                if (val === undefined$1) {\n                    return this._filter;\n                }\n\n                this._skipNormalize += 1;\n                this._clearAxesData = true;\n                this._query({ filter: val, page: 1 });\n            },\n\n            expandColumn: function(path) {\n                this._expandPath(path, \"columns\");\n            },\n\n            expandRow: function(path) {\n                this._expandPath(path, \"rows\");\n            },\n\n            success: function(data) {\n                var originalData;\n                if (this.cubeBuilder) {\n                    originalData = (this.reader.data(data) || []).slice(0);\n                }\n                DataSource.fn.success.call(this, data);\n                if (originalData) {\n                    this._pristineData = originalData;\n                }\n            },\n\n            _processResult: function(data, axes) {\n                if (this.cubeBuilder) {\n                    var processedData = this.cubeBuilder.process(data, this._requestData);\n\n                    data = processedData.data;\n                    axes = processedData.axes;\n                }\n\n                var columnIndexes, rowIndexes;\n                var tuples, resultAxis, measures, axisToSkip;\n                var columnDescriptors = this.columns();\n                var rowDescriptors = this.rows();\n                var hasColumnTuples = axes.columns && axes.columns.tuples;\n\n                if (!columnDescriptors.length && rowDescriptors.length && hasColumnTuples && (this._rowMeasures().length || !this.measures().length)) {\n                    axes = {\n                        columns: {},\n                        rows: axes.columns\n                    };\n                }\n\n                if (!columnDescriptors.length && !rowDescriptors.length && this.measuresAxis() === \"rows\" && hasColumnTuples) {\n                    axes = {\n                        columns: {},\n                        rows: axes.columns\n                    };\n                }\n\n                this._axes = {\n                    columns: normalizeAxis(this._axes.columns),\n                    rows: normalizeAxis(this._axes.rows)\n                };\n\n                axes = {\n                    columns: normalizeAxis(axes.columns),\n                    rows: normalizeAxis(axes.rows)\n                };\n\n                columnIndexes = this._normalizeTuples(axes.columns.tuples, this._axes.columns.tuples, columnDescriptors, this._columnMeasures());\n                rowIndexes = this._normalizeTuples(axes.rows.tuples, this._axes.rows.tuples, rowDescriptors, this._rowMeasures());\n\n                if (this._skipNormalize > 0) {\n                    this._skipNormalize -= 1;\n                }\n\n                if (!this.cubeBuilder) {\n                    data = this._normalizeData({\n                        columnsLength: axes.columns.tuples.length,\n                        rowsLength: axes.rows.tuples.length,\n                        columnIndexes: columnIndexes,\n                        rowIndexes: rowIndexes,\n                        data: data\n                    });\n                }\n\n                if (this._lastExpanded == \"rows\") {\n                    tuples = axes.columns.tuples;\n                    measures = this._columnMeasures();\n                    resultAxis = validateAxis(axes.columns, this._axes.columns, measures);\n\n                    if (resultAxis) {\n                        axisToSkip = \"columns\";\n                        axes.columns = resultAxis;\n                        adjustDataByColumn(tuples, resultAxis.tuples, axes.rows.tuples.length, measures, data);\n                        if (!this.cubeBuilder) {\n                            data = this._normalizeData({\n                                columnsLength: membersCount(axes.columns.tuples, measures),\n                                rowsLength: axes.rows.tuples.length,\n                                data: data\n                            });\n                        }\n                    }\n                } else if (this._lastExpanded == \"columns\") {\n                    tuples = axes.rows.tuples;\n                    measures = this._rowMeasures();\n                    resultAxis = validateAxis(axes.rows, this._axes.rows, measures);\n\n                    if (resultAxis) {\n                        axisToSkip = \"rows\";\n                        axes.rows = resultAxis;\n                        adjustDataByRow(tuples, resultAxis.tuples, axes.columns.tuples.length, measures, data);\n\n                        if (!this.cubeBuilder) {\n                            data = this._normalizeData({\n                                columnsLength: membersCount(axes.rows.tuples, measures),\n                                rowsLength: axes.columns.tuples.length,\n                                data: data\n                            });\n                        }\n                    }\n                }\n\n                this._lastExpanded = null;\n\n                var result = this._mergeAxes(axes, data, axisToSkip);\n                this._axes = result.axes;\n\n                return result.data;\n            },\n\n            _readData: function(data) {\n                var axes = this.reader.axes(data);\n                var newData = this.reader.data(data);\n\n                if (this.cubeBuilder) {\n                    this._rawData = newData;\n                }\n\n                return this._processResult(newData, axes);\n            },\n\n            _createTuple: function(tuple, measure, buildRoot) {\n                var members = tuple.members;\n                var length = members.length;\n                var root = { members: [] };\n                var levelName, levelNum;\n                var name, parentName;\n                var hasChildren;\n                var hierarchy;\n                var caption;\n                var member;\n                var idx = 0;\n\n                if (measure) {\n                    length -= 1;\n                }\n\n                for (; idx < length; idx++) {\n                    member = members[idx];\n                    levelNum = Number(member.levelNum);\n\n                    name = member.name;\n                    parentName = member.parentName;\n                    caption = member.caption || name;\n                    hasChildren = member.hasChildren;\n                    hierarchy = member.hierarchy;\n                    levelName = member.levelName;\n\n                    if (buildRoot) {\n                        caption = \"All\";\n                        if (levelNum === 0) {\n                            parentName = member.name;\n                        } else {\n                            levelNum -= 1;\n                        }\n\n                        hasChildren = true;\n                        name = hierarchy = levelName = parentName;\n                    }\n\n                    root.members.push({\n                        name: name,\n                        children: [],\n                        caption: caption,\n                        levelName: levelName,\n                        levelNum: levelNum.toString(),\n                        hasChildren: hasChildren,\n                        hierarchy: hierarchy,\n                        parentName: !buildRoot ? parentName : \"\"\n                    });\n                }\n\n                if (measure) {\n                    root.members.push({\n                        name: measure.name,\n                        children: []\n                    });\n                }\n\n                return root;\n            },\n\n            _hasRoot: function(target, source, descriptors) {\n                if (source.length) {\n                    return findExistingTuple(source, target).tuple;\n                }\n\n                var members = target.members;\n                var member;\n                var descriptor;\n\n                var isRoot = true;\n                var levelNum;\n\n                for (var idx = 0, length = members.length; idx < length; idx++) {\n                    member = members[idx];\n                    levelNum = Number(member.levelNum) || 0;\n                    descriptor = descriptors[idx];\n\n                    if (!(levelNum === 0 || (descriptor && member.name === getName(descriptor)))) {\n                        isRoot = false;\n                        break;\n                    }\n                }\n\n                return isRoot;\n            },\n\n            _mergeAxes: function(sourceAxes, data, axisToSkip) {\n                var columnMeasures = this._columnMeasures();\n                var rowMeasures = this._rowMeasures();\n                var axes = this.axes();\n                var startIndex, tuples;\n\n                var oldRowsLength = membersCount(axes.rows.tuples, rowMeasures);\n                var newRowsLength = sourceAxes.rows.tuples.length;\n\n                var oldColumnsLength = membersCount(axes.columns.tuples, columnMeasures);\n                var newColumnsLength = sourceAxes.columns.tuples.length;\n\n                if (axisToSkip == \"columns\") {\n                    newColumnsLength = oldColumnsLength;\n                    tuples = sourceAxes.columns.tuples;\n                } else {\n                    tuples = parseSource(sourceAxes.columns.tuples, columnMeasures);\n                    data = prepareDataOnColumns(tuples, data);\n                }\n\n                var mergedColumns = mergeTuples(axes.columns.tuples, tuples, columnMeasures);\n\n                if (axisToSkip == \"rows\") {\n                    newRowsLength = membersCount(sourceAxes.rows.tuples, rowMeasures);\n                    tuples = sourceAxes.rows.tuples;\n                } else {\n                    tuples = parseSource(sourceAxes.rows.tuples, rowMeasures);\n                    data = prepareDataOnRows(tuples, data);\n                }\n                var mergedRows = mergeTuples(axes.rows.tuples, tuples, rowMeasures);\n\n                axes.columns.tuples = mergedColumns.tuples;\n                axes.rows.tuples = mergedRows.tuples;\n\n                if (oldColumnsLength !== membersCount(axes.columns.tuples, columnMeasures)) {\n                    //columns are expanded\n                    startIndex = mergedColumns.index + findDataIndex(mergedColumns.parsedRoot, mergedColumns.memberIndex, columnMeasures);\n                    var offset = oldColumnsLength + newColumnsLength;\n                    data = this._mergeColumnData(data, startIndex, newRowsLength, newColumnsLength, offset);\n                } else if (oldRowsLength !== membersCount(axes.rows.tuples, rowMeasures)) {\n                    //rows are expanded\n                    startIndex = mergedRows.index + findDataIndex(mergedRows.parsedRoot, mergedRows.memberIndex, rowMeasures);\n                    data = this._mergeRowData(data, startIndex, newRowsLength, newColumnsLength);\n                }\n\n                if (axes.columns.tuples.length === 0 && axes.rows.tuples.length === 0) {\n                    data = [];\n                }\n\n                return {\n                    axes: axes,\n                    data: data\n                };\n            },\n\n            _mergeColumnData: function(newData, columnIndex, rowsLength, columnsLength, offset) {\n                var data = this.data().toJSON();\n                var rowIndex, index, drop = 0, toAdd;\n                var columnMeasures = Math.max(this._columnMeasures().length, 1);\n\n                rowsLength = Math.max(rowsLength, 1);\n\n                if (data.length > 0) {\n                    //if there is already data, drop the first new data item\n                    drop = columnMeasures;\n                    offset -= columnMeasures;\n                }\n\n                for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                    index = columnIndex + (rowIndex * offset);\n                    toAdd = newData.splice(0, columnsLength);\n                    toAdd.splice(0, drop);\n                    [].splice.apply(data, [index, 0].concat(toAdd));\n                }\n\n                return data;\n            },\n\n            _mergeRowData: function(newData, rowIndex, rowsLength, columnsLength) {\n                var data = this.data().toJSON();\n                var idx, dataIndex, toAdd;\n                var rowMeasures = Math.max(this._rowMeasures().length, 1);\n\n                columnsLength = Math.max(columnsLength, 1);\n                if (data.length > 0) {\n                    //if there is already data, drop the first new data item\n                    rowsLength -= rowMeasures;\n                    newData.splice(0, columnsLength * rowMeasures);\n                }\n\n                for (idx = 0; idx < rowsLength; idx++) {\n                    toAdd = newData.splice(0, columnsLength);\n                    dataIndex = (rowIndex * columnsLength) + (idx * columnsLength);\n                    [].splice.apply(data, [dataIndex, 0].concat(toAdd));\n                }\n\n                return data;\n            },\n\n            _columnMeasures: function() {\n                var measures = this.measures();\n                var columnMeasures = [];\n\n                if (this.measuresAxis() === \"columns\") {\n                    if (this.columns().length === 0) {\n                        columnMeasures = measures;\n                    } else if (measures.length > 1) {\n                        columnMeasures = measures;\n                    }\n                }\n\n                return columnMeasures;\n            },\n\n            _rowMeasures: function() {\n                var measures = this.measures();\n                var rowMeasures = [];\n\n                if (this.measuresAxis() === \"rows\") {\n                    if (this.rows().length === 0) {\n                        rowMeasures = measures;\n                    } else if (measures.length > 1) {\n                        rowMeasures = measures;\n                    }\n                }\n\n                return rowMeasures;\n            },\n\n            _updateLocalData: function(data, state) {\n                if (this.cubeBuilder) {\n                    if (state) {\n                        this._requestData = state;\n                    }\n                    data = this._processResult(data);\n                }\n\n                this._data = this._observe(data);\n\n                this._ranges = [];\n                this._addRange(this._data);\n\n                this._total = this._data.length;\n                this._pristineTotal = this._total;\n                this._process(this._data);\n            },\n\n            data: function(value) {\n                var that = this;\n                if (value !== undefined$1) {\n                    this._pristineData = value.slice(0);\n                    this._updateLocalData(value, {\n                            columns: this.columns(),\n                            rows: this.rows(),\n                            measures: this.measures()\n                        });\n                } else {\n                    return that._data;\n                }\n            },\n\n            _normalizeTuples: function(tuples, source, descriptors, measures) {\n                var length = measures.length || 1;\n                var idx = 0;\n\n                var roots = [];\n                var indexes = {};\n                var measureIdx = 0;\n                var tuple, memberIdx, last;\n\n                if (!tuples.length) {\n                    return;\n                }\n\n                if (this._skipNormalize <= 0 && !this._hasRoot(tuples[0], source, descriptors)) {\n                    this._skipNormalize = 0;\n                    for (; idx < length; idx++) {\n                        roots.push(this._createTuple(tuples[0], measures[idx], true));\n                        indexes[idx] = idx;\n                    }\n\n                    tuples.splice.apply(tuples, [0, tuples.length].concat(roots).concat(tuples));\n                    idx = length;\n                }\n\n                if (measures.length) {\n                    last = tuple = tuples[idx];\n                    memberIdx = tuple.members.length - 1;\n\n                    while (tuple) {\n                        if (measureIdx >= length) {\n                            measureIdx = 0;\n                        }\n\n                        if (tuple.members[memberIdx].name !== measures[measureIdx].name) {\n                            tuples.splice(idx, 0, this._createTuple(tuple, measures[measureIdx]));\n                            indexes[idx] = idx;\n                        }\n\n                        idx += 1;\n                        measureIdx += 1;\n                        tuple = tuples[idx];\n\n                        if (length > measureIdx && (!tuple || tupleName(last, memberIdx - 1) !== tupleName(tuple, memberIdx - 1))) {\n                            for (; measureIdx < length; measureIdx++) {\n                                tuples.splice(idx, 0, this._createTuple(last, measures[measureIdx]));\n                                indexes[idx] = idx;\n                                idx += 1;\n                            }\n                            tuple = tuples[idx];\n                        }\n                        last = tuple;\n                    }\n                }\n\n                return indexes;\n            },\n\n            _addMissingDataItems: function(result, metadata) {\n                while (metadata.rowIndexes[parseInt(result.length / metadata.columnsLength, 10)] !== undefined$1) {\n                    for (var idx = 0; idx < metadata.columnsLength; idx++) {\n                        result = addEmptyDataItem(result);\n                    }\n                }\n\n                while (metadata.columnIndexes[result.length % metadata.columnsLength] !== undefined$1) {\n                    result = addEmptyDataItem(result);\n                }\n\n                return result;\n            },\n\n            _normalizeOrdinals: function(result, dataItem, metadata) {\n                var lastOrdinal = metadata.lastOrdinal;\n\n                if (!dataItem) {\n                    return addEmptyDataItem(result);\n                }\n\n                if ((dataItem.ordinal - lastOrdinal) > 1) {\n                    lastOrdinal += 1;\n\n                    while (lastOrdinal < dataItem.ordinal && result.length < metadata.length) {\n                        result = this._addMissingDataItems(addEmptyDataItem(result), metadata);\n                        lastOrdinal += 1;\n                    }\n                }\n\n                dataItem.ordinal = result.length;\n                result[result.length] = dataItem;\n\n                return result;\n            },\n\n            _normalizeData: function(options) {\n                var data = options.data;\n                var dataIdx = 0;\n                var dataItem;\n                var result = [];\n                var lastOrdinal;\n                var length;\n\n                options.lastOrdinal = 0;\n                options.columnIndexes = options.columnIndexes || {};\n                options.rowIndexes = options.rowIndexes || {};\n                options.columnsLength = options.columnsLength || 1;\n                options.rowsLength = options.rowsLength || 1;\n                options.length = options.columnsLength * options.rowsLength;\n                length = options.length;\n\n                if (data.length === length) {\n                    return data;\n                }\n\n                while (result.length < length) {\n                    dataItem = data[dataIdx++];\n                    if (dataItem) {\n                        lastOrdinal = dataItem.ordinal;\n                    }\n\n                    result = this._normalizeOrdinals(this._addMissingDataItems(result, options), dataItem, options);\n\n                    options.lastOrdinal = lastOrdinal;\n                }\n\n                return result;\n            },\n\n            discover: function(options, converter) {\n                var that = this,\n                    transport = that.transport;\n\n                return $.Deferred(function(deferred) {\n                    transport.discover(extend({\n                        success: function(response) {\n                           response = that.reader.parse(response);\n\n                            if (that._handleCustomErrors(response)) {\n                                return;\n                            }\n\n                            if (converter) {\n                                response = converter(response);\n                            }\n                            deferred.resolve(response);\n                        },\n                        error: function(response, status, error) {\n                            deferred.reject(response);\n                            that.error(response, status, error);\n                        }\n                    }, options));\n                }).promise().done(function() {\n                    that.trigger(\"schemaChange\");\n                });\n            },\n\n            schemaMeasures: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaMeasures\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.measures(response);\n                });\n            },\n\n            schemaKPIs: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaKPIs\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.kpis(response);\n                });\n            },\n\n            schemaDimensions: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaDimensions\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.dimensions(response);\n                });\n            },\n\n            schemaHierarchies: function(dimensionName) {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaHierarchies\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube(),\n                            dimensionUniqueName: dimensionName\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.hierarchies(response);\n                });\n            },\n\n            schemaLevels: function(hierarchyName) {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaLevels\",\n                        restrictions: {\n                            catalogName: that.transport.catalog(),\n                            cubeName: that.transport.cube(),\n                            hierarchyUniqueName: hierarchyName\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.levels(response);\n                });\n            },\n\n            schemaCubes: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaCubes\",\n                        restrictions: {\n                            catalogName: that.transport.catalog()\n                        }\n                    }\n                }, function(response) {\n                    return that.reader.cubes(response);\n                });\n            },\n\n            schemaCatalogs: function() {\n                var that = this;\n\n                return that.discover({\n                    data: {\n                        command: \"schemaCatalogs\"\n                    }\n                }, function(response) {\n                    return that.reader.catalogs(response);\n                });\n            },\n\n            schemaMembers: function(restrictions) {\n                var that = this;\n                var success = (function(restrictions) {\n                    return function(response) {\n                        return that.reader.members(response, restrictions);\n                    };\n                }(restrictions));\n\n                return that.discover({\n                    data: {\n                        command: \"schemaMembers\",\n                        restrictions: extend({\n                           catalogName: that.transport.catalog(),\n                           cubeName: that.transport.cube()\n                       }, restrictions)\n                    }\n                }, success);\n            },\n\n            _params: function(data) {\n                if (this._clearAxesData) {\n                    this._axes = {};\n                    this._data = this._observe([]);\n                    this._clearAxesData = false;\n                    this.trigger(STATERESET);\n                }\n\n                var options = DataSource.fn._params.call(this, data);\n\n                options = extend({\n                    measures: this.measures(),\n                    measuresAxis: this.measuresAxis(),\n                    columns: this.columns(),\n                    rows: this.rows()\n                }, options);\n\n                if (this.cubeBuilder) {\n                    this._requestData = options;\n                }\n\n                return options;\n            }\n        });\n\n        function flatColumns(columns) {\n            var result = [];\n            for (var idx = 0; idx < columns.length; idx++) {\n                result.push(columns[idx]);\n                if (columns[idx].children) {\n                    result = result.concat(flatColumns(columns[idx].children));\n                }\n            }\n\n            return result;\n        }\n\n        function sortItemsTree(field, items, sortFunction) {\n            for (var i = 0; i < items.length; i++) {\n                if (items[i].children && items[i].children.length) {\n                    sortItemsTree(field, items[i].children, sortFunction);\n                }\n            }\n            if (items[0].parentName != field) {\n                return;\n            }\n            items = items.sort(sortFunction);\n        }\n\n        function fillSortTree(items, map) {\n            for (var i = 0; i < items.length; i++) {\n                var currentItem = map[items[i].name];\n\n                if (!$.isEmptyObject(currentItem.childrenMap)) {\n                    items[i].children = [];\n                    for (var name in currentItem.childrenMap) {\n                        items[i].children.push($.extend({}, { name: name, parentName: map[name].parentName }));\n                    }\n\n                    fillSortTree(items[i].children, map);\n                }\n            }\n        }\n\n        function addEmptyDataItem(result) {\n            result[result.length] = { value: \"\", fmtValue: \"\", ordinal: result.length };\n            return result;\n        }\n\n        function validateAxis(newAxis, axis, measures) {\n            if (newAxis.tuples.length < membersCount(axis.tuples, measures)) {\n\n                return axis;\n            }\n\n            return;\n        }\n\n        function adjustDataByColumn(sourceTuples, targetTuples, rowsLength, measures, data) {\n            var columnIdx, rowIdx, dataIdx;\n            var columnsLength = sourceTuples.length;\n            var targetColumnsLength = membersCount(targetTuples, measures);\n            var measuresLength = measures.length || 1;\n\n            for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n                for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                    dataIdx = tupleIndex(sourceTuples[columnIdx], targetTuples) * measuresLength;\n                    dataIdx += columnIdx % measuresLength;\n\n                    data[rowIdx * columnsLength + columnIdx].ordinal = rowIdx * targetColumnsLength + dataIdx;\n                }\n            }\n        }\n\n        function adjustDataByRow(sourceTuples, targetTuples, columnsLength, measures, data) {\n            var columnIdx, rowIdx, dataIdx;\n            var rowsLength = sourceTuples.length;\n            var measuresLength = measures.length || 1;\n\n            for (rowIdx = 0; rowIdx < rowsLength; rowIdx++) {\n                dataIdx = tupleIndex(sourceTuples[rowIdx], targetTuples);\n                dataIdx *= measuresLength;\n                dataIdx += rowIdx % measuresLength;\n\n                for (columnIdx = 0; columnIdx < columnsLength; columnIdx++) {\n                    data[rowIdx * columnsLength + columnIdx].ordinal = dataIdx * columnsLength + columnIdx;\n                }\n            }\n        }\n\n        function tupleIndex(tuple, collection) {\n            return findExistingTuple(collection, tuple).index;\n        }\n\n        function membersCount(tuples, measures) {\n            if (!tuples.length) {\n                return 0;\n            }\n\n            var queue = tuples.slice();\n            var current = queue.shift();\n            var result = 1;\n\n            while (current) {\n                if (current.members) {\n                    [].push.apply(queue, current.members);\n                } else if (current.children) {\n                    if (!current.measure) {\n                        result += current.children.length;\n                    }\n                    [].push.apply(queue, current.children);\n                }\n\n                current = queue.shift();\n            }\n\n            if (measures.length) {\n                result = result * measures.length;\n            }\n\n            return result;\n        }\n\n        function normalizeAxis(axis) {\n            if (!axis) {\n                axis = {\n                    tuples: []\n                };\n            }\n\n            if (!axis.tuples) {\n                axis.tuples = [];\n            }\n\n            return axis;\n        }\n\n        function findDataIndex(tuple, memberIndex, measures) {\n            if (!tuple) {\n                return 0;\n            }\n\n            var measuresLength = Math.max(measures.length, 1);\n            var tuples = tuple.members.slice(0, memberIndex);\n            var current = tuples.shift();\n\n            //the initial value is equal to the total number of measures\n            //as the measures member is not extracted from the members of the starting tuple\n            //but should be calculated in the final result\n            var counter = measuresLength;\n\n            while (current) {\n                if (current.name === MEASURES) {\n                    //subtract 1 as the measures member has been already counted as a single standard member\n                    //but we are interested in the total number of measures instead\n                    counter += (measuresLength - 1);\n                } else if (current.children) {\n                    //is member\n                    [].push.apply(tuples, current.children);\n                } else {\n                    //is tuple\n                    counter ++;\n                    [].push.apply(tuples, current.members);\n                }\n\n                current = tuples.shift();\n            }\n\n            return counter;\n        }\n\n        function mergeTuples(target, source, measures) {\n            if (!source[0]) {\n                return {\n                    parsedRoot: null,\n                    tuples: target,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            var result = findExistingTuple(target, source[0]);\n\n            if (!result.tuple) {\n                return {\n                    parsedRoot: null,\n                    tuples: source,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            var targetMembers = result.tuple.members;\n            var sourceMembers = source[0].members;\n            var memberIndex = -1;\n\n            if (targetMembers.length !== sourceMembers.length) {\n                return {\n                    parsedRoot: null,\n                    tuples: source,\n                    memberIndex: 0,\n                    index: 0\n                };\n            }\n\n            for (var idx = 0, length = targetMembers.length; idx < length; idx++) {\n                if (!targetMembers[idx].measure && sourceMembers[idx].children[0]) {\n                    if (memberIndex == -1 && sourceMembers[idx].children.length) {\n                        memberIndex = idx;\n                    }\n\n                    targetMembers[idx].children = sourceMembers[idx].children;\n                }\n            }\n\n            measures = Math.max(measures.length, 1);\n\n            return {\n                parsedRoot: result.tuple,\n                index: result.index * measures,\n                memberIndex: memberIndex,\n                tuples: target\n            };\n        }\n\n        function equalTuples(first, second) {\n            var equal = true;\n            var idx, length;\n\n            first = first.members;\n            second = second.members;\n\n            for (idx = 0, length = first.length; idx < length; idx++) {\n                if (first[idx].measure || second[idx].measure) {\n                    continue;\n                }\n\n                equal = equal && (getName(first[idx]) === getName(second[idx]));\n            }\n\n            return equal;\n        }\n\n        function findExistingTuple(tuples, toFind) {\n            var idx, length, tuple, found, counter = 0;\n            var memberIndex, membersLength, member;\n\n            for (idx = 0, length = tuples.length; idx < length; idx++) {\n                tuple = tuples[idx];\n                if (equalTuples(tuple, toFind)) {\n                    return {\n                        tuple: tuple,\n                        index: counter\n                    };\n                }\n\n                counter ++;\n\n                for (memberIndex = 0, membersLength = tuple.members.length; memberIndex < membersLength; memberIndex++) {\n                    member = tuple.members[memberIndex];\n                    if (member.measure) {\n                        //counter += member.children.length;\n                        continue;\n                    }\n                    found = findExistingTuple(member.children, toFind);\n                    counter += found.index;\n                    if (found.tuple) {\n                        return {\n                            tuple: found.tuple,\n                            index: counter\n                        };\n                    }\n                }\n            }\n\n            return {\n                index: counter\n            };\n        }\n\n        function addMembers(members, map) {\n            var member, i, len, path = \"\";\n            for (i = 0, len = members.length; i < len; i++) {\n                member = members[i];\n                path += member.name;\n                if (!map[path]) {\n                    map[path] = member;\n                }\n            }\n        }\n\n\n        function findParentMember(tuple, map) {\n            var members = tuple.members;\n            var i, len, member, path = \"\";\n            var parentPath = \"\";\n            var parentMember;\n\n            for (i = 0, len = members.length; i < len; i++) {\n                member = members[i];\n                if (parentMember) {\n                    if (map[path + member.name]) {\n                        path += member.name;\n                        parentMember = map[path];\n                        continue;\n                    } else if (map[path + member.parentName]) {\n                        return map[path + member.parentName];\n                    } else if (map[parentPath + member.parentName]) {\n                        return map[parentPath + member.parentName];\n                    } else {\n                        return map[parentPath];\n                    }\n                }\n\n                path += member.name;\n                parentMember = map[member.parentName];\n\n                if (!parentMember) {\n                    parentMember = map[path];\n                    if (!parentMember) {\n                        return null;\n                    }\n                }\n\n                if (parentMember) {\n                    parentPath += parentMember.name;\n                }\n            }\n\n            return parentMember;\n        }\n\n        function measurePosition(tuple, measures) {\n            if (measures.length === 0) {\n                return -1;\n            }\n\n            var measure = measures[0];\n            var members = tuple.members;\n            for (var idx = 0, len = members.length; idx < len; idx ++) {\n                if (members[idx].name == measure.name) {\n                    return idx;\n                }\n            }\n        }\n\n        function normalizeTupleMeasures(tuple, index) {\n            if (index < 0) {\n                return;\n            }\n            var member = {\n                name: MEASURES,\n                measure: true,\n                children: [\n                    $.extend({ members: [], dataIndex: tuple.dataIndex }, tuple.members[index])\n                ]\n            };\n            tuple.members.splice(index, 1, member);\n            tuple.dataIndex = undefined$1;\n        }\n\n        function parseSource(tuples, measures) {\n            if (tuples.length < 1) {\n                return [];\n            }\n            var result = [];\n            var map = { };\n            var measureIndex = measurePosition(tuples[0], measures);\n\n            for (var i = 0; i < tuples.length; i++) {\n                var tuple = tuples[i];\n\n                //keep the old data index of the tuple\n                tuple.dataIndex = i;\n\n                normalizeTupleMeasures(tuple, measureIndex);\n                var parentMember = findParentMember(tuple, map);\n\n                if (parentMember) {\n                    if (measureIndex < 0 || !parentMember.measure) {\n                        parentMember.children.push(tuple);\n                    } else {\n                        parentMember.children.push(tuple.members[measureIndex].children[0]);\n                    }\n                } else {\n                    result.push(tuple);\n                }\n\n                addMembers(tuple.members, map);\n            }\n\n            return result;\n        }\n\n        function prepareDataOnRows(tuples, data) {\n            if (!tuples || !tuples.length) {\n                return data;\n            }\n\n            var result = [];\n            var indices = buildDataIndices(tuples);\n            var rowsLength = indices.length;\n            var columnsLength = Math.max(data.length / rowsLength, 1);\n            var rowIndex, columnIndex, targetIndex, sourceIndex;\n            var calcIndex;\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                targetIndex = columnsLength * rowIndex;\n                sourceIndex = columnsLength * indices[rowIndex];\n                for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                    calcIndex = parseInt(sourceIndex + columnIndex, 10);\n                    result[parseInt(targetIndex + columnIndex, 10)] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n                }\n            }\n\n            return result;\n        }\n\n        function prepareDataOnColumns(tuples, data) {\n            if (!tuples || !tuples.length) {\n                return data;\n            }\n\n            var result = [];\n            var indices = buildDataIndices(tuples);\n            var columnsLength = indices.length;\n            var rowsLength = Math.max(data.length / columnsLength, 1);\n            var columnIndex, rowIndex, dataIndex, calcIndex;\n\n            for (rowIndex = 0; rowIndex < rowsLength; rowIndex++) {\n                dataIndex = columnsLength * rowIndex;\n                for (columnIndex = 0; columnIndex < columnsLength; columnIndex++) {\n                    calcIndex = indices[columnIndex] + dataIndex;\n                    result[dataIndex + columnIndex] = data[calcIndex] || { value: \"\", fmtValue: \"\", ordinal: calcIndex };\n                }\n            }\n\n            return result;\n        }\n\n        function buildDataIndices(tuples) {\n            tuples = tuples.slice();\n            var result = [];\n            var tuple = tuples.shift();\n            var idx, length, spliceIndex, children, member;\n\n            while (tuple) {\n                //required for multiple measures\n                if (tuple.dataIndex !== undefined$1) {\n                    result.push(tuple.dataIndex);\n                }\n\n                spliceIndex = 0;\n                for (idx = 0, length = tuple.members.length; idx < length; idx++) {\n                    member = tuple.members[idx];\n                    children = member.children;\n                    if (member.measure) {\n                        [].splice.apply(tuples, [0, 0].concat(children));\n                    } else {\n                        [].splice.apply(tuples, [spliceIndex, 0].concat(children));\n                    }\n                    spliceIndex += children.length;\n                }\n\n                tuple = tuples.shift();\n            }\n\n            return result;\n        }\n\n        PivotDataSourceV2.create = function(options) {\n            options = options && options.push ? { data: options } : options;\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            dataSource.data = data;\n\n            if (!(dataSource instanceof PivotDataSourceV2) && dataSource instanceof kendo.data.DataSource) {\n                throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n            }\n\n            return dataSource instanceof PivotDataSourceV2 ? dataSource : new PivotDataSourceV2(dataSource);\n        };\n\n        PivotDataSource.create = function(options) {\n            options = options && options.push ? { data: options } : options;\n\n            var dataSource = options || {},\n                data = dataSource.data;\n\n            dataSource.data = data;\n\n            if (!(dataSource instanceof PivotDataSource) && dataSource instanceof kendo.data.DataSource) {\n                throw new Error(\"Incorrect DataSource type. Only PivotDataSource instances are supported\");\n            }\n\n            return dataSource instanceof PivotDataSource ? dataSource : new PivotDataSource(dataSource);\n        };\n\n        function baseHierarchyPath(memberName) {\n            var parts = memberName.split(\".\");\n            if (parts.length > 2) {\n                return parts[0] + \".\" + parts[1];\n            }\n            return memberName;\n        }\n\n        function expandMemberDescriptor(names, sort) {\n            var idx = names.length - 1;\n            var name = names[idx];\n            var sortDescriptor;\n\n            sortDescriptor = sortDescriptorForMember(sort, name);\n\n            if (sortDescriptor && sortDescriptor.dir) {\n                name = \"ORDER(\" + name + \".Children,\" + sortDescriptor.field + \".CurrentMember.MEMBER_CAPTION,\" + sortDescriptor.dir + \")\";\n            } else {\n                name += \".Children\";\n            }\n\n            names[idx] = name;\n\n            return names;\n        }\n\n        function sortDescriptorForMember(sort, member) {\n            for (var idx = 0, length = sort.length; idx < length; idx++) {\n                if (member.indexOf(sort[idx].field) === 0) {\n                    return sort[idx];\n                }\n            }\n            return null;\n        }\n\n        function crossJoin(names) {\n            var result = \"CROSSJOIN({\";\n            var r;\n\n            if (names.length > 2) {\n                r = names.pop();\n                result += crossJoin(names);\n            } else {\n                result += names.shift();\n                r = names.pop();\n            }\n\n            result += \"},{\";\n            result += r;\n            result += \"})\";\n            return result;\n        }\n\n        function crossJoinCommand(members, measures) {\n            var tmp = members.slice(0);\n\n            if (measures.length > 1) {\n                tmp.push(\"{\" + measureNames(measures).join(\",\") + \"}\");\n            }\n\n            return crossJoin(tmp);\n        }\n\n        function measureNames(measures) {\n            var idx = 0;\n            var length = measures.length;\n            var result = [];\n            var measure;\n\n            for (; idx < length; idx++) {\n                measure = measures[idx];\n                result.push(measure.name !== undefined$1 ? measure.name : measure);\n            }\n\n            return result;\n        }\n\n        function indexOf(name, items) {\n            var idx, length, index = -1;\n\n            for (idx = 0, length = items.length; idx < length; idx++) {\n                if (getName(items[idx]) === name) {\n                    index = idx;\n                    break;\n                }\n            }\n            return index;\n        }\n\n        function getName(name) {\n            name = name.name || name;\n\n            if (toString.call(name) === \"[object Array]\") {\n                name = name[name.length - 1];\n            }\n\n            return name;\n        }\n\n        function getRootNames(members) {\n            var length = members.length;\n            var names = [];\n            var idx = 0;\n\n            for (; idx < length; idx++) {\n                names.push(members[idx].name[0]);\n            }\n\n            return names;\n        }\n\n        function mapNames(names, rootNames) {\n            var name;\n            var rootName;\n\n            var j;\n            var idx = 0;\n            var length = names.length;\n            var rootLength = rootNames.length;\n\n            rootNames = rootNames.slice(0);\n\n            for (; idx < length; idx++) {\n                name = names[idx];\n\n                for (j = 0; j < rootLength; j++) {\n                    rootName = baseHierarchyPath(rootNames[j]);\n\n                    if (name.indexOf(rootName) !== -1) {\n                        rootNames[j] = name;\n                        break;\n                    }\n                }\n            }\n\n            return {\n                names: rootNames,\n                expandedIdx: j,\n                uniquePath: rootNames.slice(0, j + 1).join(\"\")\n            };\n        }\n\n        function parseDescriptors(members) {\n            var expanded = [];\n            var child = [];\n            var root = [];\n            var member;\n\n            var j, l;\n            var idx = 0;\n            var length = members.length;\n\n            var name;\n            var hierarchyName;\n\n            var found;\n\n            for (; idx < length; idx++) {\n                member = members[idx];\n                name = member.name;\n                found = false;\n\n                if (toString.call(name) !== \"[object Array]\") {\n                    member.name = name = [name];\n                }\n\n                if (name.length > 1) {\n                    child.push(member);\n                } else {\n                    hierarchyName = baseHierarchyPath(name[0]);\n\n                    for (j = 0, l = root.length; j < l; j++) {\n                        if (root[j].name[0].indexOf(hierarchyName) === 0) {\n                            found = true;\n                            break;\n                        }\n                    }\n\n                    if (!found) {\n                        root.push(member);\n                    }\n\n                    if (member.expand) {\n                        expanded.push(member);\n                    }\n                }\n            }\n\n            expanded = expanded.concat(child);\n\n            return {\n                root: root,\n                expanded: expanded\n            };\n        }\n\n        function serializeMembers(members, measures, sort) {\n            var command = \"\";\n\n            members = members || [];\n\n            var expanded = parseDescriptors(members);\n            var root = expanded.root;\n\n            var rootNames = getRootNames(root);\n            var crossJoinCommands = [];\n\n            expanded = expanded.expanded;\n\n            var length = expanded.length;\n            var idx = 0;\n\n            var memberName;\n            var names = [];\n\n            if (rootNames.length > 1 || measures.length > 1) {\n                crossJoinCommands.push(crossJoinCommand(rootNames, measures));\n\n                for (; idx < length; idx++) {\n                    memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                    names = mapNames(memberName, rootNames).names;\n\n                    crossJoinCommands.push(crossJoinCommand(names, measures));\n                }\n\n                command += crossJoinCommands.join(\",\");\n            } else {\n                for (; idx < length; idx++) {\n                    memberName = expandMemberDescriptor(expanded[idx].name, sort);\n                    names.push(memberName[0]); //check if this is ok\n                }\n\n                command += rootNames.concat(names).join(\",\");\n            }\n\n            return command;\n        }\n\n        var filterFunctionFormats = {\n            contains: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\") > 0\",\n            doesnotcontain: \", InStr({0}.CurrentMember.MEMBER_CAPTION,\\\"{1}\\\")\",\n            startswith: \", Left({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n            endswith: \", Right({0}.CurrentMember.MEMBER_CAPTION,Len(\\\"{1}\\\"))=\\\"{1}\\\"\",\n            eq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\",\n            neq: \", {0}.CurrentMember.MEMBER_CAPTION = \\\"{1}\\\"\"\n        };\n\n        function serializeExpression(expression) {\n            var command = \"\";\n            var value = expression.value;\n            var field = expression.field;\n            var operator = expression.operator;\n\n            if (operator == \"in\") {\n                command += \"{\";\n                command += value;\n                command += \"}\";\n            } else {\n                command += operator == \"neq\" || operator == \"doesnotcontain\" ? \"-\" : \"\";\n                command += \"Filter(\";\n                command += field + \".MEMBERS\";\n                command += kendo.format(filterFunctionFormats[operator], field, value);\n                command += \")\";\n            }\n\n            return command;\n        }\n\n        function serializeFilters(filter, cube) {\n            var command = \"\", current;\n            var filters = filter.filters;\n            var length = filters.length;\n            var idx;\n\n            for (idx = length - 1; idx >= 0; idx--) {\n\n                current = \"SELECT (\";\n                current += serializeExpression(filters[idx]);\n                current += \") ON 0\";\n\n                if (idx == length - 1) {\n                    current += \" FROM [\" + cube + \"]\";\n                    command = current;\n                } else {\n                    command = current + \" FROM ( \" + command + \" )\";\n                }\n            }\n\n            return command;\n        }\n\n        function serializeOptions(parentTagName, options, capitalize) {\n            var result = \"\";\n\n            if (options) {\n                result += \"<\" + parentTagName + \">\";\n                var value;\n                for (var key in options) {\n                    value = options[key];\n                    if (capitalize) {\n                        key = key.replace(/([A-Z]+(?=$|[A-Z][a-z])|[A-Z]?[a-z]+)/g, \"$1_\").toUpperCase().replace(/_$/, \"\");\n                    }\n                    result += \"<\" + key + \">\" + value + \"</\" + key + \">\";\n                }\n                result += \"</\" + parentTagName + \">\";\n            } else {\n                result += \"<\" + parentTagName + \"/>\";\n            }\n            return result;\n        }\n\n        var xmlaDiscoverCommands = {\n            schemaCubes: \"MDSCHEMA_CUBES\",\n            schemaCatalogs: \"DBSCHEMA_CATALOGS\",\n            schemaMeasures: \"MDSCHEMA_MEASURES\",\n            schemaDimensions: \"MDSCHEMA_DIMENSIONS\",\n            schemaHierarchies: \"MDSCHEMA_HIERARCHIES\",\n            schemaLevels: \"MDSCHEMA_LEVELS\",\n            schemaMembers: \"MDSCHEMA_MEMBERS\",\n            schemaKPIs: \"MDSCHEMA_KPIS\"\n        };\n\n        var convertersMap = {\n            read: function(options) {\n                var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Execute xmlns=\"urn:schemas-microsoft-com:xml-analysis\"><Command><Statement>';\n\n                command += \"SELECT NON EMPTY {\";\n\n                var columns = options.columns || [];\n                var rows = options.rows || [];\n\n                var measures = options.measures || [];\n                var measuresRowAxis = options.measuresAxis === \"rows\";\n                var sort = options.sort || [];\n\n                if (!columns.length && rows.length && (!measures.length || (measures.length && measuresRowAxis))) {\n                    columns = rows;\n                    rows = [];\n                    measuresRowAxis = false;\n                }\n\n                if (!columns.length && !rows.length) {\n                    measuresRowAxis = false;\n                }\n\n                if (columns.length) {\n                    command += serializeMembers(columns, !measuresRowAxis ? measures : [], sort);\n                } else if (measures.length && !measuresRowAxis) {\n                    command += measureNames(measures).join(\",\");\n                }\n\n                command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON COLUMNS\";\n\n                if (rows.length || (measuresRowAxis && measures.length > 1)) {\n                    command += \", NON EMPTY {\";\n\n                    if (rows.length) {\n                        command += serializeMembers(rows, measuresRowAxis ? measures : [], sort);\n                    } else {\n                        command += measureNames(measures).join(\",\");\n                    }\n\n                    command += \"} DIMENSION PROPERTIES CHILDREN_CARDINALITY, PARENT_UNIQUE_NAME ON ROWS\";\n                }\n\n                if (options.filter) {\n                    command += \" FROM \";\n                    command += \"(\";\n                    command += serializeFilters(options.filter, options.connection.cube);\n                    command += \")\";\n                } else {\n                    command += \" FROM [\" + options.connection.cube + \"]\";\n                }\n\n                if (measures.length == 1 && columns.length) {\n                    command += \" WHERE (\" + measureNames(measures).join(\",\") + \")\";\n                }\n\n                command += '</Statement></Command><Properties><PropertyList><Catalog>' + options.connection.catalog + '</Catalog><Format>Multidimensional</Format></PropertyList></Properties></Execute></Body></Envelope>';\n                return command.replace(/\\&/g, \"&amp;\");\n            },\n            discover: function(options) {\n                options = options || {};\n\n                var command = '<Envelope xmlns=\"http://schemas.xmlsoap.org/soap/envelope/\"><Header/><Body><Discover xmlns=\"urn:schemas-microsoft-com:xml-analysis\">';\n                command += \"<RequestType>\" + (xmlaDiscoverCommands[options.command] || options.command) + \"</RequestType>\";\n\n                command += \"<Restrictions>\" + serializeOptions(\"RestrictionList\", options.restrictions, true) + \"</Restrictions>\";\n\n                if (options.connection && options.connection.catalog) {\n                    options.properties = $.extend({}, {\n                        Catalog: options.connection.catalog\n                    }, options.properties);\n                }\n\n                command += \"<Properties>\" + serializeOptions(\"PropertyList\", options.properties) + \"</Properties>\";\n\n                command += '</Discover></Body></Envelope>';\n                return command;\n            }\n        };\n\n        var XmlaTransport = kendo.data.RemoteTransport.extend({\n            init: function(options) {\n                var originalOptions = options;\n\n                options = this.options = extend(true, {}, this.options, options);\n\n                kendo.data.RemoteTransport.call(this, options);\n\n                if (isFunction(originalOptions.discover)) {\n                    this.discover = originalOptions.discover;\n                } else if (typeof originalOptions.discover === \"string\") {\n                    this.options.discover = {\n                        url: originalOptions.discover\n                    };\n                } else if (!originalOptions.discover) {\n                    this.options.discover = this.options.read;\n                }\n            },\n            setup: function(options, type) {\n                options.data = options.data || {};\n                $.extend(true, options.data, { connection: this.options.connection });\n\n                return kendo.data.RemoteTransport.fn.setup.call(this, options, type);\n            },\n            options: {\n                read: {\n                    dataType: \"text\",\n                    contentType: \"text/xml\",\n                    type: \"POST\"\n                },\n                discover: {\n                    dataType: \"text\",\n                    contentType: \"text/xml\",\n                    type: \"POST\"\n                },\n                parameterMap: function(options, type) {\n                    return convertersMap[type](options,type);\n                }\n            },\n\n            discover: function(options) {\n                return $.ajax(this.setup(options, \"discover\"));\n            }\n        });\n\n        var XmlaTransportV2 = Class.extend({\n            init: function(options) {\n                options = this.options = extend(true, {}, this.options, options);\n            },\n            setup: function(options) {\n                return $.extend(true, options || {}, { connection: this.options.connection });\n            },\n            read: function(options) {\n                var that = this,\n                    success,\n                    error;\n\n                var fetchOptions = that.setup(options.data, READ);\n\n                success = options.success || $.noop;\n                error = options.error || $.noop;\n\n                if (options.parameterMap) {\n                    fetchOptions = that.parameterMap(fetchOptions, READ);\n                }\n\n                fetchData({ url: that.options.read }, fetchOptions)\n                .then(createDataState)\n                .then(function(newDataState) {\n                    success(newDataState);\n                })\n                .catch(function(err) { error(err); });\n            },\n\n            catalog: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).catalog;\n\n                }\n\n                var connection = options.connection || {};\n                connection.catalog = val;\n\n                this.options.connection = connection;\n                $.extend(this.transport.options, { connection: connection });\n            },\n            cube: function(val) {\n                var options = this.options || {};\n\n                if (val === undefined$1) {\n                    return (options.connection || {}).cube;\n                }\n\n                var connection = options.connection || {};\n                connection.cube = val;\n\n                this.options.connection = connection;\n                extend(true, this.transport.options, { connection: connection });\n            },\n\n            discover: function(options) {\n                return fetchDiscover({ url: this.options.read }, options);\n            }\n        });\n\n        function asArray(object) {\n            if (object == null) {\n                return [];\n            }\n\n            var type = toString.call(object);\n            if (type !== \"[object Array]\") {\n                return [object];\n            }\n\n            return object;\n        }\n\n        function translateAxis(axis) {\n            var result = { tuples: [] };\n            var tuples = asArray(kendo.getter(\"Tuples.Tuple\", true)(axis));\n            var captionGetter = kendo.getter(\"Caption['#text']\");\n            var unameGetter = kendo.getter(\"UName['#text']\");\n            var levelNameGetter = kendo.getter(\"LName['#text']\");\n            var levelNumGetter = kendo.getter(\"LNum['#text']\");\n            var childrenGetter = kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true);\n            var hierarchyGetter = kendo.getter(\"['@Hierarchy']\");\n            var parentNameGetter = kendo.getter(\"PARENT_UNIQUE_NAME['#text']\", true);\n\n            for (var idx = 0; idx < tuples.length; idx++) {\n                var members = [];\n                var member = asArray(tuples[idx].Member);\n                for (var memberIdx = 0; memberIdx < member.length; memberIdx++) {\n                    members.push({\n                        children: [],\n                        caption: captionGetter(member[memberIdx]),\n                        name: unameGetter(member[memberIdx]),\n                        levelName: levelNameGetter(member[memberIdx]),\n                        levelNum: levelNumGetter(member[memberIdx]),\n                        hasChildren: parseInt(childrenGetter(member[memberIdx]), 10) > 0,\n                        parentName: parentNameGetter(member[memberIdx]),\n                        hierarchy: hierarchyGetter(member[memberIdx])\n                    });\n                }\n\n                result.tuples.push({ members: members });\n            }\n            return result;\n        }\n\n        var schemaDataReaderMap = {\n            cubes: {\n                name: kendo.getter(\"CUBE_NAME['#text']\", true),\n                caption: kendo.getter(\"CUBE_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                type: kendo.getter(\"CUBE_TYPE['#text']\", true)\n            },\n            catalogs: {\n                name: kendo.getter(\"CATALOG_NAME['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true)\n            },\n            measures: {\n                name: kendo.getter(\"MEASURE_NAME['#text']\", true),\n                caption: kendo.getter(\"MEASURE_CAPTION['#text']\", true),\n                uniqueName: kendo.getter(\"MEASURE_UNIQUE_NAME['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                aggregator: kendo.getter(\"MEASURE_AGGREGATOR['#text']\", true),\n                groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"MEASURE_DISPLAY_FOLDER['#text']\", true),\n                defaultFormat: kendo.getter(\"DEFAULT_FORMAT_STRING['#text']\", true)\n            },\n            kpis: {\n                name: kendo.getter(\"KPI_NAME['#text']\", true),\n                caption: kendo.getter(\"KPI_CAPTION['#text']\", true),\n                value: kendo.getter(\"KPI_VALUE['#text']\", true),\n                goal: kendo.getter(\"KPI_GOAL['#text']\", true),\n                status: kendo.getter(\"KPI_STATUS['#text']\", true),\n                trend: kendo.getter(\"KPI_TREND['#text']\", true),\n                statusGraphic: kendo.getter(\"KPI_STATUS_GRAPHIC['#text']\", true),\n                trendGraphic: kendo.getter(\"KPI_TREND_GRAPHIC['#text']\", true),\n                description: kendo.getter(\"KPI_DESCRIPTION['#text']\", true),\n                groupName: kendo.getter(\"MEASUREGROUP_NAME['#text']\", true)\n            },\n            dimensions: {\n                name: kendo.getter(\"DIMENSION_NAME['#text']\", true),\n                caption: kendo.getter(\"DIMENSION_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                defaultHierarchy: kendo.getter(\"DEFAULT_HIERARCHY['#text']\", true),\n                type: kendo.getter(\"DIMENSION_TYPE['#text']\", true)\n    //unknown = 0; time = 1; measure = 2; other = 3; quantitative = 5; accounts = 6; customers = 7; products = 8; scenario = 9; utility = 10; currency = 11; rates = 12; channel = 13; promotion = 14; organization = 15; billOfMaterials = 16; geography = 17;\n\n            },\n            hierarchies: {\n                name: kendo.getter(\"HIERARCHY_NAME['#text']\", true),\n                caption: kendo.getter(\"HIERARCHY_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"HIERARCHY_DISPLAY_FOLDER['#text']\", true),\n                origin: kendo.getter(\"HIERARCHY_ORIGIN['#text']\", true),\n                defaultMember: kendo.getter(\"DEFAULT_MEMBER['#text']\", true)\n            },\n            levels: {\n                name: kendo.getter(\"LEVEL_NAME['#text']\", true),\n                caption: kendo.getter(\"LEVEL_CAPTION['#text']\", true),\n                description: kendo.getter(\"DESCRIPTION['#text']\", true),\n                uniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                displayFolder: kendo.getter(\"LEVEL_DISPLAY_FOLDER['#text']\", true),\n                orderingProperty: kendo.getter(\"LEVEL_ORDERING_PROPERTY['#text']\", true),\n                origin: kendo.getter(\"LEVEL_ORIGIN['#text']\", true),\n                hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true)\n            },\n            members: {\n                name: kendo.getter(\"MEMBER_NAME['#text']\", true),\n                caption: kendo.getter(\"MEMBER_CAPTION['#text']\", true),\n                uniqueName: kendo.getter(\"MEMBER_UNIQUE_NAME['#text']\", true),\n                dimensionUniqueName: kendo.getter(\"DIMENSION_UNIQUE_NAME['#text']\", true),\n                hierarchyUniqueName: kendo.getter(\"HIERARCHY_UNIQUE_NAME['#text']\", true),\n                levelUniqueName: kendo.getter(\"LEVEL_UNIQUE_NAME['#text']\", true),\n                childrenCardinality: kendo.getter(\"CHILDREN_CARDINALITY['#text']\", true)\n            }\n        };\n\n        var xmlaReaderMethods = [\"axes\", \"catalogs\", \"cubes\", \"dimensions\", \"hierarchies\", \"levels\", \"measures\"];\n\n        var XmlaDataReader = kendo.data.XmlDataReader.extend({\n            init: function(options) {\n                kendo.data.XmlDataReader.call(this, options);\n\n                this._extend(options);\n            },\n            _extend: function(options) {\n                var idx = 0;\n                var length = xmlaReaderMethods.length;\n                var methodName;\n                var option;\n\n                for (; idx < length; idx++) {\n                    methodName = xmlaReaderMethods[idx];\n                    option = options[methodName];\n\n                    if (option && option !== identity) {\n                        this[methodName] = option;\n                    }\n                }\n            },\n            parse: function(xml) {\n                var result = kendo.data.XmlDataReader.fn.parse(xml.replace(/<(\\/?)(\\w|-)+:/g, \"<$1\"));\n                return kendo.getter(\"['Envelope']['Body']\", true)(result);\n            },\n            errors: function(root) {\n                var fault = kendo.getter(\"['Fault']\", true)(root);\n                if (fault) {\n                    return [{\n                        faultstring: kendo.getter(\"faultstring['#text']\", true)(fault),\n                        faultcode: kendo.getter(\"faultcode['#text']\", true)(fault)\n                    }];\n                }\n                return null;\n            },\n            axes: function(root) {\n                root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n                var axes = asArray(kendo.getter(\"Axes.Axis\", true)(root));\n                var axis;\n\n                var result = {\n                    columns: {},\n                    rows: {}\n                };\n\n                for (var idx = 0; idx < axes.length; idx++) {\n                    axis = axes[idx];\n\n                    if (axis[\"@name\"].toLowerCase() !== \"sliceraxis\") {\n                        if (!result.columns.tuples) {\n                            result.columns = translateAxis(axis);\n                        } else {\n                            result.rows = translateAxis(axis);\n                        }\n                    }\n                }\n\n                return result;\n            },\n            data: function(root) {\n                root = kendo.getter(\"ExecuteResponse[\\\"return\\\"].root\", true)(root);\n\n                var cells = asArray(kendo.getter(\"CellData.Cell\", true)(root));\n\n                var result = [];\n                var ordinalGetter = kendo.getter(\"['@CellOrdinal']\");\n                var valueGetter = kendo.getter(\"Value['#text']\");\n                var fmtValueGetter = kendo.getter(\"FmtValue['#text']\");\n\n                for (var idx = 0; idx < cells.length; idx++) {\n                    result.push({\n                        value: valueGetter(cells[idx]),\n                        fmtValue: fmtValueGetter(cells[idx]),\n                        ordinal: parseInt(ordinalGetter(cells[idx]), 10)\n                    });\n                }\n\n                return result;\n            },\n            _mapSchema: function(root, getters) {\n                root = kendo.getter(\"DiscoverResponse[\\\"return\\\"].root\", true)(root);\n                var rows = asArray(kendo.getter(\"row\", true)(root));\n\n                var result = [];\n\n                for (var idx = 0; idx < rows.length; idx++) {\n                    var obj = {};\n                    for (var key in getters) {\n                        obj[key] = getters[key](rows[idx]);\n                    }\n                    result.push(obj);\n                }\n\n                return result;\n            },\n            measures: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.measures);\n            },\n            kpis: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.kpis);\n            },\n            hierarchies: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.hierarchies);\n            },\n            levels: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.levels);\n            },\n            dimensions: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.dimensions);\n            },\n            cubes: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.cubes);\n            },\n            catalogs: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.catalogs);\n            },\n            members: function(root) {\n                return this._mapSchema(root, schemaDataReaderMap.members);\n            }\n        });\n\n        extend(true, kendo.data, {\n           PivotDataSource: PivotDataSource,\n           PivotDataSourceV2: PivotDataSourceV2,\n           XmlaTransport: XmlaTransport,\n           XmlaDataReader: XmlaDataReader,\n           PivotCubeBuilder: PivotCubeBuilder,\n           transports: {\n               xmla: XmlaTransport\n           },\n           readers: {\n               xmla: XmlaDataReader\n           }\n        });\n\n        var sortExpr = function(expressions, name) {\n            if (!expressions) {\n                return null;\n            }\n\n            for (var idx = 0, length = expressions.length; idx < length; idx++) {\n                if (expressions[idx].field === name) {\n                    return expressions[idx];\n                }\n            }\n\n            return null;\n        };\n\n        var removeExpr = function(expressions, name) {\n            var result = [];\n\n            for (var idx = 0, length = expressions.length; idx < length; idx++) {\n                if (expressions[idx].field !== name) {\n                    result.push(expressions[idx]);\n                }\n            }\n\n            return result;\n        };\n\n        kendo.ui.PivotSettingTarget = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.element.addClass(\"k-pivot-setting\");\n\n                that.dataSource = kendo.data.PivotDataSource.create(options.dataSource);\n\n                that._refreshHandler = that.refresh.bind(that);\n                that.dataSource.first(CHANGE, that._refreshHandler);\n\n                if (!options.template) {\n                    var actions = '';\n\n                    if (that.options.enabled) {\n                        actions = \"<span class=\\\"k-setting-delete k-chip-action\\\">\" + (kendo.ui.icon(\"x\")) + \"</span>\";\n                    }\n\n                    that.options.template = function (data) { return ''\n                        + \"<span class=\\\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\\\" data-\" + (kendo.ns) + \"name=\\\"\" + (data.name || data) + \"\\\">\"\n                            + '<span class=\"k-chip-content\">'\n                                + \"<span class=\\\"k-chip-text\\\">\" + (data.name || data) + \"</span>\"\n                            + '</span>'\n                            + '<span class=\"k-chip-actions\">' + actions + '</span>'\n                        + '</span>'; };\n                }\n\n                that.template = kendo.template(that.options.template);\n                that.emptyTemplate = kendo.template(that.options.emptyTemplate);\n\n                that._sortable();\n\n                that.element.on(\"click\" + NS, '.k-chip, .k-button' , function(e) {\n                    var target = $(e.target).closest(\":not(path,svg)\");\n                    var action = target.closest('.k-chip-action');\n                    var name = target.closest(\"[\" + kendo.attr(\"name\") + \"]\")\n                                     .attr(kendo.attr(\"name\"));\n\n                    if (!name) {\n                        return;\n                    }\n\n                    if (action.hasClass(\"k-setting-delete\")) {\n                        that.remove(name);\n                        return;\n                    }\n\n                    if (target.closest('.k-chip-actions').length > 0) {\n                        return;\n                    }\n\n                    if (that.options.sortable) {\n                        var sortDirection = $(e.currentTarget).closest(\":not(path,svg)\").find('.k-i-sort-asc-small,.k-svg-i-sort-asc-small').length ? 'desc' : 'asc';\n\n                        that.sort({\n                            field: name,\n                            dir: sortDirection\n                        });\n                    }\n                });\n\n                if (options.filterable || options.sortable) {\n                    that.fieldMenu = new ui.PivotFieldMenu(that.element, {\n                        messages: that.options.messages.fieldMenu,\n                        filter: \".k-setting-fieldmenu\",\n                        filterable: options.filterable,\n                        sortable: options.sortable,\n                        dataSource: that.dataSource\n                    });\n                }\n\n                that.refresh();\n            },\n\n            options: {\n                name: \"PivotSettingTarget\",\n                template: null,\n                filterable: false,\n                sortable: false,\n                emptyTemplate: function (data) { return (\"<div class='k-empty'>\" + data + \"</div>\"); },\n                setting: \"columns\",\n                enabled: true,\n                messages: {\n                    empty: \"Drop Fields Here\"\n                }\n            },\n            setDataSource: function(dataSource) {\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.dataSource = this.options.dataSource = dataSource;\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.setDataSource(dataSource);\n                }\n                dataSource.first(CHANGE, this._refreshHandler);\n\n                this.refresh();\n            },\n\n            _sortable: function() {\n                var that = this;\n\n                if (that.options.enabled) {\n                    this.sortable = this.element.kendoSortable({\n                        connectWith: this.options.connectWith,\n                        hint: that.options.hint,\n                        filter: \">*:not(.k-empty)\",\n                        cursor: \"move\",\n                        start: function(e) {\n                            e.item.trigger(\"focus\").trigger(\"blur\");\n                        },\n                        change: function(e) {\n                            var name = e.item.attr(kendo.attr(\"name\"));\n\n                            if (e.action == \"receive\") {\n                                that.add(name);\n                            } else if (e.action == \"remove\") {\n                                that.remove(name);\n                            } else if (e.action == \"sort\") {\n                                that.move(name, e.newIndex);\n                            }\n                        }\n                    }).data(\"kendoSortable\");\n                }\n            },\n\n            _isKPI: function(data) {\n                return data.type === \"kpi\" || data.measure;\n            },\n\n            validate: function(data) {\n                var isMeasure = (data.type == 2 || \"aggregator\" in data || this._isKPI(data));\n\n                if (isMeasure) {\n                    return this.options.setting === \"measures\";\n                }\n\n                if (this.options.setting === \"measures\") {\n                    return isMeasure;\n                }\n\n                var items = this.dataSource[this.options.setting]();\n                var name = data.defaultHierarchy || data.uniqueName;\n                if (indexOf(name, items) > -1) {\n                    return false;\n                }\n\n                items = this.dataSource[this.options.setting === \"columns\" ? \"rows\" : \"columns\"]();\n                if (indexOf(name, items) > -1) {\n                    return false;\n                }\n\n                return true;\n            },\n\n            add: function(name) {\n                var items = this.dataSource[this.options.setting]();\n                var i, l;\n\n                name = Array.isArray(name) ? name.slice(0) : [name];\n\n                for (i = 0, l = name.length; i < l; i++) {\n                    if (indexOf(name[i], items) !== -1) {\n                        name.splice(i, 1);\n                        i -= 1;\n                        l -= 1;\n                    }\n                }\n\n                if (name.length) {\n                    items = items.concat(name);\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            move: function(name, index) {\n                var items = this.dataSource[this.options.setting]();\n                var idx = indexOf(name, items);\n\n                if (idx > -1) {\n                    name = items.splice(idx, 1)[0];\n\n                    items.splice(index, 0, name);\n\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            remove: function(name) {\n                var items = this.dataSource[this.options.setting]();\n                var idx = indexOf(name, items);\n                var sortExpressions = this.dataSource.sort();\n                var filter = this.dataSource.filter();\n\n                if (idx > -1) {\n                    if (filter) {\n                        filter.filters = removeExpr(filter.filters, name);\n                        this.dataSource._filter.filters = filter.filters;\n                        if (!filter.filters.length) {\n                            this.dataSource._filter = null;\n                        }\n                    }\n                    if (sortExpressions) {\n                        sortExpressions = removeExpr(sortExpressions, name);\n                        this.dataSource._sort = sortExpressions;\n                    }\n                    items.splice(idx, 1);\n                    this.dataSource[this.options.setting](items);\n                }\n            },\n\n            sort: function(expr) {\n                var sortable = this.options.sortable;\n                var allowUnsort = sortable === true || sortable.allowUnsort;\n                var skipExpr = allowUnsort && expr.dir === \"asc\";\n\n                var expressions = (this.dataSource.sort() || []);\n                var result = removeExpr(expressions, expr.field);\n\n                if (skipExpr && expressions.length !== result.length) {\n                    expr = null;\n                }\n\n                if (expr) {\n                    result.push(expr);\n                }\n\n                this.dataSource.sort(result);\n            },\n\n            refresh: function() {\n                var html = \"\";\n                var items = this.dataSource[this.options.setting]();\n                var length = items.length;\n                var idx = 0;\n                var item;\n\n                if (length) {\n                    for (; idx < length; idx++) {\n                        item = items[idx];\n                        item = item.name === undefined$1 ? { name: item } : item;\n\n                        html += this.template(extend({ sortIcon: this._sortIcon(item.name) }, item));\n                    }\n                } else {\n                    html = this.emptyTemplate(this.options.messages.empty);\n                }\n\n                this.element.html(html);\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.element.off(NS);\n\n                if (this.sortable) {\n                    this.sortable.destroy();\n                }\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.destroy();\n                }\n\n                this.element = null;\n                this._refreshHandler = null;\n            },\n\n            _sortIcon: function(name) {\n                var expressions = this.dataSource.sort();\n                var expr = sortExpr(expressions, getName(name));\n                var icon = \"\";\n\n                if (expr) {\n                    icon = \"sort-\" + expr.dir;\n                }\n\n                return icon;\n            }\n        });\n\n        kendo.ui.PivotSettingTargetV2 = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that.dataSource = kendo.data.PivotDataSourceV2.create(options.dataSource);\n\n                that._refreshHandler = that.refresh.bind(that);\n                that.dataSource.first(CHANGE, that._refreshHandler);\n\n                that.template = kendo.template(that.options.template);\n\n                that._sortable();\n\n                that.element.on(\"click\" + NS, \".k-i-x-circle,.k-svg-i-x-circle\", function(e) {\n                    var target = $(e.target).closest(\":not(path,svg)\");\n                    var parent = target.closest(\".k-chip\");\n                    var name = parent.find(\".k-chip-label\").text();\n\n                    if (!name) {\n                        return;\n                    }\n\n                    that.remove(name);\n                    parent.remove();\n                    that.trigger(\"remove\", { name: name });\n                });\n\n                if (options.filterable || options.sortable) {\n                    that.fieldMenu = new ui.PivotFieldMenuV2(that.element, {\n                        messages: that.options.messages.fieldMenu,\n                        filterable: options.filterable,\n                        filter: \".k-i-more-vertical,.k-svg-i-more-vertical\",\n                        sortable: options.sortable,\n                        dataSource: that.dataSource\n                    });\n                }\n\n                that.refresh();\n            },\n\n            events: [\"remove\"],\n\n            options: {\n                name: \"PivotSettingTargetV2\",\n                template: null,\n                filterable: false,\n                sortable: false,\n                setting: \"columns\",\n                enabled: true,\n                messages: {\n                    empty: \"Drop Fields Here\"\n                }\n            },\n            setDataSource: function(dataSource) {\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.dataSource = this.options.dataSource = dataSource;\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.setDataSource(dataSource);\n                }\n                dataSource.first(CHANGE, this._refreshHandler);\n\n                this.refresh();\n            },\n\n            _applyState: function() {\n                if (this._sortState !== undefined$1) {\n                    this.dataSource._sort = this._sortState;\n                    this._sortState = undefined$1;\n                }\n\n                if (this._stateFilter !== undefined$1) {\n                    this.dataSource._filter = this._stateFilter;\n                    this._stateFilter = undefined$1;\n                }\n\n                this.dataSource[\"_\" + this.options.setting] = this.options.setting === \"measures\" ? normalizeMeasures(this._savedState) : normalizeMembers(this._savedState);\n            },\n\n            _cancelChanges: function() {\n                this._sortState = undefined$1;\n                this._stateFilter = undefined$1;\n                this._savedState = kendo.deepExtend([], this._initialState);\n                this._redraw();\n            },\n\n            _state: function(newState, modifyInit) {\n                var that = this;\n\n                if (!newState) {\n                    return that._savedState || [];\n                } else {\n                    if (!that._savedState || modifyInit) {\n                        that._initialState = kendo.deepExtend([], newState);\n                    }\n                    that._savedState = kendo.deepExtend([], newState);\n                }\n            },\n\n            _sortable: function() {\n                var that = this;\n\n                this.sortable = this.element.kendoSortable({\n                    connectWith: this.options.connectWith,\n                    hint: that.options.hint,\n                    filter: \">*:not(.k-empty)\",\n                    cursor: \"move\",\n                    start: function(e) {\n                        e.item.focus().blur();\n                    },\n                    change: function(e) {\n                        var name = e.item.find(\".k-chip-label\").text();\n\n                        if (e.action == \"receive\") {\n                            that.add(name);\n                        } else if (e.action == \"remove\") {\n                            that.remove(name);\n                        } else if (e.action == \"sort\") {\n                            that.move(name, e.newIndex);\n                        }\n                    }\n                }).data(\"kendoSortable\");\n            },\n\n            add: function(name) {\n                var items = this._state();\n                var i, l;\n\n                name = Array.isArray(name) ? name.slice(0) : [name];\n\n                for (i = 0, l = name.length; i < l; i++) {\n                    if (indexOf(name[i], items) !== -1) {\n                        name.splice(i, 1);\n                        i -= 1;\n                        l -= 1;\n                    }\n                }\n\n                if (name.length) {\n                    items = items.concat(name);\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            move: function(name, index) {\n                var items = this._state();\n                var idx = indexOf(name, items);\n\n                if (idx > -1) {\n                    name = items.splice(idx, 1)[0];\n\n                    items.splice(index, 0, name);\n\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            remove: function(name) {\n                var items = this._state();\n                var idx = indexOf(name, items);\n                var sortExpressions = this.dataSource.sort();\n                var filter = this.dataSource.filter();\n\n                if (idx > -1) {\n                    if (filter) {\n                        filter.filters = removeExpr(filter.filters, name);\n                        this._savedFilter = this.dataSource._filter;\n                        this._savedFilter.filters = filter.filters;\n                        if (!filter.filters.length) {\n                            this._savedFilter = null;\n                        }\n                    }\n                    if (sortExpressions) {\n                        sortExpressions = removeExpr(sortExpressions, name);\n                        this._sortState = sortExpressions;\n                    }\n                    items.splice(idx, 1);\n                    this._state(items);\n                    this._redraw();\n                }\n            },\n\n            _emptyState: function(enable) {\n                var that = this;\n                if (enable) {\n                    that.element.html(this.options.messages.empty)\n                        .addClass(\"k-settings-description\")\n                        .removeClass(\"k-chip-list\");\n                } else {\n                    that.element\n                        .removeClass(\"k-settings-description\")\n                        .addClass(\"k-chip-list\");\n                }\n            },\n\n            _redraw: function() {\n                var items = this._state() || [];\n                this._emptyState(!items.length);\n                if (items.length) {\n                    this.element.html(this._targetsHTML(items));\n                }\n            },\n\n            _targetsHTML: function(items) {\n                var item;\n                var html = \"\";\n                var idx = 0;\n                var options = this.options;\n                var enabled = false;\n\n                if (this.options.setting != \"measures\") {\n                    enabled = options.filterable || options.sortable;\n                }\n\n                if (items.length) {\n                    for (; idx < items.length; idx++) {\n                        item = items[idx];\n                        item = item.name === undefined$1 ? { name: item } : item;\n\n                        html += this.template({ name: item.name, menuenabled: enabled });\n                    }\n                }\n                return html;\n            },\n\n            refresh: function() {\n                if (this.dataSource._preventRefresh) {\n                    return;\n                }\n                var items = this.dataSource[this.options.setting]();\n                this._state(items, true);\n                this._emptyState(!this._state().length);\n                if (items.length) {\n                    this.element.html(this._targetsHTML(items));\n                }\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                this.dataSource.unbind(CHANGE, this._refreshHandler);\n                this.element.off(NS);\n\n                if (this.sortable) {\n                    this.sortable.destroy();\n                }\n\n                if (this.fieldMenu) {\n                    this.fieldMenu.destroy();\n                }\n\n                this.element = null;\n                this._refreshHandler = null;\n            }\n        });\n\n        var PivotConfiguratorButton = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.element = $(element);\n\n                that._element();\n                that._attachEvents();\n            },\n\n            options: {\n                name: \"PivotConfiguratorButton\",\n                text: \"Change settings\",\n                configurator: \"\"\n            },\n\n            destroy: function() {\n                this.element.off(NS);\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                kendo.deepExtend(that.options, options);\n                this.init(this.element, this.options);\n            },\n\n            toggle: function() {\n                var attr = kendo.attr(\"role\");\n                var pivotEl = this.element\n                    .closest(\"[\" + attr + \"=pivotcontainer]\")\n                    .find(\"[\" + attr + \"=pivotgridv2]\");\n                var pivot;\n\n                $(\"#\" + this.options.configurator).toggleClass(\"k-hidden\");\n\n                if (pivotEl.length) {\n                    pivot = pivotEl.getKendoPivotGridV2();\n                    pivot._setContentWidth();\n                    pivot._updateDimensions();\n                }\n            },\n\n            _attachEvents: function() {\n                this.element.on(\"click\" + NS, this.toggle.bind(this));\n            },\n\n            _element: function() {\n                var options = this.options;\n                this.element.addClass(\"k-pivotgrid-configurator-button\");\n                this.element.html(kendo.format(\"<span>{0}<span class='k-icon k-i-gear'></span></span>\",options.text));\n            }\n        });\n\n        var PivotContainer = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                Widget.fn.init.call(that, element, options);\n                that.element = $(element);\n                that.options = options;\n\n\n                that._addClasses();\n            },\n\n            options: {\n                name: \"PivotContainer\",\n                configuratorPosition: \"left\"\n            },\n\n            setOptions: function(options) {\n                var that = this;\n                kendo.deepExtend(that.options, options);\n                this.init(this.element, this.options);\n            },\n\n            _addClasses: function() {\n                var options = this.options;\n                var className;\n                this.element.removeClass(\"k-flex-row k-flex-row-reverse k-flex-column k-flex-column-reverse\");\n\n                switch (options.configuratorPosition) {\n                    case \"right\":\n                        className = \"k-flex-row\";\n                        break;\n                    case \"left\":\n                        className = \"k-flex-row-reverse\";\n                        break;\n                    case \"bottom\":\n                        className = \"k-flex-column\";\n                        break;\n                    case \"top\":\n                        className = \"k-flex-column-reverse\";\n                        break;\n                    default:\n                        className = \"k-flex-row\";\n                }\n\n                this.element\n                    .addClass(\"k-d-flex k-pos-relative\")\n                    .addClass(className);\n            }\n        });\n\n        var PivotGridV2 = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._dataSource();\n\n                that._bindConfigurator();\n\n                that._wrapper();\n\n                that._columnHeadersWrapper = $('<div class=\"k-pivotgrid-column-headers\"></div>');\n                that._rowHeadersWrapper = $('<div class=\"k-pivotgrid-row-headers\"></div>');\n                that._contentWrapper = $('<div class=\"k-pivotgrid-values\"></div>');\n\n                that.wrapper.append(that._columnHeadersWrapper);\n                that.wrapper.append(that._rowHeadersWrapper);\n                that.wrapper.append(that._contentWrapper);\n\n                that._columnBuilder = new ColumnRowBuilder( { template: this.options.columnHeaderTemplate, axes: \"columns\" });\n                that._rowBuilder = new ColumnRowBuilder( { template: this.options.rowHeaderTemplate, axes: \"rows\" });\n                that._contentBuilder = new ContentBuilderV2( { template: this.options.dataCellTemplate || DATACELL_TEMPLATE });\n\n                that._scrollable();\n                that._rowHeadersWrapper\n                    .add(that._columnHeadersWrapper)\n                    .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                        var button = $(this);\n                        var path = button.parent().attr(kendo.attr(\"key\"));\n                        var expanded = button.is(\".k-i-chevron-up,.k-svg-i-chevron-up\");\n                        var isRow = button.closest(\".k-pivotgrid-row-headers\").length !== 0;\n                        var paths = path.split(\",\");\n                        var eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n\n                        if (that.trigger(eventName, { path: paths, axis: isRow ? \"rows\" : \"columns\" })) {\n                            return;\n                        }\n\n                        var reducerPayLoad = {\n                            type: \"HEADERS_ACTION_TOGGLE\",\n                            payload: paths,\n                            tree: isRow ? that._rowBuilder.getTree() : that._columnBuilder.getTree()\n                        };\n                        var currentAxes = isRow ? that.dataSource._rows : that.dataSource._columns;\n                        var newHeaders = headersReducer(currentAxes, reducerPayLoad);\n\n                        that.dataSource._preventRefresh = true;\n\n                        if (isRow) {\n                            that.dataSource.rows(newHeaders);\n                        } else {\n                            that.dataSource.columns(newHeaders);\n                        }\n                     });\n\n                if (that.options.autoBind) {\n                    that.dataSource.fetch();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                DATABINDING,\n                DATABOUND,\n                EXPANDMEMBER,\n                COLLAPSEMEMBER\n            ],\n\n            options: {\n                name: \"PivotGridV2\",\n                autoBind: true,\n                height: null,\n                columnWidth: null,\n                configurator: \"\",\n                columnHeaderTemplate: null,\n                rowHeaderTemplate: null,\n                dataCellTemplate: null\n            },\n\n            destroy: function() {\n                var that = this;\n                Widget.fn.destroy.call(that);\n\n                if (that._windowResizeHandler) {\n                    $(window).off(RESIZE + NS, that._windowResizeHandler);\n                    that._windowResizeHandler = null;\n                }\n            },\n\n            _dataSource: function() {\n                var that = this;\n                var dataSource = that.options.dataSource;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (that.dataSource && this._refreshHandler) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler)\n                                   .unbind(PROGRESS, that._progressHandler)\n                                   .unbind(ERROR, that._errorHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSourceV2.create(dataSource)\n                                       .bind(CHANGE, that._refreshHandler)\n                                       .bind(PROGRESS, that._progressHandler)\n                                       .bind(ERROR, that._errorHandler);\n            },\n\n            _resize: function() {\n                var that = this;\n                that.wrapper[0].style.setProperty('--kendo-scrollbar-width', kendo.format(\"{0}px\", getScollWidth()));\n            },\n\n            _scrollable: function() {\n                var that = this;\n                var columnsHeader = that._columnHeadersWrapper;\n                var rowsHeader = that._rowHeadersWrapper;\n\n                that._resize();\n                that._windowResizeHandler = that._resize.bind(that);\n\n                that._contentWrapper.scroll(function() {\n                    kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                    rowsHeader.scrollTop(this.scrollTop);\n                });\n\n                rowsHeader.bind(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n                $(window).on(RESIZE + NS, that._windowResizeHandler);\n            },\n\n            _wheelScroll: function(e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n\n                var delta = kendo.wheelDeltaY(e);\n                var scrollTop = this._contentWrapper.scrollTop();\n\n                if (delta) {\n                    e.preventDefault();\n                    $(e.currentTarget).one(\"wheel\" + NS, false);\n\n                    this._rowHeadersWrapper.scrollTop(scrollTop + (-delta));\n                    this._contentWrapper.scrollTop(scrollTop + (-delta));\n                }\n            },\n\n            _wrapper: function() {\n                var height = this.options.height;\n\n                this.wrapper = this.element.addClass(\"k-pivotgrid\");\n\n                this.wrapper.append('<span class=\"k-pivotgrid-empty-cell\" />');\n\n                if (height) {\n                    this.wrapper.css(\"height\", height);\n                }\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.wrapper, toggle);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _updateDimensions: function() {\n                var that = this;\n                that.wrapper.css({\n                    \"grid-template-columns\": kendo.format(\"{0}px 1fr\", that._rowHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetWidth),\n                    \"grid-template-rows\": kendo.format(\"{0}px 1fr\", that._columnHeadersWrapper.find(\".k-pivotgrid-table\")[0].offsetHeight),\n                });\n            },\n\n            _setContentWidth: function() {\n                if (!this.options.columnWidth) {\n                    return;\n                }\n                var contentTable = this._contentWrapper.find(\"table\");\n                var columnTable = this._columnHeadersWrapper.children(\"table\");\n                var rowTable = this._rowHeadersWrapper.children(\"table\");\n\n                contentTable.add(columnTable).add(rowTable).find(\"col\").width(this.options.columnWidth);\n            },\n\n            _bindConfigurator: function() {\n                var configurator = this.options.configurator;\n                if (configurator) {\n                    $(configurator).kendoPivotConfiguratorV2(\"setDataSource\", this.dataSource);\n                }\n            },\n\n            cellInfoByElement: function(element) {\n                element = $(element);\n\n                return this.cellInfo(element.index(), element.parent(\"tr\").index());\n            },\n\n            cellInfo: function(columnIndex, rowIndex) {\n                var contentBuilder = this._contentBuilder;\n                var dataIndex;\n                var dataItem;\n\n                if (columnIndex >= contentBuilder.columnsCount || columnIndex < 0 ||\n                    rowIndex >= contentBuilder.rowsCount || rowIndex < 0) {\n                    return null;\n                }\n\n                dataIndex = rowIndex * contentBuilder.columnsCount + columnIndex;\n                dataItem = contentBuilder.hash[dataIndex < 0 ? 0 : dataIndex];\n\n                return {\n                    columnTuple: dataItem.columnTuple,\n                    rowTuple: dataItem.rowTuple,\n                    dataItem: dataItem.data\n                };\n            },\n\n            refresh: function() {\n                var that = this;\n\n                var dataSource = that.dataSource;\n\n                if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                    return;\n                }\n\n                that._columnBuilder.setTuples(dataSource._columnTuples);\n                that._columnHeadersWrapper.html(that._columnBuilder.build());\n\n                that._rowBuilder.setTuples(dataSource._rowTuples);\n                that._rowHeadersWrapper.html(that._rowBuilder.build());\n\n                that._contentBuilder.setRowColumnInfo({\n                    columnHeaderLeafs: that._columnBuilder.getHeaderLeafs(),\n                    rowHeaderLeafs: that._rowBuilder.getHeaderLeafs(),\n                    columnHeaderBreadth: that._columnBuilder.getBreadth(),\n                    rowHeaderDepth: that._rowBuilder.getBreadth(),\n                    data: dataSource._view\n                });\n\n                that._contentWrapper.html(that._contentBuilder.build());\n\n                that._setContentWidth();\n                that._updateDimensions();\n\n                that._progress(false);\n\n                that.trigger(DATABOUND);\n            }\n        });\n\n        ui.plugin(PivotConfiguratorButton);\n        ui.plugin(PivotContainer);\n        ui.plugin(PivotGridV2);\n\n        var PivotGrid = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                var columnBuilder;\n                var rowBuilder;\n\n                Widget.fn.init.call(that, element, options);\n\n                that._dataSource();\n\n                that._bindConfigurator();\n\n                that._wrapper();\n                that._createLayout();\n\n                that._columnBuilder = columnBuilder = new ColumnBuilder();\n                that._rowBuilder = rowBuilder = new RowBuilder();\n                that._contentBuilder = new ContentBuilder();\n\n                that._templates();\n\n                that.columnsHeader\n                    .add(that.rowsHeader)\n                    .on(\"click\", \"span.k-icon,span.k-svg-icon\", function() {\n                        var button = $(this);\n                        var builder = columnBuilder;\n                        var action = \"expandColumn\";\n                        var eventName;\n                        var path = button.attr(kendo.attr(\"path\"));\n                        var eventArgs = {\n                            axis: \"columns\",\n                            path: $.parseJSON(path)\n                        };\n\n                        if (button.parent().is(\"td\")) {\n                            builder = rowBuilder;\n                            action = \"expandRow\";\n                            eventArgs.axis = \"rows\";\n                        }\n\n                        var expanded = button.is(STATE_EXPANDED_SELECTOR);\n                        var metadata = builder.metadata[path];\n                        var request = metadata.expanded === undefined$1;\n\n                        eventName = expanded ? COLLAPSEMEMBER : EXPANDMEMBER;\n                        eventArgs.childrenLoaded = metadata.maxChildren > metadata.children;\n\n                        if (that.trigger(eventName, eventArgs)) {\n                            return;\n                        }\n\n                        builder.metadata[path].expanded = !expanded;\n                        kendo.ui.icon(button,{ icon: !expanded ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME });\n\n                        if (!expanded && request) {\n                            that.dataSource[action](eventArgs.path);\n                        } else {\n                            that.refresh();\n                        }\n                    });\n\n                that._scrollable();\n\n                if (that.options.autoBind) {\n                    that.dataSource.fetch();\n                }\n\n                kendo.notify(that);\n            },\n\n            events: [\n                DATABINDING,\n                DATABOUND,\n                EXPANDMEMBER,\n                COLLAPSEMEMBER\n            ],\n\n            options: {\n                name: \"PivotGrid\",\n                autoBind: true,\n                reorderable: true,\n                filterable: false,\n                sortable: false,\n                height: null,\n                columnWidth: 100,\n                configurator: \"\",\n                columnHeaderTemplate: null,\n                rowHeaderTemplate: null,\n                dataCellTemplate: null,\n                kpiStatusTemplate: null,\n                kpiTrendTemplate: null,\n                messages: {\n                    measureFields: \"Drop Data Fields Here\",\n                    columnFields: \"Drop Column Fields Here\",\n                    rowFields: \"Drop Rows Fields Here\"\n                }\n            },\n\n            _templates: function() {\n                var columnTemplate = this.options.columnHeaderTemplate;\n                var rowTemplate = this.options.rowHeaderTemplate;\n                var dataTemplate = this.options.dataCellTemplate;\n                var kpiStatusTemplate = this.options.kpiStatusTemplate;\n                var kpiTrendTemplate = this.options.kpiTrendTemplate;\n\n                this._columnBuilder.template = kendo.template(columnTemplate || HEADER_TEMPLATE, { useWithBlock: !!columnTemplate });\n                this._contentBuilder.dataTemplate = kendo.template(dataTemplate || DATACELL_TEMPLATE, { useWithBlock: !!dataTemplate });\n                this._contentBuilder.kpiStatusTemplate = kendo.template(kpiStatusTemplate || KPISTATUS_TEMPLATE, { useWithBlock: !!kpiStatusTemplate });\n                this._contentBuilder.kpiTrendTemplate = kendo.template(kpiTrendTemplate || KPITREND_TEMPLATE, { useWithBlock: !!kpiTrendTemplate });\n                this._rowBuilder.template = kendo.template(rowTemplate || HEADER_TEMPLATE, { useWithBlock: !!rowTemplate });\n            },\n\n            _bindConfigurator: function() {\n                var configurator = this.options.configurator;\n                if (configurator) {\n                    $(configurator).kendoPivotConfigurator(\"setDataSource\", this.dataSource);\n                }\n            },\n\n            cellInfoByElement: function(element) {\n                element = $(element);\n\n                return this.cellInfo(element.index(), element.parent(\"tr\").index());\n            },\n\n            cellInfo: function(columnIndex, rowIndex) {\n                var contentBuilder = this._contentBuilder;\n                var columnInfo = contentBuilder.columnIndexes[columnIndex || 0];\n                var rowInfo = contentBuilder.rowIndexes[rowIndex || 0];\n                var dataIndex;\n\n                if (!columnInfo || !rowInfo) {\n                    return null;\n                }\n\n                dataIndex = (rowInfo.index * contentBuilder.rowLength) + columnInfo.index;\n\n                return {\n                    columnTuple: columnInfo.tuple,\n                    rowTuple: rowInfo.tuple,\n                    measure: columnInfo.measure || rowInfo.measure,\n                    dataItem: this.dataSource.view()[dataIndex]\n                };\n            },\n\n            setDataSource: function(dataSource) {\n                this.options.dataSource = dataSource;\n\n                this._dataSource();\n\n                if (this.measuresTarget) {\n                    this.measuresTarget.setDataSource(dataSource);\n                }\n\n                if (this.rowsTarget) {\n                    this.rowsTarget.setDataSource(dataSource);\n                }\n\n                if (this.columnsTarget) {\n                    this.columnsTarget.setDataSource(dataSource);\n                }\n\n                this._bindConfigurator();\n\n                if (this.options.autoBind) {\n                    dataSource.fetch();\n                }\n            },\n\n            setOptions: function(options) {\n                Widget.fn.setOptions.call(this, options);\n\n                this._templates();\n            },\n\n            destroy: function() {\n                Widget.fn.destroy.call(this);\n\n                clearTimeout(this._headerReflowTimeout);\n            },\n\n            _dataSource: function() {\n                var that = this;\n                var dataSource = that.options.dataSource;\n\n                dataSource = Array.isArray(dataSource) ? { data: dataSource } : dataSource;\n\n                if (that.dataSource && this._refreshHandler) {\n                    that.dataSource.unbind(CHANGE, that._refreshHandler)\n                                   .unbind(STATERESET, that._stateResetHandler)\n                                   .unbind(PROGRESS, that._progressHandler)\n                                   .unbind(ERROR, that._errorHandler);\n                } else {\n                    that._refreshHandler = that.refresh.bind(that);\n                    that._progressHandler = that._requestStart.bind(that);\n                    that._stateResetHandler = that._stateReset.bind(that);\n                    that._errorHandler = that._error.bind(that);\n                }\n\n                that.dataSource = kendo.data.PivotDataSource.create(dataSource)\n                                       .bind(CHANGE, that._refreshHandler)\n                                       .bind(PROGRESS, that._progressHandler)\n                                       .bind(STATERESET, that._stateResetHandler)\n                                       .bind(ERROR, that._errorHandler);\n            },\n\n            _error: function() {\n                this._progress(false);\n            },\n\n            _requestStart: function() {\n                this._progress(true);\n            },\n\n            _stateReset: function() {\n                this._columnBuilder.reset();\n                this._rowBuilder.reset();\n            },\n\n            _wrapper: function() {\n                var height = this.options.height;\n\n                this.wrapper = this.element.addClass(\"k-pivot\");\n\n                if (height) {\n                    this.wrapper.css(\"height\", height);\n                }\n            },\n\n            _measureFields: function() {\n                this.measureFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-measures\");\n\n                this.measuresTarget = this._createSettingTarget(this.measureFields, {\n                    setting: \"measures\",\n                    messages: {\n                        empty: this.options.messages.measureFields\n                    }\n                });\n            },\n\n            _createSettingTarget: function(element, options) {\n                var template,\n                    pivotOptions = this.options;\n\n                template = function (ref) {\n                    var sortIcon = ref.sortIcon;\n                    var name = ref.name;\n\n                    return ''\n                    + \"<span class=\\\"k-chip k-chip-md k-rounded-full k-chip-solid k-chip-solid-base\\\" tabindex=\\\"0\\\" data-\" + (kendo.ns) + \"name=\\\"\" + name + \"\\\">\"\n                        + '<span class=\"k-chip-content\">'\n                            + \"<span class=\\\"k-chip-text\\\">\" + name + \"</span>\"\n                        + '</span>'\n                        + '<span class=\"k-chip-actions k-field-actions\">'\n                            + getIcons(sortIcon, options, pivotOptions)\n                        + '</span>'\n                    + '</span>';\n                };\n\n                return new kendo.ui.PivotSettingTarget(element, $.extend({\n                    dataSource: this.dataSource,\n                    template: template,\n                    emptyTemplate: function (data) { return (\"<span class=\\\"k-empty\\\">\" + data + \"</span>\"); },\n                    enabled: this.options.reorderable\n                }, options));\n            },\n\n            _initSettingTargets: function() {\n                this.columnsTarget = this._createSettingTarget(this.columnFields, {\n                    connectWith: this.rowFields,\n                    setting: \"columns\",\n                    filterable: this.options.filterable,\n                    sortable: this.options.sortable,\n                    messages: {\n                        empty: this.options.messages.columnFields,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n\n                this.rowsTarget = this._createSettingTarget(this.rowFields, {\n                    connectWith: this.columnFields,\n                    setting: \"rows\",\n                    filterable: this.options.filterable,\n                    sortable: this.options.sortable,\n                    messages: {\n                        empty: this.options.messages.rowFields,\n                        fieldMenu: this.options.messages.fieldMenu\n                    }\n                });\n            },\n\n            _createLayout: function() {\n                var that = this;\n                var layoutTable = $(LAYOUT_TABLE);\n                var leftContainer = layoutTable.find(\".k-pivot-rowheaders\");\n                var rightContainer = layoutTable.find(\".k-pivot-table\");\n                var gridWrapper = $(DIV).addClass(\"k-grid\");\n\n                that._measureFields();\n                that.columnFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-columns\");\n\n                that.rowFields = $(DIV).addClass(\"k-pivot-toolbar k-toolbar k-toolbar-md k-settings-rows\");\n                that.columnsHeader = $('<div class=\"k-grid-header-wrap\" />')\n                                        .wrap('<div class=\"k-grid-header\" />');\n\n                that.columnsHeader.parent().css(\"padding-right\", kendo.support.scrollbar());\n\n                that.rowsHeader = $('<div class=\"k-grid k-alt\"/>');\n                that.content = $('<div class=\"k-grid-content\" />');\n\n                leftContainer.append(that.measureFields);\n                leftContainer.append(that.rowFields);\n                leftContainer.append(that.rowsHeader);\n\n                gridWrapper.append(that.columnsHeader.parent());\n                gridWrapper.append(that.content);\n\n                rightContainer.append(that.columnFields);\n                rightContainer.append(gridWrapper);\n\n                that.wrapper.append(layoutTable);\n\n                that.columnsHeaderTree = new kendo.dom.Tree(that.columnsHeader[0]);\n                that.rowsHeaderTree = new kendo.dom.Tree(that.rowsHeader[0]);\n                that.contentTree = new kendo.dom.Tree(that.content[0]);\n\n                that._initSettingTargets();\n            },\n\n            _progress: function(toggle) {\n                kendo.ui.progress(this.wrapper, toggle);\n            },\n\n            _resize: function() {\n                if (this.content[0].firstChild) {\n                    this._setSectionsWidth();\n                    this._setSectionsHeight();\n                    this._setContentWidth();\n                    this._setContentHeight();\n                    this._columnHeaderReflow();\n                }\n            },\n\n            _columnHeaderReflow: function() {\n                var columnTable = this.columnsHeader.children(\"table\");\n\n                if (!kendo.support.browser.mozilla) {\n                    return;\n                }\n\n                clearTimeout(this._headerReflowTimeout);\n\n                columnTable.css(\"table-layout\", \"auto\");\n\n                this._headerReflowTimeout = setTimeout(function() {\n                    columnTable.css(\"table-layout\", \"\");\n                });\n            },\n\n            _setSectionsWidth: function() {\n                var rowsHeader = this.rowsHeader;\n                var leftColumn = rowsHeader.parent(\".k-pivot-rowheaders\").width(AUTO);\n                var width;\n\n                width = Math.max(outerWidth(this.measureFields), outerWidth(this.rowFields));\n                width = Math.max(rowsHeader.children(\"table\").width(), width);\n\n                leftColumn.width(width);\n            },\n\n            _setSectionsHeight: function() {\n                var measureFieldsHeight = this.measureFields.height(AUTO).height();\n                var columnFieldsHeight = this.columnFields.height(AUTO).height();\n                var rowFieldsHeight = this.rowFields.height(AUTO).innerHeight();\n                var columnsHeight = this.columnsHeader.height(AUTO).innerHeight();\n\n                var padding = rowFieldsHeight - this.rowFields.height();\n\n                var firstRowHeight = columnFieldsHeight > measureFieldsHeight ? columnFieldsHeight : measureFieldsHeight;\n                var secondRowHeight = columnsHeight > rowFieldsHeight ? columnsHeight : rowFieldsHeight;\n\n                this.measureFields.height(firstRowHeight);\n                this.columnFields.height(firstRowHeight);\n                this.rowFields.height(secondRowHeight - padding);\n                this.columnsHeader.height(secondRowHeight);\n            },\n\n            _setContentWidth: function() {\n                var contentTable = this.content.find(\"table\");\n                var columnTable = this.columnsHeader.children(\"table\");\n\n                var rowLength = contentTable.children(\"colgroup\").children().length;\n\n                var calculatedWidth = rowLength * this.options.columnWidth;\n                var minWidth = Math.ceil((calculatedWidth / this.content.width()) * 100);\n\n                if (minWidth < 100) {\n                    minWidth = 100;\n                }\n\n                contentTable.add(columnTable).css(\"width\", minWidth + \"%\");\n\n                this._resetColspan(columnTable);\n            },\n\n            _setContentHeight: function() {\n                var that = this;\n                var content = that.content;\n                var rowsHeader = that.rowsHeader;\n                var innerHeight = that.wrapper.innerHeight();\n                var scrollbar = kendo.support.scrollbar();\n                var skipScrollbar = content[0].offsetHeight === content[0].clientHeight;\n                var height = that.options.height;\n\n                if (that.wrapper.is(\":visible\")) {\n                    if (!innerHeight || !height) {\n                        if (skipScrollbar) {\n                            scrollbar = 0;\n                        }\n\n                        content.height(\"auto\");\n                        rowsHeader.height(content.height() - scrollbar);\n                        return;\n                    }\n\n                    innerHeight -= outerHeight(that.columnFields);\n                    innerHeight -= outerHeight(that.columnsHeader.parent());\n\n                    if (innerHeight <= scrollbar * 2) { // do not set height if proper scrollbar cannot be displayed\n                        innerHeight = scrollbar * 2 + 1;\n                        if (!skipScrollbar) {\n                            innerHeight += scrollbar;\n                        }\n                    }\n\n                    content.height(innerHeight);\n\n                    if (skipScrollbar) {\n                        scrollbar = 0;\n                    }\n\n                    rowsHeader.height(innerHeight - scrollbar);\n                }\n            },\n\n            _resetColspan: function(columnTable) {\n                var that = this;\n                var cell = columnTable.children(\"tbody\").children().first().children().first();\n\n                if (that._colspan === undefined$1) {\n                    that._colspan = cell.attr(\"colspan\");\n                }\n\n                cell.attr(\"colspan\", 1);\n\n                clearTimeout(that._layoutTimeout);\n\n                that._layoutTimeout = setTimeout(function() {\n                    cell.attr(\"colspan\", that._colspan);\n                    that._colspan = undefined$1;\n                });\n            },\n\n            _axisMeasures: function(axis) {\n                var result = [];\n                var dataSource = this.dataSource;\n                var measures = dataSource.measures();\n                var hasMeasure = measures.length > 1 || (measures[0] && measures[0].type);\n\n                if (dataSource.measuresAxis() === axis) {\n                    if (dataSource[axis]().length === 0 || hasMeasure) {\n                        result = measures;\n                    }\n                }\n\n                return result;\n            },\n\n            items: function() {\n                return [];\n            },\n\n            refresh: function() {\n                var that = this;\n                var dataSource = that.dataSource;\n\n                var axes = dataSource.axes();\n                var columns = (axes.columns || {}).tuples || [];\n                var rows = (axes.rows || {}).tuples || [];\n\n                var columnBuilder = that._columnBuilder;\n                var rowBuilder = that._rowBuilder;\n\n                var columnAxis = {};\n                var rowAxis = {};\n\n                if (that.trigger(DATABINDING, { action: \"rebind\" } )) {\n                    return;\n                }\n\n                columnBuilder.measures = that._axisMeasures(AXIS_COLUMNS);\n                rowBuilder.measures = that._axisMeasures(AXIS_ROWS);\n\n                that.columnsHeaderTree.render(columnBuilder.build(columns));\n                that.rowsHeaderTree.render(rowBuilder.build(rows));\n\n                columnAxis = {\n                    indexes: columnBuilder._indexes,\n                    measures: columnBuilder.measures,\n                    metadata: columnBuilder.metadata\n                };\n\n                rowAxis = {\n                    indexes: rowBuilder._indexes,\n                    measures: rowBuilder.measures,\n                    metadata: rowBuilder.metadata\n                };\n\n                that.contentTree.render(that._contentBuilder.build(dataSource.view(), columnAxis, rowAxis));\n\n                that._resize();\n\n                if (that.touchScroller) {\n                    that.touchScroller.contentResized();\n                } else {\n                    var touchScroller = kendo.touchScroller(that.content);\n\n                    if (touchScroller && touchScroller.movable) {\n                        that.touchScroller = touchScroller;\n\n                        touchScroller.movable.bind(\"change\", function(e) {\n                            kendo.scrollLeft(that.columnsHeader, -e.sender.x);\n                            that.rowsHeader.scrollTop(-e.sender.y);\n                        });\n                    }\n                }\n\n                that._progress(false);\n\n                that.trigger(DATABOUND);\n            },\n\n            _scrollable: function() {\n                var that = this;\n                var columnsHeader = that.columnsHeader;\n                var rowsHeader = that.rowsHeader;\n\n                that.content.on(\"scroll\", function() {\n                    kendo.scrollLeft(columnsHeader, this.scrollLeft);\n                    rowsHeader.scrollTop(this.scrollTop);\n                });\n\n                rowsHeader.on(\"DOMMouseScroll\" + NS + \" mousewheel\" + NS, that._wheelScroll.bind(that));\n            },\n\n            _wheelScroll: function(e) {\n                if (e.ctrlKey) {\n                    return;\n                }\n\n                var delta = kendo.wheelDeltaY(e);\n                var scrollTop = this.content.scrollTop();\n\n                if (delta) {\n                    e.preventDefault();\n                    //In Firefox DOMMouseScroll event cannot be canceled\n                    $(e.currentTarget).closest(\":not(path,svg)\").one(\"wheel\" + NS, false);\n\n                    this.rowsHeader.scrollTop(scrollTop + (-delta));\n                    this.content.scrollTop(scrollTop + (-delta));\n                }\n            }\n        });\n\n        var element = kendo.dom.element;\n        var htmlNode = kendo.dom.html;\n\n        var createMetadata = function(levelNum, memberIdx) {\n           return {\n                maxChildren: 0,\n                children: 0,\n                maxMembers: 0,\n                members: 0,\n                measures: 1,\n                levelNum: levelNum,\n                parentMember: memberIdx !== 0\n            };\n        };\n\n        var buildPath = function(tuple, index) {\n            var path = [];\n            var idx = 0;\n\n            for (; idx <= index; idx++) {\n                path.push(tuple.members[idx].name);\n            }\n\n            return path;\n        };\n\n        var tupleName = function(tuple, index) {\n            var name = \"\";\n            var idx = 0;\n\n            for (; idx <= index; idx++) {\n                name += tuple.members[idx].name;\n            }\n\n            return name;\n        };\n\n        var ContentBuilderV2 = Class.extend({\n            init: function(options) {\n                this.template = kendo.template(options.template);\n                this.hash = [];\n            },\n\n            setRowColumnInfo: function(options) {\n                this.data = options.data;\n                this.columnHeaderLeafs = options.columnHeaderLeafs;\n                this.rowHeaderLeafs = options.rowHeaderLeafs;\n                this.columnHeaderBreadth = options.columnHeaderBreadth;\n                this.rowHeaderDepth = options.rowHeaderDepth;\n                this.hash.length = 0;\n            },\n\n            addColElements: function(count) {\n                var html = \"\";\n\n                for (var index = 0; index < count; index++) {\n                    html += \"<col>\";\n                }\n\n                this.table.find(\"colgroup\").append(html);\n            },\n\n            addRowElements: function(data) {\n                var that = this;\n                var body = that.table.find(\"tbody\");\n                var row;\n\n                for (var index = 0; index < data.length; index++) {\n                    row = $((\"<tr class=\\\"\" + (tableStyles.tableRow) + \" k-pivotgrid-row\\\"></tr>\"));\n                    body.append(row);\n                    that.addColumCell(row, data[index], index);\n                }\n\n                this.rowsCount = data.length;\n            },\n\n            addColumCell: function(rowEl, rowItem, rowIndex) {\n                var that = this;\n                for (var index = 0; index < rowItem.cells.length; index++) {\n                    var cell = rowItem.cells[index];\n                    if (cell) {\n                        var cellEl = $((\"<td class=\\\"\" + (tableStyles.tableCell) + \" k-pivotgrid-cell\\\"></td>\"));\n                        if (this.rowHeaderLeafs[rowIndex].total || this.columnHeaderLeafs[index].total) {\n                            cellEl.addClass(\"k-pivotgrid-header-total\");\n                        }\n                        cellEl.append(that.template({\n                            dataItem: cell.data,\n                            rowTuple: cell.rowTuple,\n                            columnTuple: cell.columnTuple\n                        }));\n                        this.hash.push(cell);\n                        rowEl.append(cellEl);\n                    }\n                }\n            },\n\n            build: function() {\n                var data = toData((this.data || []).slice(), this.columnHeaderLeafs, this.rowHeaderLeafs, this.columnHeaderBreadth, this.rowHeaderDepth);\n                var that = this;\n\n                var table = $((\"<table class='\" + (tableStyles.contentTable) + \" k-pivotgrid-table'><colgroup></colgroup><tbody class='\" + (tableStyles.tbody) + \" k-pivotgrid-tbody'></tbody></table>\"));\n\n                that.table = table;\n                that.addColElements(this.columnHeaderLeafs.length);\n                that.addRowElements(data);\n                this.rowsCount = data.length;\n                this.columnsCount = this.columnHeaderLeafs.length;\n\n                return that.table;\n            }\n        });\n\n        var ColumnRowBuilder = Class.extend({\n            init: function(options) {\n                this.tuples = options.tuples;\n                this.axes = options.axes;\n                this.headerTemplate = kendo.template(HEADERTEMPLATE);\n                if (options.template) {\n                    this.template = kendo.template(options.template);\n                }\n            },\n\n            setTuples: function(tuples) {\n                this.tuples = tuples;\n            },\n\n            addColElements: function(count) {\n                var html = \"\";\n\n                for (var index = 0; index < count; index++) {\n                    html += \"<col>\";\n                }\n\n                this.table.find(\"colgroup\").append(html);\n            },\n\n            addRowElements: function(columnHeaderRows) {\n                var that = this;\n                var body = that.table.find(\"tbody\");\n                var row;\n\n                for (var index = 0; index < columnHeaderRows.length; index++) {\n                    row = $('<tr class=\"k-table-row k-pivotgrid-row\"></tr>');\n                    body.append(row);\n                    that.addColumCell(row, columnHeaderRows[index]);\n                }\n            },\n\n            addColumCell: function(rowEl, rowItem) {\n                var that = this;\n                var cellEl;\n                var cell;\n\n                for (var index = 0; index < rowItem.cells.length; index++) {\n                    cell = rowItem.cells[index];\n                    if (cell) {\n                        cellEl = $(that.headerTemplate({\n                            rowspan: cell.rowSpan,\n                            colspan: cell.colSpan,\n                            key: cell.path.join(\",\") + (cell.total ? '|[TOTAL]' : ''),\n                            iconClass: (cell.children && cell.children.length) ? \"up\" : \"down\",\n                            expandable: cell.hasChildren && !cell.total,\n                            headerClass: kendo.format(\"k-pivotgrid-cell{0}{1}\", cell.total ? \" k-pivotgrid-header-total\" : \"\",cell.levelNum === 0 ? \" k-pivotgrid-header-root\" : \"\")\n                        }));\n                        cellEl.append(that.template ? that.template({ member: cell }) : cell.caption);\n                        rowEl.append(cellEl);\n                    }\n                }\n            },\n\n            build: function() {\n                var tree = toTree((this.tuples || []).slice());\n                var treeData = this.axes == \"columns\" ? toColumns(tree) : toRows(tree);\n                var headerRows = treeData[0];\n                var headerLeafs = treeData[1];\n                var breadth = treeData[2];\n                var rowHeaderBreadth = treeData[3];\n                var that = this;\n                that._tree = tree;\n                that._breadth = breadth;\n                that._headerLeafs = headerLeafs;\n\n                var table = $((\"<table class='\" + (tableStyles.headerTable) + \" k-pivotgrid-table'><colgroup></colgroup><tbody class='\" + (tableStyles.tbody) + \" k-pivotgrid-tbody'></tbody></table>\"));\n\n                that.table = table;\n                that.addColElements(this.axes == \"columns\" ? headerLeafs.length : rowHeaderBreadth);\n                that.addRowElements(headerRows);\n\n                return that.table;\n            },\n\n            getTree: function() {\n                return this._tree;\n            },\n\n            getBreadth: function() {\n                return this._breadth;\n            },\n\n            getHeaderLeafs: function() {\n                return this._headerLeafs;\n            }\n        });\n\n        var ColumnBuilder = Class.extend({\n            init: function() {\n                this.measures = 1;\n                this.metadata = {};\n            },\n\n            build: function(tuples) {\n                var tbody = this._tbody(tuples);\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.headerTable }, [colgroup, tbody])\n                ];\n            },\n\n            reset: function() {\n                this.metadata = {};\n            },\n\n            _colGroup: function() {\n                var length = this._rowLength();\n                var children = [];\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function(tuples) {\n                var root = tuples[0];\n\n                this.map = {};\n                this.rows = [];\n                this.rootTuple = root;\n\n                this._indexes = [];\n\n                if (root) {\n                    this._buildRows(root, 0);\n                    this._normalize();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"th\", { className: tableStyles.header } , [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _normalize: function() {\n                var rows = this.rows;\n                var rowsLength = rows.length;\n                var rowIdx = 0;\n                var row;\n\n                var cellsLength;\n                var cellIdx;\n                var cells;\n                var cell;\n\n                for (; rowIdx < rowsLength; rowIdx++) {\n                    row = rows[rowIdx];\n\n                    if (row.rowSpan === 1) {\n                        continue;\n                    }\n\n                    cells = row.children;\n\n                    cellIdx = 0;\n                    cellsLength = cells.length;\n\n                    for (; cellIdx < cellsLength; cellIdx++) {\n                        cell = cells[cellIdx];\n\n                        if (cell.tupleAll) {\n                            cell.attr.rowSpan = row.rowSpan;\n                        }\n                    }\n                }\n            },\n\n            _rowIndex: function(row) {\n                var rows = this.rows;\n                var length = rows.length;\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    if (rows[idx] === row) {\n                        break;\n                    }\n                }\n\n                return idx;\n            },\n\n            _rowLength: function() {\n                var cells = this.rows[0] ? this.rows[0].children : [];\n                var length = cells.length;\n                var rowLength = 0;\n                var idx = 0;\n\n                if (length) {\n                    for (; idx < length; idx++) {\n                        rowLength += cells[idx].attr.colSpan || 1;\n                    }\n                }\n\n                if (!rowLength) {\n                    rowLength = this.measures;\n                }\n\n                return rowLength;\n            },\n\n            _row: function(tuple, memberIdx, parentMember) {\n                var rootName = this.rootTuple.members[memberIdx].name;\n                var levelNum = tuple.members[memberIdx].levelNum;\n                var rowKey = rootName + levelNum;\n                var map = this.map;\n                var parentRow;\n                var children;\n\n                var row = map[rowKey];\n\n                if (!row) {\n                    row = element(\"tr\", { className: tableStyles.tableRow }, []);\n\n                    row.parentMember = parentMember;\n                    row.collapsed = 0;\n                    row.colSpan = 0;\n                    row.rowSpan = 1;\n\n                    map[rowKey] = row;\n                    parentRow = map[rootName + (Number(levelNum) - 1)];\n\n                    if (parentRow) {\n                        children = parentRow.children;\n\n                        if (children[1] && children[1].attr.className.indexOf(\"k-alt\") === -1) {\n                            row.notFirst = true;\n                        } else {\n                            row.notFirst = parentRow.notFirst;\n                        }\n                    }\n\n                    this.rows.splice(this._rowIndex(parentRow) + 1, 0, row);\n                } else {\n                    row.notFirst = false;\n\n                    if (!row.parentMember || row.parentMember !== parentMember) {\n                        row.parentMember = parentMember;\n                        row.collapsed = 0;\n                        row.colSpan = 0;\n                    }\n                }\n\n                return row;\n            },\n\n            _measures: function(measures, tuple, className) {\n                var map = this.map;\n                var row = map.measureRow;\n                var measure;\n\n                if (!row) {\n                    row = element(\"tr\", { className: tableStyles.tableRow }, []);\n                    map.measureRow = row;\n                    this.rows.push(row);\n                }\n\n                for (var idx = 0, length = measures.length; idx < length; idx++) {\n                    measure = measures[idx];\n                    row.children.push(this._cell((className || \"\"), [this._content(measure, tuple)], measure));\n                }\n\n                return length;\n            },\n\n            _content: function(member, tuple) {\n                return htmlNode(this.template({\n                    member: member,\n                    tuple: tuple\n                }), true);\n            },\n\n            _cell: function(className, children, member) {\n                var cell = element(\"th\", { className: tableStyles.header + \" \" + className }, children);\n                cell.value = member.caption || member.name;\n                return cell;\n            },\n\n            _buildRows: function(tuple, memberIdx, parentMember) {\n                var members = tuple.members;\n                var member = members[memberIdx];\n                var nextMember = members[memberIdx + 1];\n\n                var row, childRow, children, childrenLength;\n                var cell, allCell, cellAttr;\n                var cellChildren = [];\n                var path;\n\n                var idx = 0;\n                var metadata;\n\n                var colSpan;\n                var collapsed = 0;\n                var memberCollapsed = 0;\n\n                if (member.measure) {\n                    this._measures(member.children, tuple);\n                    return;\n                }\n\n                path = kendo.stringify(buildPath(tuple, memberIdx));\n                row = this._row(tuple, memberIdx, parentMember);\n\n                children = member.children;\n                childrenLength = children.length;\n\n                metadata = this.metadata[path];\n                if (!metadata) {\n                    this.metadata[path] = metadata = createMetadata(Number(member.levelNum), memberIdx);\n                    metadata.rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n                }\n\n                this._indexes.push({\n                    path: path,\n                    tuple: tuple\n                });\n\n                if (member.hasChildren) {\n                    if (metadata.expanded === false) {\n                        collapsed = metadata.maxChildren;\n                        row.collapsed += collapsed;\n\n                        metadata.children = 0;\n                        childrenLength = 0;\n                    }\n\n                    var cellIconEl = $(\"<span></span>\");\n                    cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                    cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME })));\n                }\n\n                cellChildren.push(this._content(member, tuple));\n                cell = this._cell((row.notFirst ? \" k-first\" : \"\"), cellChildren, member);\n\n                row.children.push(cell);\n                row.colSpan += 1;\n\n                if (childrenLength) {\n                    allCell = this._cell(\" k-alt\", [this._content(member, tuple)], member);\n                    row.children.push(allCell);\n\n                    for (; idx < childrenLength; idx++) {\n                        childRow = this._buildRows(children[idx], memberIdx, member);\n                    }\n\n                    colSpan = childRow.colSpan;\n                    collapsed = childRow.collapsed;\n\n                    cell.attr.colSpan = colSpan;\n\n                    metadata.children = colSpan;\n                    metadata.members = 1;\n\n                    row.colSpan += colSpan;\n                    row.collapsed += collapsed;\n                    row.rowSpan = childRow.rowSpan + 1;\n\n                    if (nextMember) {\n                        if (nextMember.measure) {\n                            colSpan = this._measures(nextMember.children, tuple, \" k-alt\");\n                        } else {\n                            childRow = this._buildRows(tuple, memberIdx + 1);\n                            colSpan = childRow.colSpan;\n\n                            row.collapsed += childRow.collapsed;\n                            memberCollapsed = childRow.collapsed;\n                        }\n\n                        allCell.attr.colSpan = colSpan;\n                        colSpan -= 1;\n\n                        metadata.members += colSpan;\n                        row.colSpan += colSpan;\n                    }\n                } else if (nextMember) {\n                    if (nextMember.measure) {\n                        colSpan = this._measures(nextMember.children, tuple);\n                    } else {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        colSpan = childRow.colSpan;\n\n                        row.collapsed += childRow.collapsed;\n                        memberCollapsed = childRow.collapsed;\n                    }\n\n                    metadata.members = colSpan;\n\n                    if (colSpan > 1) {\n                        cell.attr.colSpan = colSpan;\n                        row.colSpan += colSpan - 1;\n                    }\n                }\n\n                if (metadata.maxMembers < (metadata.members + memberCollapsed)) {\n                    metadata.maxMembers = metadata.members + memberCollapsed;\n                }\n\n                children = metadata.children + collapsed;\n\n                if (metadata.maxChildren < children) {\n                    metadata.maxChildren = children;\n                }\n\n                (allCell || cell).tupleAll = true;\n\n                return row;\n            }\n        });\n\n        var RowBuilder = Class.extend({\n            init: function() {\n                this.metadata = {};\n            },\n\n            build: function(tuples) {\n                var tbody = this._tbody(tuples);\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.table }, [colgroup, tbody])\n                ];\n            },\n\n            reset: function() {\n                this.metadata = {};\n            },\n\n            _rowLength: function() {\n                var children = this.rows[0].children;\n                var length = 0;\n                var idx = 0;\n\n                var cell = children[idx];\n\n                while (cell) {\n                    length += (cell.attr.colSpan || 1);\n                    cell = children[++idx];\n                }\n\n                return length;\n            },\n\n            _colGroup: function() {\n                var length = this._rowLength();\n                var children = [];\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function(tuples) {\n                var root = tuples[0];\n\n                this.rootTuple = root;\n                this.rows = [];\n                this.map = {};\n\n                this._indexes = [];\n\n                if (root) {\n                    this._buildRows(root, 0);\n                    this._normalize();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _normalize: function() {\n                var rows = this.rows;\n                var rowsLength = rows.length;\n                var rowIdx = 0;\n\n                var members = this.rootTuple.members;\n                var firstMemberName = members[0].name;\n                var membersLength = members.length;\n                var memberIdx = 0;\n\n                var row;\n                var cell;\n                var maxcolSpan;\n                var map = this.map;\n                var allRow;\n\n                for (; rowIdx < rowsLength; rowIdx++) {\n                    row = rows[rowIdx];\n\n                    for (memberIdx = 0; memberIdx < membersLength; memberIdx++) {\n                        maxcolSpan = this[members[memberIdx].name];\n                        cell = row.colSpan[\"dim\" + memberIdx];\n\n                        if (cell && cell.colSpan < maxcolSpan) {\n                            cell.attr.colSpan = (maxcolSpan - cell.colSpan) + 1;\n                        }\n                    }\n                }\n\n                row = map[firstMemberName];\n                allRow = map[firstMemberName + \"all\"];\n\n                if (row) {\n                    row.children[0].attr.className = tableStyles.tableCell + \" k-first\";\n                }\n\n                if (allRow) {\n                    allRow.children[0].attr.className += \" k-first \" + tableStyles.tableCell;\n                }\n            },\n\n            _row: function(children) {\n                var row = element(\"tr\", { className: tableStyles.tableRow }, children);\n                row.rowSpan = 1;\n                row.colSpan = {};\n\n                this.rows.push(row);\n\n                return row;\n            },\n\n            _content: function(member, tuple) {\n                return htmlNode(this.template({\n                    member: member,\n                    tuple: tuple\n                }), true);\n            },\n\n            _cell: function(className, children, member) {\n                var cell = element(\"td\", { className: tableStyles.tableCell + \" \" + className }, children);\n                cell.value = member.caption || member.name;\n                return cell;\n            },\n\n            _buildRows: function(tuple, memberIdx) {\n                var map = this.map;\n                var path;\n\n                var members = tuple.members;\n                var member = members[memberIdx];\n                var nextMember = members[memberIdx + 1];\n\n                var children = member.children;\n                var childrenLength = children.length;\n\n                var levelNum = Number(member.levelNum);\n                var rootName = this.rootTuple.members[memberIdx].name;\n                var tuplePath = buildPath(tuple, memberIdx - 1).join(\"\");\n                var rootLevelNum = Number(this.rootTuple.members[memberIdx].levelNum);\n                var parentName = tuplePath + (rootLevelNum === levelNum ? \"\" : (member.parentName || \"\"));\n                var row = map[parentName + \"all\"] || map[parentName];\n                var colSpan = levelNum + 1;\n\n                var cell, allCell;\n                var childRow, allRow;\n                var metadata;\n                var className;\n                var cellChildren = [];\n                var expandIconAttr;\n                var idx;\n\n                if (!row || row.hasChild) {\n                    row = this._row();\n                } else {\n                    row.hasChild = true;\n                }\n\n                if (member.measure) {\n                    className = row.allCell ? \"k-grid-footer\" : \"\";\n                    row.children.push(this._cell(className, [ this._content(children[0], tuple) ], children[0]));\n\n                    row.rowSpan = childrenLength;\n\n                    for (idx = 1; idx < childrenLength; idx++) {\n                        this._row([ this._cell(className, [ this._content(children[idx], tuple) ], children[idx]) ]);\n                    }\n\n                    return row;\n                }\n\n                map[tuplePath + member.name] = row;\n\n                path = kendo.stringify(buildPath(tuple, memberIdx));\n\n                metadata = this.metadata[path];\n                if (!metadata) {\n                    this.metadata[path] = metadata = createMetadata(levelNum, memberIdx);\n                    metadata.rootLevelNum = rootLevelNum;\n                }\n\n                this._indexes.push({\n                    path: path,\n                    tuple: tuple\n                });\n\n                if (member.hasChildren) {\n                    if (metadata.expanded === false) {\n                        childrenLength = 0;\n                        metadata.children = 0;\n                    }\n\n                    var cellIconEl = $(\"<span></span>\");\n                    cellIconEl.attr(kendo.attr(\"path\"), path);\n\n                    cellChildren.push(kendo.dom.html(kendo.ui.icon(cellIconEl, { icon: childrenLength ? STATE_EXPANDED_ICONNAME : STATE_COLLAPSED_ICONNAME })));\n                }\n\n                cellChildren.push(this._content(member, tuple));\n\n                className = row.allCell && !childrenLength ? \"k-grid-footer\" : \"\";\n                cell = this._cell(className, cellChildren, member);\n                cell.colSpan = colSpan;\n\n                row.children.push(cell);\n                row.colSpan[\"dim\" + memberIdx] = cell;\n\n                if (!this[rootName] || this[rootName] < colSpan) {\n                    this[rootName] = colSpan;\n                }\n\n                if (childrenLength) {\n                    row.allCell = false;\n                    row.hasChild = false;\n\n                    for (idx = 0; idx < childrenLength; idx++) {\n                        childRow = this._buildRows(children[idx], memberIdx);\n\n                        if (row !== childRow) {\n                            row.rowSpan += childRow.rowSpan;\n                        }\n                    }\n\n                    if (row.rowSpan > 1) {\n                        cell.attr.rowSpan = row.rowSpan;\n                    }\n\n                    metadata.children = row.rowSpan;\n\n                    allCell = this._cell(\"k-grid-footer\", [this._content(member, tuple)], member);\n                    allCell.colSpan = colSpan;\n\n                    allRow = this._row([ allCell ]);\n                    allRow.colSpan[\"dim\" + memberIdx] = allCell;\n                    allRow.allCell = true;\n\n                    map[tuplePath + member.name + \"all\"] = allRow;\n\n                    if (nextMember) {\n                        childRow = this._buildRows(tuple, memberIdx + 1);\n                        allCell.attr.rowSpan = childRow.rowSpan;\n                    }\n\n                    row.rowSpan += allRow.rowSpan;\n\n                    metadata.members = allRow.rowSpan;\n\n                } else if (nextMember) {\n                    row.hasChild = false;\n                    this._buildRows(tuple, memberIdx + 1);\n\n                    (allCell || cell).attr.rowSpan = row.rowSpan;\n\n                    metadata.members = row.rowSpan;\n                }\n\n                if (metadata.maxChildren < metadata.children) {\n                    metadata.maxChildren = metadata.children;\n                }\n\n                if (metadata.maxMembers < metadata.members) {\n                    metadata.maxMembers = metadata.members;\n                }\n\n                return row;\n            }\n        });\n\n        var ContentBuilder = Class.extend({\n            init: function() {\n                this.columnAxis = {};\n                this.rowAxis = {};\n            },\n\n            build: function(data, columnAxis, rowAxis) {\n                var index = columnAxis.indexes[0];\n                var metadata = columnAxis.metadata[index ? index.path : undefined$1];\n\n                this.columnAxis = columnAxis;\n                this.rowAxis = rowAxis;\n\n                this.data = data;\n\n                this.rowLength = metadata ? metadata.maxChildren + metadata.maxMembers : columnAxis.measures.length || 1;\n\n                if (!this.rowLength) {\n                    this.rowLength = 1;\n                }\n\n                var tbody = this._tbody();\n                var colgroup = this._colGroup();\n\n                return [\n                    element(\"table\", { className: tableStyles.contentTable }, [colgroup, tbody])\n                ];\n            },\n\n            _colGroup: function() {\n                var length = this.columnAxis.measures.length || 1;\n                var children = [];\n                var idx = 0;\n\n                if (this.rows[0]) {\n                    length = this.rows[0].children.length;\n                }\n\n                for (; idx < length; idx++) {\n                    children.push(element(\"col\", null));\n                }\n\n                return element(\"colgroup\", null, children);\n            },\n\n            _tbody: function() {\n                this.rows = [];\n\n                if (this.data[0]) {\n                    this.columnIndexes = this._indexes(this.columnAxis, this.rowLength);\n                    this.rowIndexes = this._indexes(this.rowAxis, Math.ceil(this.data.length / this.rowLength));\n\n                    this._buildRows();\n                } else {\n                    this.rows.push(element(\"tr\", { className: tableStyles.tableRow }, [ element(\"td\", { className: tableStyles.tableCell }, [ htmlNode(\"&nbsp;\") ]) ]));\n                }\n\n                return element(\"tbody\", { className: tableStyles.tbody }, this.rows);\n            },\n\n            _indexes: function(axisInfo, total) {\n                var result = [];\n                var axisInfoMember;\n                var indexes = axisInfo.indexes;\n                var metadata = axisInfo.metadata;\n                var measures = axisInfo.measures;\n                var measuresLength = measures.length || 1;\n\n                var current;\n                var dataIdx = 0;\n                var firstEmpty = 0;\n\n                var idx = 0;\n                var length = indexes.length;\n                var measureIdx;\n                var index;\n\n                var children;\n                var skipChildren;\n\n                if (!length) {\n                    for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                        result[measureIdx] = {\n                            index: measureIdx,\n                            measure: measures[measureIdx],\n                            tuple: null\n                        };\n                    }\n\n                    return result;\n                }\n\n                for (; idx < length; idx++) {\n                    axisInfoMember = indexes[idx];\n                    current = metadata[axisInfoMember.path];\n                    children = current.children + current.members;\n                    skipChildren = 0;\n\n                    if (children) {\n                        children -= measuresLength;\n                    }\n\n                    if (current.expanded === false && current.children !== current.maxChildren) {\n                        skipChildren = current.maxChildren;\n                    }\n\n                    if (current.parentMember && current.levelNum === current.rootLevelNum) {\n                        children = -1;\n                    }\n\n                    if (children > -1) {\n                        for (measureIdx = 0; measureIdx < measuresLength; measureIdx++) {\n                            index = children + measureIdx;\n                            if (!current.children) {\n                                index += firstEmpty;\n                            }\n\n                            result[children + firstEmpty + measureIdx] = {\n                                children: children,\n                                index: dataIdx,\n                                measure: measures[measureIdx],\n                                tuple: axisInfoMember.tuple\n                            };\n                            dataIdx += 1;\n                        }\n\n                        while (result[firstEmpty] !== undefined$1) {\n                            firstEmpty += 1;\n                        }\n                    }\n\n                    if (firstEmpty === total) {\n                        break;\n                    }\n\n                    dataIdx += skipChildren;\n                }\n\n                return result;\n            },\n\n            _buildRows: function() {\n                var rowIndexes = this.rowIndexes;\n                var length = rowIndexes.length;\n                var idx = 0;\n\n                for (; idx < length; idx++) {\n                    var rowIndex = rowIndexes[idx];\n                    if (rowIndex) {\n                        this.rows.push(this._buildRow(rowIndex));\n                    }\n                }\n            },\n\n            _buildRow: function(rowInfo) {\n                var startIdx = rowInfo.index * this.rowLength;\n                var columnIndexes = this.columnIndexes;\n                var length = columnIndexes.length;\n                var columnInfo;\n                var cells = [];\n                var idx = 0;\n\n                var templateInfo;\n                var cell, cellContent;\n                var attr, dataItem, measure;\n\n                for (; idx < length; idx++) {\n                    columnInfo = columnIndexes[idx];\n\n                    if (columnInfo === undefined$1) {\n                        continue;\n                    }\n\n                    attr = { className: tableStyles.tableCell };\n                    if (columnInfo.children) {\n                        attr.className += \" k-alt\";\n                    }\n\n                    cellContent = \"\";\n                    dataItem = this.data[startIdx + columnInfo.index];\n                    measure = columnInfo.measure || rowInfo.measure;\n\n                    templateInfo = {\n                        columnTuple: columnInfo.tuple,\n                        rowTuple: rowInfo.tuple,\n                        measure: measure,\n                        dataItem: dataItem\n                    };\n\n                    if (dataItem.value !== \"\" && measure && measure.type) {\n                        if (measure.type === \"status\") {\n                            cellContent = this.kpiStatusTemplate(templateInfo);\n                        } else if (measure.type === \"trend\") {\n                            cellContent = this.kpiTrendTemplate(templateInfo);\n                        }\n                    }\n\n                    if (!cellContent) {\n                        cellContent = this.dataTemplate(templateInfo);\n                    }\n\n                    cell = element(\"td\", attr, [ htmlNode(cellContent) ]);\n                    cell.value = dataItem.value;\n                    cells.push(cell);\n                }\n\n                attr = { className: tableStyles.tableRow };\n                if (rowInfo.children) {\n                    attr.className += \" k-grid-footer\";\n                }\n\n                return element(\"tr\", attr, cells);\n            }\n        });\n\n        ui.plugin(PivotGrid);\n\n        kendo.PivotExcelExporter = kendo.Class.extend({\n            init: function(options) {\n                this.options = options;\n\n                this.widget = options.widget;\n                this.dataSource = this.widget.dataSource;\n            },\n\n            _columns: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var columnHeaderLength = columnHeaderTable.children[0].children.length;\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                var width = this.widget.options.columnWidth;\n                var result = [];\n                var idx;\n\n                if (rowHeaderLength && this.dataSource.data()[0]) {\n                    for (idx = 0; idx < rowHeaderLength; idx++) {\n                        result.push({\n                            autoWidth: true\n                        });\n                    }\n                }\n\n                for (idx = 0; idx < columnHeaderLength; idx++) {\n                    result.push({\n                        autoWidth: false,\n                        width: width\n                    });\n                }\n\n                return result;\n            },\n\n            _cells: function(rows, type, callback) {\n                var result = [];\n\n                var i = 0;\n                var length = rows.length;\n\n                var cellsLength;\n                var row, cells;\n                var j, cell;\n\n                for (; i < length; i++) {\n                    row = [];\n                    cells = rows[i].children;\n                    cellsLength = cells.length;\n\n                    for (j = 0; j < cellsLength; j++) {\n                        cell = cells[j];\n\n                        row.push({\n                            background: \"#7a7a7a\",\n                            color: \"#fff\",\n                            value: cell.value,\n                            colSpan: cell.attr.colSpan || 1,\n                            rowSpan: cell.attr.rowSpan || 1\n                        });\n                    }\n\n                    if (callback) {\n                        callback(row, i);\n                    }\n\n                    result.push({\n                        cells: row,\n                        type: type\n                    });\n                }\n\n                return result;\n            },\n\n            _rows: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var columnHeaderLength = columnHeaderTable.children[0].children.length;\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n\n                var columnHeaderRows = columnHeaderTable.children[1].children;\n                var rowHeaderRows = rowHeaderTable.children[1].children;\n                var contentRows = this.widget.contentTree.children[0].children[1].children;\n\n                var columnRows = this._cells(columnHeaderRows, \"header\");\n\n                if (rowHeaderLength) {\n                    columnRows[0].cells.splice(0, 0, {\n                        background: \"#7a7a7a\",\n                        color: \"#fff\",\n                        value: \"\",\n                        colSpan: rowHeaderLength,\n                        rowSpan: columnHeaderRows.length\n                    });\n                }\n\n                var dataCallback = function(row, index) {\n                    var j = 0;\n                    var cell, value;\n                    var cells = contentRows[index].children;\n\n                    for (; j < columnHeaderLength; j++) {\n                        cell = cells[j];\n                        value = Number(cell.value);\n\n                        if (isNaN(value)) {\n                            value = cell.value;\n                        }\n\n                        row.push({\n                            background: \"#dfdfdf\",\n                            color: \"#333\",\n                            value: value,\n                            colSpan: 1,\n                            rowSpan: 1\n                        });\n                    }\n                };\n\n                var rowRows = this._cells(rowHeaderRows, \"data\", dataCallback);\n\n                return columnRows.concat(rowRows);\n            },\n\n            _freezePane: function() {\n                var columnHeaderTable = this.widget.columnsHeaderTree.children[0];\n                var rowHeaderTable = this.widget.rowsHeaderTree.children[0];\n\n                var rowHeaderLength = rowHeaderTable.children[0].children.length;\n                var columnHeaderRows = columnHeaderTable.children[1].children;\n\n                return {\n                    colSplit: rowHeaderLength,\n                    rowSplit: columnHeaderRows.length\n                };\n            },\n\n            workbook: function() {\n                var promise,\n                    resolveFn = function() {\n                        return {\n                            sheets: [ {\n                                columns: this._columns(),\n                                rows: this._rows(),\n                                freezePane: this._freezePane(),\n                                filter: null\n                            } ]\n                        };\n                    };\n\n                if (this.dataSource.view()[0]) {\n                    promise = $.Deferred();\n                    promise.resolve();\n                } else {\n                    promise = this.dataSource.fetch();\n                }\n\n                return promise.then(resolveFn.bind(this));\n            }\n        });\n\n        var PivotExcelMixin = {\n            extend: function(proto) {\n               proto.events.push(\"excelExport\");\n               proto.options.excel = $.extend(proto.options.excel, this.options);\n               proto.saveAsExcel = this.saveAsExcel;\n            },\n            options: {\n                proxyURL: \"\",\n                filterable: false,\n                fileName: \"Export.xlsx\"\n            },\n            saveAsExcel: function() {\n                var excel = this.options.excel || {};\n\n                var exporter = new kendo.PivotExcelExporter({\n                    widget: this\n                });\n\n                var resolveFn = function(book) {\n                    if (!this.trigger(\"excelExport\", { workbook: book })) {\n                        var workbook = new kendo.ooxml.Workbook(book);\n\n                        workbook.toDataURLAsync().then(function(dataURI) {\n                            kendo.saveAs({\n                                dataURI: dataURI,\n                                fileName: book.fileName || excel.fileName,\n                                proxyURL: excel.proxyURL,\n                                forceProxy: excel.forceProxy\n                            });\n                        });\n                    }\n                };\n\n                exporter.workbook().then(resolveFn.bind(this));\n            }\n        };\n\n        kendo.PivotExcelMixin = PivotExcelMixin;\n\n        if (kendo.ooxml && kendo.ooxml.Workbook) {\n            PivotExcelMixin.extend(PivotGrid.prototype);\n        }\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(PivotGrid.prototype);\n\n            PivotGrid.fn._drawPDF = function() {\n                return this._drawPDFShadow({\n                    width: this.wrapper.width()\n                }, {\n                    avoidLinks: this.options.pdf.avoidLinks\n                });\n            };\n        }\n\n        if (kendo.PDFMixin) {\n            kendo.PDFMixin.extend(PivotGridV2.prototype);\n\n            PivotGridV2.fn._drawPDF = function() {\n                return this._drawPDFShadow({\n                    width: this.wrapper.width()\n                }, {\n                    avoidLinks: this.options.pdf.avoidLinks\n                });\n            };\n        }\n\n    })(window.kendo.jQuery);\n\n}));\n"]}