{"version":3,"file":"kendo.upload.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","Widget","ui","antiForgeryTokens","logToConsole","rFileExtension","NS","SELECT","UPLOAD","SUCCESS","ERROR","COMPLETE","CANCEL","CLEAR","PAUSE","RESUME","PROGRESS","REMOVE","INVALIDMAXFILESIZE","INVALIDMINFILESIZE","INVALIDFILEEXTENSION","HOVER_STATE","FOCUS_STATE","PROGRESSBAR_SELECTOR","TABINDEX","headerStatusIconName","Upload","extend","init","element","options","that","this","progressbars","fn","call","name","multiple","directory","localization","activeInput","wrapper","closest","length","_wrapInput","_activeInput","toggle","enabled","ns","_ns","guid","on","_onParentFormSubmit","bind","_onParentFormReset","_initUploadModule","_toggleDropZone","_onFileAction","_onClearSelected","_onUploadSelected","_onKeyDown","_focusout","val","_onInputChange","target","events","showFileList","template","files","async","autoRetryAfter","bufferChunkSize","maxAutoRetries","removeVerb","autoUpload","withCredentials","accept","useArrayBuffer","select","cancel","retry","remove","pause","resume","clearSelectedFiles","uploadSelectedFiles","dropFilesHere","invalidFiles","statusUploading","statusUploaded","statusWarning","statusFailed","headerStatusUploading","headerStatusPaused","headerStatusUploaded","uploadSuccess","uploadFail","invalidMaxFileSize","invalidMinFileSize","invalidFileExtension","validation","allowedExtensions","maxFileSize","minFileSize","dropZone","saveUrl","_module","_supportsFormData","formDataUploadModule","iframeUploadModule","_async","initialFiles","_renderInitialFiles","syncUploadModule","setOptions","off","attr","_supportsMultiple","enable","disable","toggleClass","prop","focus","trigger","destroy","customDropZone","document","add","forEach","progressbar","fileEntry","onPause","pauseIcon","find","icon","parent","onResume","playIcon","upload","onSaveSelected","getFiles","filesData","allFiles","listItems","i","data","j","push","clearAllFiles","each","index","file","_removeFileByDomElement","removeAllFiles","removeFileByUid","uid","_removeFileByUid","clearFileByUid","shouldSendRemoveRequest","clearFile","callback","_removeFile","removeFile","fileData","hasClass","onCancel","onRemove","_hideHeaderUploadstatus","_updateHeaderUploadStatus","_addInput","sourceInput","nodeType","input","clone","insertAfter","prefix","hide","removeAttr","e","preventDefault","addClass","removeClass","_adjustFocusState","focusedItem","toFocus","_arrowKeyNavigation","key","kendoKeys","keys","DOWN","stopPropagation","first","next","UP","prev","RIGHT","LEFT","_preventFocusRemove","_asyncCommandKeyNavigation","eventArgs","_retryClicked","ESC","_checkAllComplete","SPACEBAR","ENTER","is","chunkSize","concurrent","finish","show","metaData","prepareChunk","onRetry","_commandKeyNavigation","hasValidationErrors","_filesContainValidationErrors","headers","DELETE","TAB","commandKeys","keyCode","indexOf","assignGuidToFiles","_inputFiles","_isAsyncNonBatch","validateFiles","onSelect","_readDirectory","item","deferred","Deferred","dirReader","createReader","allFolderFiles","readEntries","entries","concat","resolve","reject","promise","_readFile","fullpath","fullPath","relativePath","slice","droppedFolderFiles","droppedFolderCounter","setTimeout","_proceedDroppedItems","_traverseFileTree","skipCounter","then","items","isFile","isDirectory","_onDrop","dt","originalEvent","dataTransfer","droppedFiles","stopEvent","directoryDrop","webkitGetAsEntry","entry","getAllFileInfo","splice","hasErrors","batch","idx","currentFile","_enqueueFile","fileNames","_supportsRemove","_fileAction","_prepareTemplateData","templateData","totalSize","size","_createProgressbarWapper","_createFileIconWrapper","fileTypeIcon","iconClass","_progressbarInit","kendoProgressBar","animation","showStatus","_prepareDefaultSingleFileEntryTemplate","fileSize","getTotalFilesSizeMessage","fileGroup","getFileGroup","extension","errors","isError","invalidClass","fileDetails","_prepareDefaultMultipleFileEntriesTemplate","filesHaveValidationErrors","totalFileSize","sort","a","b","existingFileEntries","removeEventArgs","isProgressbar","fileUid","fileList","progressbarSelector","appendTo","angular","elements","value","_removeFileEntry","_hideActionButtons","fileElement","actionKey","skipClear","firstActionButton","iconsNameDictionary","hasOwnProperty","_clearFileAction","firstActionIcon$1","append","firstActionIcon","_renderAction","_fileState","stateKey","currentState","uploading","text","uploaded","failed","iconName","actionText","empty","button","_onFileProgress","percentComplete","progressBar","prepend","getFileEntry","_onUploadSuccess","response","xhr","fileInfo","operation","XMLHttpRequest","_setUploadErrorState","after","_hideUploadProgress","_onUploadError","module","responseText","_decreasePosition","_autoRetryAfter","retries","performUpload","uploadPercentage","_updateUploadProgress","fileMetaData","totalChunks","Math","round","delay","fadeOut","_showActionButtons","actionsWrapper","uploadButton","clearButton","html","renderButton","themeColor","_showHeaderUploadStatus","isUploading","headerUploadStatus","headerUploadStatusIcon","currentlyUploading","not","currentlyFailed","currentlyPaused","onAbort","windows","_userAgent","support","browser","opera","safari","_supportsDrop","userAgent","toLowerCase","test","navigator","_setupDropZone","dropEffect","bindDragEventWrappers","_bindDocumentDragEventWrappers","_setupCustomDropZone","removeUrl","_submitRemove","onSuccess","onError","removeField","params","jQuery","ajax","type","dataType","dataFilter","normalizeJSON","url","traditional","success","error","xhrFields","hasLabel","wrap","prependTo","inputFiles","prototype","filesContainErrors","relatedInput","getFileName","iframes","_frameId","prepareUpload","iframe","form","saveField","createFrame","registerFrame","createForm","frame","fileValidation","cleanupFrame","unregisterFrame","body","dataInput","one","onIframeLoad","submit","started","isFileUploadStarted","contents","ex","processResponse","fakeXHR","tryParseJSON","jsonResult","statusText","status","stopFrameSubmit","removeUploadedFile","id","action","stop","execCommand","grep","position","cancelled","paused","map","join","$input","slashIndex","lastIndexOf","substr","getFileExtension","rawFiles","fileName","rawFile","htmlEncode","matches","match","unique","validationInfo","extensions","ext","substring","validateFileExtension","validateFileSize","validationErrors","inArray","toFixed","shouldRemoveFileEntry","textStatus","json","JSON","parse","namespace","onDragEnter","onDragLeave","hideInterval","lastDrag","Date","setInterval","clearInterval","sourceElement","fileEntries","enqueueFiles","filesLength","webkitRelativePath","formData","createFormData","createXHR","removeFileEntry","populateFormData","FileReader","postFormData","reader","onload","fileArrayBuffer","_appendBuffer","result","err","onerror","readAsArrayBuffer","_getCurrentChunk","buffer1","buffer2","tmp","Uint8Array","byteLength","set","buffer","filter","prevEntry","stopUploadRequest","_increaseChunkIndex","addEventListener","onRequestSuccess","onRequestError","onRequestProgress","open","setRequestHeader","send","FormData","chunk","serializedMetaData","stringify","raiseError","cleanupFileEntry","_resetChunkIndex","uploadComplete","isUploadButtonVisible","loaded","total","abort","chunkIndex","contentType","ceil","uploadUid","_decreaseChunkIndex","methodToInvoke","oldPosition","_getChunker","mozSlice","webkitSlice","plugin"],"sources":["kendo.upload.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.core', 'kendo.progressbar', 'kendo.icons'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"upload\",\n        name: \"Upload\",\n        category: \"web\",\n        description: \"The Upload widget uses progressive enhancement to deliver the best possible uploading experience to users.\",\n        depends: [\"core\", \"progressbar\", \"icons\"]\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            Widget = kendo.ui.Widget,\n            antiForgeryTokens = kendo.antiForgeryTokens,\n            logToConsole = kendo.logToConsole,\n            rFileExtension = /\\.([^\\.]+)$/,\n            NS = \".kendoUpload\",\n            SELECT = \"select\",\n            UPLOAD = \"upload\",\n            SUCCESS = \"success\",\n            ERROR = \"error\",\n            COMPLETE = \"complete\",\n            CANCEL = \"cancel\",\n            CLEAR = \"clear\",\n            PAUSE = \"pause\",\n            RESUME = \"resume\",\n            PROGRESS = \"progress\",\n            REMOVE = \"remove\",\n            VALIDATIONERRORS = \"validationErrors\",\n            INVALIDMAXFILESIZE = \"invalidMaxFileSize\",\n            INVALIDMINFILESIZE = \"invalidMinFileSize\",\n            INVALIDFILEEXTENSION = \"invalidFileExtension\",\n            PROGRESSHIDEDELAY = 1000,\n            PROGRESSHIDEDURATION = 2000,\n            HOVER_STATE = \"k-hover\",\n            FOCUS_STATE = \"k-focus\",\n            PROGRESSBAR_CLASS = \"k-progressbar\",\n            PROGRESSBAR_SELECTOR = \".\" + PROGRESSBAR_CLASS,\n            PROGRESSBAR_TEMPLATE_SELECTOR = \".k-progress\",\n            TABINDEX = \"tabindex\",\n            WARNINGICON_SELECTOR = \".k-i-exclamation-circle,.k-svg-i-exclamation-circle\";\n\n        var headerStatusIconName = {\n            loading: \"upload\",\n            warning: \"exclamation-circle\",\n            success: \"check\"\n        };\n\n        var Upload = Widget.extend({\n            init: function(element, options) {\n                var that = this;\n                that.progressbars = [];\n\n                Widget.fn.init.call(that, element, options);\n\n                that.name = element.name;\n                that.multiple = that.options.multiple;\n                that.directory = that.options.directory;\n                that.localization = that.options.localization;\n\n                var activeInput = that.element;\n                that.wrapper = activeInput.closest(\".k-upload\");\n                if (that.wrapper.length === 0) {\n                    that.wrapper = that._wrapInput(activeInput);\n                }\n\n                that._activeInput(activeInput);\n                that.toggle(that.options.enabled);\n\n                var ns = that._ns = NS + \"-\" + kendo.guid();\n                activeInput.closest(\"form\")\n                    .on(\"submit\" + ns, that._onParentFormSubmit.bind(that))\n                    .on(\"reset\" + ns, that._onParentFormReset.bind(that));\n\n                that._initUploadModule();\n\n                that._toggleDropZone();\n\n                that.wrapper\n                    .on(\"click\", \".k-upload-action\", that._onFileAction.bind(that))\n                    .on(\"click\", \".k-clear-selected\", that._onClearSelected.bind(that))\n                    .on(\"click\", \".k-upload-selected\", that._onUploadSelected.bind(that))\n                    .on(\"keydown\", that._onKeyDown.bind(that))\n                    .on(\"focusout\", that._focusout.bind(that));\n\n                if (that.element.val()) {\n                    that._onInputChange({ target: that.element });\n                }\n            },\n\n            events: [\n                SELECT,\n                UPLOAD,\n                SUCCESS,\n                ERROR,\n                COMPLETE,\n                CANCEL,\n                CLEAR,\n                PROGRESS,\n                REMOVE,\n                PAUSE,\n                RESUME\n            ],\n\n            options: {\n                name: \"Upload\",\n                enabled: true,\n                multiple: true,\n                directory: false,\n                showFileList: true,\n                template: \"\",\n                files: [],\n                async: {\n                    autoRetryAfter: 0,\n                    bufferChunkSize: 10000000,\n                    maxAutoRetries: 1,\n                    removeVerb: \"POST\",\n                    autoUpload: true,\n                    withCredentials: true,\n                    accept: \"*/*; q=0.5, application/json\",\n                    useArrayBuffer: false\n                },\n                localization: {\n                    \"select\": \"Select files...\",\n                    \"cancel\": \"Cancel\",\n                    \"retry\": \"Retry\",\n                    \"remove\": \"Remove\",\n                    \"pause\": \"Pause\",\n                    \"resume\": \"Resume\",\n                    \"clearSelectedFiles\": \"Clear\",\n                    \"uploadSelectedFiles\": \"Upload\",\n                    \"dropFilesHere\": \"Drop files here to upload\",\n                    \"invalidFiles\": \"Invalid file(s). Please check file upload requirements.\",\n                    \"statusUploading\": \"uploading\",\n                    \"statusUploaded\": \"uploaded\",\n                    \"statusWarning\": \"warning\",\n                    \"statusFailed\": \"failed\",\n                    \"headerStatusUploading\": \"Uploading...\",\n                    \"headerStatusPaused\": \"Paused\",\n                    \"headerStatusUploaded\": \"Done\",\n                    \"uploadSuccess\": \"File(s) uploaded successfully.\",\n                    \"uploadFail\": \"File(s) failed to upload.\",\n                    \"invalidMaxFileSize\": \"File size too large.\",\n                    \"invalidMinFileSize\": \"File size too small.\",\n                    \"invalidFileExtension\": \"File type not allowed.\"\n                },\n                validation: {\n                    allowedExtensions: [],\n                    maxFileSize: 0,\n                    minFileSize: 0\n                },\n                dropZone: \"\"\n            },\n\n            _initUploadModule: function() {\n                var that = this,\n                    options = that.options;\n\n                if (options.async.saveUrl) {\n                    that._module = that._supportsFormData() ?\n                    new formDataUploadModule(that) :\n                    new iframeUploadModule(that);\n                    that._async = true;\n\n                    var initialFiles = options.files;\n                    if (initialFiles.length > 0) {\n                        that._renderInitialFiles(initialFiles);\n                    }\n\n                } else {\n                    that._module = new syncUploadModule(that);\n                }\n            },\n\n            setOptions: function(options) {\n                var that = this,\n                    activeInput = that.element;\n\n                $(that.options.dropZone).off(that._ns);\n\n                Widget.fn.setOptions.call(that, options);\n\n                that.multiple = that.options.multiple;\n                that.directory = that.options.directory;\n\n                activeInput.attr(\"multiple\", that._supportsMultiple() ? that.multiple : false);\n                if (that.directory) {\n                    activeInput.attr(\"webkitdirectory\", that.directory);\n                    activeInput.attr(\"directory\", that.directory);\n                }\n                that.toggle(that.options.enabled);\n\n                that._initUploadModule();\n\n                that._toggleDropZone();\n            },\n\n            enable: function(enable) {\n                enable = typeof (enable) === \"undefined\" ? true : enable;\n                this.toggle(enable);\n            },\n\n            disable: function() {\n                this.toggle(false);\n            },\n\n            toggle: function(enable) {\n                enable = typeof (enable) === \"undefined\" ? enable : !enable;\n                this.wrapper.toggleClass(\"k-disabled\", enable);\n                this.element.prop(\"disabled\", enable);\n            },\n\n            focus: function() {\n                this.element.trigger(\"focus\");\n            },\n\n            destroy: function() {\n                var that = this;\n                var customDropZone = $(that.options.dropZone);\n\n                $(document)\n                    .add($(\".k-dropzone\", that.wrapper))\n                    .add(that.wrapper.closest(\"form\"))\n                    .off(that._ns);\n\n                if (customDropZone.length > 0) {\n                    customDropZone.off(that._ns);\n                }\n\n                $(that.element).off(NS);\n\n                if (that.progressbars) {\n                    that.progressbars.forEach(function (progressbar) {\n                        progressbar.destroy();\n                    });\n                }\n                Widget.fn.destroy.call(that);\n            },\n            pause: function(fileEntry) {\n                this._module.onPause({ target: $(fileEntry, this.wrapper) });\n\n                var pauseIcon = fileEntry.find(\".k-i-pause-sm,.k-svg-i-pause-sm\");\n                kendo.ui.icon(pauseIcon, { icon: \"play-sm\" });\n                pauseIcon.attr(\"title\", this.localization.resume);\n                $(pauseIcon).parent().attr(\"aria-label\", this.localization.resume);\n            },\n            resume: function(fileEntry) {\n                this._module.onResume({ target: $(fileEntry, this.wrapper) });\n\n                var playIcon = fileEntry.find(\".k-i-play-sm,.k-svg-i-play-sm\");\n                kendo.ui.icon(playIcon, { icon: \"pause-sm\" });\n                playIcon.attr(\"title\", this.localization.pause);\n                $(playIcon).parent().attr(\"aria-label\", this.localization.pause);\n            },\n            upload: function() {\n                var that = this;\n\n                that._module.onSaveSelected();\n            },\n\n            getFiles: function() {\n                var that = this;\n                var filesData;\n                var allFiles = [];\n                var listItems = that.wrapper.find(\".k-file\");\n\n                for (var i = 0; i < listItems.length; i++) {\n                    filesData = $(listItems[i]).data(\"fileNames\");\n\n                    if (filesData) {\n                        for (var j = 0; j < filesData.length; j++) {\n                            allFiles.push(filesData[j]);\n                        }\n                    }\n                }\n\n                return allFiles;\n            },\n\n            clearAllFiles: function() {\n                var that = this;\n                var files = that.wrapper.find(\".k-file\");\n\n                files.each(function(index, file) {\n                    that._removeFileByDomElement(file, false);\n                });\n            },\n\n            removeAllFiles: function() {\n                var that = this;\n                var files = that.wrapper.find(\".k-file\");\n\n                files.each(function(index, file) {\n                    that._removeFileByDomElement(file, true);\n                });\n            },\n\n            removeFileByUid: function(uid) {\n                this._removeFileByUid(uid, true);\n            },\n\n            clearFileByUid: function(uid) {\n                this._removeFileByUid(uid, false);\n            },\n\n            _removeFileByUid: function(uid, shouldSendRemoveRequest) {\n                var that = this;\n                var fileEntry;\n\n                if (typeof uid !== 'string') { return; }\n\n                fileEntry = $('.k-file[' + kendo.attr('uid') + '=\"' + uid + '\"]', that.wrapper);\n\n                if (fileEntry.length > 0) {\n                    that._removeFileByDomElement(fileEntry, shouldSendRemoveRequest);\n                }\n            },\n\n            clearFile: function(callback) {\n                this._removeFile(callback, false);\n            },\n\n            removeFile: function(callback) {\n                this._removeFile(callback, true);\n            },\n\n            _removeFile: function(callback, shouldSendRemoveRequest) {\n                var that = this;\n                var files = that.wrapper.find(\".k-file\");\n                var fileData;\n\n                if (typeof callback === \"function\") {\n                    files.each(function(index, file) {\n                        fileData = $(file).data(\"fileNames\");\n\n                        if (callback(fileData)) {\n                            that._removeFileByDomElement(file, shouldSendRemoveRequest);\n                        }\n                    });\n                }\n            },\n\n            _removeFileByDomElement: function(fileEntry, shouldSendRemoveRequest) {\n                var that = this;\n                var fileData = {\n                    target: $(fileEntry, that.wrapper)\n                };\n                var allFiles;\n\n                if (that.options.async.saveUrl) {\n                    if ($(fileEntry).hasClass(\"k-file-progress\")) {\n                        that._module.onCancel(fileData);\n                    } else {\n                        that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                    }\n\n                    allFiles = $(\".k-file\", that.wrapper);\n\n                    if (allFiles.length === 0) {\n                        that._hideHeaderUploadstatus();\n                    } else {\n                        that._updateHeaderUploadStatus();\n                    }\n                } else {\n                    that._module.onRemove(fileData, {}, shouldSendRemoveRequest);\n                }\n            },\n\n            _addInput: function(sourceInput) {\n                //check if source input is a DOM element. Required for some unit tests\n                if (!sourceInput[0].nodeType) {\n                    return;\n                }\n\n                var that = this,\n                    input = sourceInput.clone().val(\"\");\n\n                input\n                    .insertAfter(that.element)\n                    .data(\"kendo\" + that.options.prefix + that.options.name, that);\n\n                $(that.element)\n                    .hide()\n                    .attr(TABINDEX, \"-1\")\n                    .removeAttr(\"id\")\n                    .off(NS);\n\n                that._activeInput(input);\n                that.element.trigger(\"focus\");\n            },\n\n            _activeInput: function(input) {\n                var that = this,\n                    wrapper = that.wrapper;\n\n                that.element = input;\n\n                if (that.directory) {\n                    input.attr(\"webkitdirectory\", that.directory);\n                    input.attr(\"directory\", that.directory);\n                }\n\n                input\n                    .attr(\"multiple\", that._supportsMultiple() ? that.multiple : false)\n                    .attr(\"autocomplete\", \"off\")\n                    .on(\"click\" + NS, function(e) {\n                        if (wrapper.hasClass(\"k-disabled\")) {\n                            e.preventDefault();\n                        }\n                    })\n                    .on(\"focus\" + NS, function() {\n                        $(this).parent().addClass(FOCUS_STATE);\n                    })\n                    .on(\"blur\" + NS, function() {\n                        $(this).parent().removeClass(FOCUS_STATE);\n                    })\n                    .on(\"change\" + NS, that._onInputChange.bind(that));\n            },\n\n            _adjustFocusState: function(focusedItem, toFocus) {\n                focusedItem.removeClass(FOCUS_STATE);\n                focusedItem.attr(TABINDEX, -1);\n                toFocus.addClass(FOCUS_STATE);\n                toFocus.attr(TABINDEX, 0);\n            },\n\n            _arrowKeyNavigation: function(e, key, focusedItem) {\n                var that = this,\n                    kendoKeys = kendo.keys,\n                    toFocus;\n\n                if (key === kendoKeys.DOWN) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    toFocus = that.wrapper.find(\".k-upload-files .k-file\").first();\n\n                    if (focusedItem.length > 0) {\n                        if (focusedItem.hasClass(\"k-upload-action\")) {\n                            focusedItem.removeClass(FOCUS_STATE);\n                            focusedItem = focusedItem.closest(\".k-file\");\n                        }\n\n                        toFocus = focusedItem.next();\n                    }\n\n                    that._adjustFocusState(focusedItem, toFocus);\n\n                    if (!toFocus || toFocus.length === 0) {\n                        toFocus = that.wrapper.find(\".k-clear-selected\");\n                    }\n                } else if (key === kendoKeys.UP) {\n                    e.preventDefault();\n                    e.stopPropagation();\n\n                    toFocus = that.wrapper.find(\".k-upload-files .k-file:last\");\n\n                    if (focusedItem.length > 0) {\n                        if (focusedItem.hasClass(\"k-upload-action\")) {\n                            focusedItem.removeClass(FOCUS_STATE);\n                            focusedItem = focusedItem.closest(\".k-file\");\n                        }\n\n                        toFocus = focusedItem.prev();\n                    }\n\n                    that._adjustFocusState(focusedItem, toFocus);\n                } else if (key === kendoKeys.RIGHT) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        toFocus = focusedItem.next(\".k-upload-action\");\n\n                        if (!toFocus || toFocus.length === 0) {\n                            toFocus = focusedItem.parent().find(\".k-upload-action:first\");\n                        }\n                    } else if (focusedItem.length > 0) {\n                        toFocus = focusedItem.find(\".k-upload-action:first\");\n                    }\n\n                    if (toFocus && toFocus.length > 0) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        toFocus.addClass(FOCUS_STATE);\n                    }\n                } else if (key === kendoKeys.LEFT) {\n                    if (focusedItem.hasClass(\"k-upload-action\")) {\n                        toFocus = focusedItem.prev(\".k-upload-action\");\n\n                        if (!toFocus || toFocus.length === 0) {\n                            toFocus = focusedItem.parent().find(\".k-upload-action:last\");\n                        }\n                    } else if (focusedItem.length > 0) {\n                        toFocus = focusedItem.find(\".k-upload-action:last\");\n                    }\n\n                    if (toFocus && toFocus.length > 0) {\n                        focusedItem.removeClass(FOCUS_STATE);\n                        toFocus.addClass(FOCUS_STATE);\n                    }\n                }\n\n                if ((!toFocus || toFocus.length === 0) && (key === kendoKeys.UP || key === kendoKeys.DOWN)) {\n                    toFocus = that.element;\n                }\n\n                if (toFocus && toFocus.length > 0) {\n                    that._preventFocusRemove = true;\n                    toFocus.trigger(\"focus\");\n                }\n            },\n\n            _asyncCommandKeyNavigation: function(key, focusedItem, eventArgs) {\n                var that = this,\n                    kendoKeys = kendo.keys,\n                    fileEntry = $(focusedItem, that.wrapper);\n\n                that._retryClicked = false;\n\n                if (key === kendoKeys.ESC && focusedItem.find(\".k-i-cancel,.k-svg-i-cancel\").length > 0) {\n                    that.trigger(CANCEL, eventArgs);\n                    that._module.onCancel({ target: fileEntry });\n                    that._checkAllComplete();\n                    that._updateHeaderUploadStatus();\n                    that._preventFocusRemove = true;\n                    that.element.trigger(\"focus\");\n                } else if (key === kendoKeys.SPACEBAR) {\n                    if (focusedItem.find(\".k-i-pause-sm,.k-svg-i-pause-sm\").length > 0) {\n                        that.trigger(PAUSE, eventArgs);\n                        that.pause(focusedItem);\n                        that._updateHeaderUploadStatus();\n                    } else if (focusedItem.find(\".k-i-play-sm,.k-svg-i-play-sm\").length > 0) {\n                        that.trigger(RESUME, eventArgs);\n                        that.resume(focusedItem);\n                    }\n                } else if (key === kendoKeys.ENTER && !focusedItem.is(\".k-file-progress, .k-file-success, .k-file-invalid\")) {\n                    if (that.options.async.chunkSize && !that.options.async.concurrent && $('.k-file-progress', that.wrapper).length > 0) {\n                        return;\n                    }\n\n                    $(WARNINGICON_SELECTOR, focusedItem).remove();\n                    $(PROGRESSBAR_SELECTOR, focusedItem).finish().show();\n\n                    if (!that._module.metaData[fileEntry.data(\"uid\")]) {\n                        that._module.prepareChunk(fileEntry);\n                    }\n\n                    that._module.onRetry({ target: fileEntry });\n                    that._retryClicked = true;\n                }\n            },\n\n            _commandKeyNavigation: function(key, focusedItem) {\n                var that = this,\n                    kendoKeys = kendo.keys,\n                    files = focusedItem.data(\"fileNames\"),\n                    hasValidationErrors = that._filesContainValidationErrors(files),\n                    eventArgs = {\n                        files: files,\n                        headers: {}\n                    };\n\n                if (key === kendoKeys.DELETE) {\n                    if (!that.trigger(REMOVE, eventArgs)) {\n                        that._module.onRemove({ target: $(focusedItem, that.wrapper) }, eventArgs, !hasValidationErrors);\n                        that._preventFocusRemove = true;\n                        that.element.trigger(\"focus\");\n                    }\n                } else if (key === kendoKeys.TAB) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    focusedItem.attr(TABINDEX, -1);\n                } else if (!!that.options.async.saveUrl) {\n                    that._asyncCommandKeyNavigation(key, focusedItem, eventArgs);\n                }\n            },\n\n            _focusout: function() {\n                var focusedItem = this.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE);\n\n                if (!this._preventFocusRemove) {\n                    focusedItem.removeClass(FOCUS_STATE);\n                    focusedItem.attr(TABINDEX, -1);\n                } else {\n                    this._preventFocusRemove = false;\n                }\n            },\n\n            _onKeyDown: function(e) {\n                var that = this,\n                    focusedItem = that.wrapper.find(\".k-upload-files .k-file.\" + FOCUS_STATE + \",\" + \".k-upload-action.\" + FOCUS_STATE),\n                    kendoKeys = kendo.keys,\n                    commandKeys = [kendoKeys.DELETE, kendoKeys.ESC, kendoKeys.ENTER, kendoKeys.SPACEBAR, kendoKeys.TAB],\n                    key = e.keyCode;\n\n                if (key === kendoKeys.DOWN || key === kendoKeys.UP || key === kendoKeys.LEFT || key === kendoKeys.RIGHT) {\n                    that._arrowKeyNavigation(e, key, focusedItem);\n                } else if (focusedItem.length > 0 && focusedItem.hasClass(\"k-file\") && commandKeys.indexOf(key) > -1 && !that.wrapper.hasClass(\"k-disabled\")) {\n                    if (key === kendoKeys.SPACEBAR) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n\n                    that._commandKeyNavigation(key, focusedItem);\n                }\n            },\n\n            _onInputChange: function(e) {\n                var that = this;\n                var input = $(e.target);\n                var files = assignGuidToFiles(that._inputFiles(input), that._isAsyncNonBatch());\n\n                validateFiles(files, that.options.validation);\n\n                var prevented = that.trigger(SELECT, { files: files });\n                if (prevented) {\n                    that._addInput(input);\n                    input.remove();\n                } else {\n                    that._module.onSelect({ target: input }, files);\n                }\n            },\n\n            _readDirectory: function(item) {\n                var deferred = new $.Deferred();\n                var dirReader = item.createReader();\n                var allFolderFiles = [];\n\n                var readEntries = function() {\n                    dirReader.readEntries(function(entries) {\n                        if (!entries.length) {\n                            deferred.resolve(allFolderFiles);\n                        } else {\n                            allFolderFiles = allFolderFiles.concat(entries);\n                            readEntries();\n                        }\n                    }, deferred.reject);\n                };\n\n                readEntries();\n\n                 return deferred.promise();\n            },\n\n            _readFile: function(item) {\n                var that = this;\n                var fullpath = item.fullPath;\n\n                item.file(function(file) {\n                        file.relativePath = fullpath.slice(1);\n                        that.droppedFolderFiles.push(file);\n                        that.droppedFolderCounter --;\n                        if (that.droppedFolderCounter === 0) {\n                            setTimeout(function() {\n                                if (that.droppedFolderCounter === 0) {\n                                    if (that.droppedFolderFiles.length) {\n                                        that._proceedDroppedItems(that.droppedFolderFiles);\n                                        that.droppedFolderFiles = [];\n                                    }\n                                }\n                            },0);\n                        }\n                }, function() {\n                    logToConsole(\"File error.\");\n                });\n            },\n\n            _traverseFileTree: function(item, skipCounter) {\n                var that = this;\n                if (!skipCounter) {\n                    that.droppedFolderCounter--;\n                }\n\n                this._readDirectory(item).then(function(items) {\n                    that.droppedFolderCounter += items.length;\n                    for (var i = 0; i < items.length; i++) {\n                        if (items[i].isFile) {\n                            that._readFile(items[i]);\n                        } else if (items[i].isDirectory) {\n                            that._traverseFileTree(items[i]);\n                        }\n                    }\n                });\n            },\n\n            _onDrop: function(e) {\n                var dt = e.originalEvent.dataTransfer;\n                var that = this;\n                var droppedFiles = dt.files;\n                var length;\n\n                stopEvent(e);\n               if (that.options.directoryDrop && dt.items) {\n                    length = dt.items.length;\n                    that.droppedFolderCounter = 0;\n                    that.droppedFolderFiles = [];\n\n                    for (var i = 0; i < length; i++) {\n                        if (dt.items[i].webkitGetAsEntry) {\n                            var entry = dt.items[i].webkitGetAsEntry();\n\n                            if (entry.isDirectory) {\n                                that._traverseFileTree(entry, true);\n                            } else if (entry.isFile) {\n                                that.droppedFolderFiles.push(dt.files[i]);\n                            }\n                        } else {\n                             that._proceedDroppedItems(droppedFiles);\n                        }\n                    }\n               } else {\n                   that._proceedDroppedItems(droppedFiles);\n               }\n            },\n\n            _proceedDroppedItems: function(droppedFiles) {\n                var that = this;\n                var files = assignGuidToFiles(getAllFileInfo(droppedFiles), that._isAsyncNonBatch());\n\n                  if (droppedFiles.length > 0 && !that.wrapper.hasClass(\"k-disabled\")) {\n                    if (!that.multiple && files.length > 1) {\n                        files.splice(1, files.length - 1);\n                    }\n\n                    validateFiles(files, that.options.validation);\n\n                    var prevented = that.trigger(SELECT, { files: files });\n                    if (!prevented) {\n                        that._module.onSelect({ target: $(\".k-dropzone\", that.wrapper) }, files);\n                    }\n                }\n            },\n\n            _filesContainValidationErrors: function(files) {\n                var hasErrors = false;\n\n                $(files).each(function(index, file) {\n                    if (file[VALIDATIONERRORS] && file[VALIDATIONERRORS].length > 0) {\n                        hasErrors = true;\n                        return false;\n                    }\n                });\n\n                return hasErrors;\n            },\n\n            _isAsyncNonBatch: function() {\n                return (this._async && !this.options.async.batch) || false;\n            },\n\n            _renderInitialFiles: function(files) {\n                var that = this;\n                var idx = 0;\n                files = assignGuidToFiles(files, true);\n\n                for (idx = 0; idx < files.length; idx++) {\n                    var currentFile = files[idx];\n\n                    var fileEntry = that._enqueueFile(currentFile.name, { fileNames: [currentFile] });\n                    fileEntry.addClass(\"k-file-success\").data(\"files\", [files[idx]]);\n\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    }\n                }\n            },\n\n            _prepareTemplateData: function(name, data) {\n                var filesData = data.fileNames,\n                    templateData = {},\n                    totalSize = 0,\n                    idx = 0;\n\n                for (idx = 0; idx < filesData.length; idx++) {\n                    totalSize += filesData[idx].size;\n                }\n\n                templateData.name = name;\n                templateData.size = totalSize;\n                templateData.files = data.fileNames;\n\n                return templateData;\n            },\n\n            _createProgressbarWapper: function() {\n                return \"<div class='\" + PROGRESSBAR_CLASS + \" k-hidden'></div>\";\n            },\n\n            _createFileIconWrapper: function(fileTypeIcon) {\n                return \"<span class='k-file-icon-wrapper'>\" +\n                    kendo.ui.icon({ icon: fileTypeIcon, iconClass: \"k-file-icon\" }) +\n                    \"<span class='k-file-state'></span>\" +\n                    \"</span>\";\n            },\n\n            _progressbarInit: function(wrapper) {\n                var progressbar = wrapper.kendoProgressBar({\n                    animation: false,\n                    showStatus: false\n                }).data(\"kendoProgressBar\");\n                this.progressbars.push(progressbar);\n            },\n\n            _prepareDefaultSingleFileEntryTemplate: function(data) {\n                var that = this;\n                var file = data.fileNames[0];\n                var fileSize = getTotalFilesSizeMessage(data.fileNames);\n                var fileGroup = kendo.getFileGroup(file.extension, true);\n                var errors = file[VALIDATIONERRORS];\n                var isError = errors && errors.length > 0;\n                var invalidClass = isError ? \" k-file-invalid k-file-error\" : \"\";\n                var fileDetails = isError ?\n                        \"<span class='k-file-validation-message'>\" + that.localization[errors[0]] + \"</span>\" :\n                        \"<span class='k-file-size'>\" + fileSize + \"</span>\";\n                var template = \"\";\n\n                template += \"<li class='k-file\" + invalidClass + \"'>\" +\n                    this._createProgressbarWapper() +\n                    this._createFileIconWrapper(fileGroup) +\n                    \"<span class='k-file-info'>\" +\n                        \"<span class='k-file-name' title='\" + file.name + \"'>\" + file.name + \"</span>\" +\n                        fileDetails +\n                    \"</span>\";\n\n                template += \"<span class='k-upload-actions'></span>\";\n\n                return $(template);\n            },\n\n            _prepareDefaultMultipleFileEntriesTemplate: function(data) {\n                var that = this;\n                var files = data.fileNames;\n                var filesHaveValidationErrors = that._filesContainValidationErrors(files);\n                var totalFileSize = getTotalFilesSizeMessage(files);\n                var template = \"\";\n                var i, currentFile;\n                var invalidClass = filesHaveValidationErrors ? \" k-file-invalid k-file-error\" : \"\";\n\n                template += \"<li class='k-file\" + invalidClass + \"'>\" +\n                    this._createProgressbarWapper() +\n                    this._createFileIconWrapper(\"files\");\n\n                files.sort(function(a, b) {\n                    if (a[VALIDATIONERRORS]) { return -1; }\n\n                    if (b[VALIDATIONERRORS]) { return 1; }\n\n                    return 0;\n                });\n\n                template += \"<span class='k-multiple-files-wrapper'>\";\n                for (i = 0; i < files.length; i++) {\n                    currentFile = files[i];\n                    var fileSize = getTotalFilesSizeMessage([currentFile]);\n\n                    template += \"<span class='k-file-name-size-wrapper'>\";\n                    if (currentFile[VALIDATIONERRORS] && currentFile[VALIDATIONERRORS].length > 0) {\n                        template += \"<span class='k-file-name k-file-name-invalid' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                    } else {\n                        template += \"<span class='k-file-name' title='\" + currentFile.name + \"'>\" + currentFile.name + \"</span>\";\n                    }\n                    template += \"<span class='k-file-size'>\" + fileSize + \"</span></span>\";\n                }\n\n                if (filesHaveValidationErrors) {\n                    template += \"<span class='k-file-validation-message'>\" + that.localization.invalidFiles + \"</span>\";\n                } else {\n                    template += \"<span class='k-file-summary'>Total: \" + files.length + \" files, \" + totalFileSize + \"</span>\";\n                }\n\n                template += \"</span><span class='k-upload-actions'></span>\";\n\n                return $(template);\n            },\n\n            _enqueueFile: function(name, data) {\n                var that = this;\n                var existingFileEntries;\n                var fileEntry;\n                var fileUid = data.fileNames[0].uid;\n                var fileList = $(\".k-upload-files\", that.wrapper);\n                var options = that.options;\n                var template = options.template;\n                var templateData;\n                var removeEventArgs;\n                var progressbarSelector = template ? PROGRESSBAR_TEMPLATE_SELECTOR : PROGRESSBAR_SELECTOR;\n                var progressbar;\n                var isProgressbar;\n\n                if (fileList.length === 0) {\n                    fileList = $(\"<ul class='k-upload-files k-reset'></ul>\").appendTo(that.wrapper);\n                    if (!that.options.showFileList) {\n                        fileList.hide();\n                    }\n\n                    that.wrapper.removeClass(\"k-upload-empty\");\n                }\n\n                existingFileEntries = $(\".k-file\", fileList);\n\n                if (!template) {\n                    if (data.fileNames.length === 1) {\n                        fileEntry = that._prepareDefaultSingleFileEntryTemplate(data);\n                    } else {\n                        fileEntry = that._prepareDefaultMultipleFileEntriesTemplate(data);\n                    }\n                } else {\n                    templateData = that._prepareTemplateData(name, data);\n                    template = kendo.template(template);\n\n                    fileEntry = $(\"<li class='k-file'>\" + template(templateData) + \"</li>\");\n                    fileEntry.find(\".k-upload-action\").addClass(\"k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base\");\n\n                    that.angular(\"compile\", function() {\n                        return {\n                            elements: fileEntry,\n                            data: [ templateData ]\n                        };\n                    });\n                }\n\n                progressbar = $(progressbarSelector, fileEntry[0]);\n                isProgressbar = progressbar.length > 0;\n\n                if (isProgressbar) {\n                    that._progressbarInit(progressbar);\n                }\n\n                fileEntry\n                    .attr(kendo.attr(\"uid\"), fileUid)\n                    .appendTo(fileList)\n                    .data(data);\n\n                if (!that._async && isProgressbar) {\n                    progressbar.data(\"kendoProgressBar\").value(100);\n                }\n\n                if (!that.multiple && existingFileEntries.length > 0) {\n                    removeEventArgs = {\n                        files: existingFileEntries.data(\"fileNames\"),\n                        headers: {}\n                    };\n                    if (!that.trigger(REMOVE, removeEventArgs)) {\n                        that._module.onRemove({ target: $(existingFileEntries, that.wrapper) }, removeEventArgs);\n                    }\n                }\n\n                return fileEntry;\n            },\n\n            _removeFileEntry: function(fileEntry) {\n                var that = this;\n                var fileList = fileEntry.closest(\".k-upload-files\");\n                var allFiles, allCompletedFiles, allInvalidFiles;\n\n                fileEntry.remove();\n                allFiles = $(\".k-file\", fileList);\n                allCompletedFiles = $(\".k-file-success, .k-file-error\", fileList);\n\n                if (allCompletedFiles.length === allFiles.length) {\n                    this._hideActionButtons();\n                }\n\n                if (allFiles.length === 0) {\n                    fileList.remove();\n                    that.wrapper.addClass(\"k-upload-empty\");\n                    that._hideHeaderUploadstatus();\n                } else {\n                    that._updateHeaderUploadStatus();\n                }\n            },\n\n            _fileAction: function(fileElement, actionKey, skipClear) {\n                var iconsNameDictionary = { remove: \"x\", cancel: \"cancel\", retry: \"arrow-rotate-cw-small\", pause: \"pause-sm\" };\n                var firstActionButton;\n\n                if (!iconsNameDictionary.hasOwnProperty(actionKey)) {\n                    return;\n                }\n                if (!skipClear) {\n                    this._clearFileAction(fileElement);\n                }\n                if (!this.options.template) {\n                    if (!skipClear) {\n                        fileElement.find(\".k-upload-action\").remove();\n                    }\n                    fileElement.find(\".k-upload-actions\").append(\n                        this._renderAction(iconsNameDictionary[actionKey], this.localization[actionKey], actionKey == \"retry\" ? \"k-i-retry\" : \"\")\n                    );\n                } else {\n                    firstActionButton = fileElement.find(\".k-upload-action\").first();\n                    if (!firstActionButton.find(\".k-icon,.k-svg-icon\").length) {\n                        var firstActionIcon = kendo.ui.icon($((\"<span title=\\\"\" + (this.localization[actionKey]) + \"\\\" aria-label=\\\"\" + (this.localization[actionKey]) + \"\\\"></span>\")), {\n                            icon: iconsNameDictionary[actionKey],\n                            iconClass: \"k-button-icon\" + (actionKey == \"retry\" ? \" k-i-retry\" : \"\")\n                        });\n                        firstActionButton\n                            .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                            .append(firstActionIcon)\n                            .show();\n                    } else if (firstActionButton.next(\".k-upload-action\").length) {\n                        var firstActionIcon$1 = kendo.ui.icon($((\"<span title=\\\"\" + (this.localization[actionKey]) + \"\\\" aria-label=\\\"\" + (this.localization[actionKey]) + \"\\\"></span>\")), {\n                            icon: iconsNameDictionary[actionKey],\n                            iconClass: \"k-button-icon\" + (actionKey == \"retry\" ? \" k-i-retry\" : \"\")\n                        });\n                        firstActionButton.next(\".k-upload-action\")\n                            .addClass(\"k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-icon-button\")\n                            .append(firstActionIcon$1)\n                            .show();\n                    }\n                }\n            },\n\n            _fileState: function(fileEntry, stateKey) {\n                var localization = this.localization,\n                    states = {\n                        uploading: {\n                            text: localization.statusUploading\n                        },\n                        uploaded: {\n                            text: localization.statusUploaded\n                        },\n                        failed: {\n                            text: localization.statusFailed\n                        }\n                    },\n                    currentState = states[stateKey];\n\n                if (currentState) {\n                    $(\"span.k-file-state\", fileEntry).text(currentState.text);\n                }\n            },\n\n            _renderAction: function(iconName, actionText, iconClass) {\n                if (iconName !== \"\") {\n                    return $(\n                    \"<button type='button' class='k-button k-icon-button k-button-md k-rounded-md k-button-flat k-button-flat-base k-upload-action' aria-label='\" + actionText + \"' tabindex='-1'>\" +\n                        kendo.ui.icon($((\"<span title=\\\"\" + actionText + \"\\\"></span>\")), { icon: iconName, iconClass: \"k-button-icon\" + (iconClass ? (\" \" + iconClass) : \"\") }) +\n                    \"</button>\"\n                    ).on(\"focus\", function() { $(this).addClass(FOCUS_STATE); })\n                     .on(\"blur\", function() { $(this).removeClass(FOCUS_STATE); });\n                }\n                else {\n                    return $(\n                    \"<button type='button' class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base'>\" +\n                        '<span class=\"k-button-text\">' +\n                            actionText +\n                        '</span>' +\n                    \"</button>\"\n                    );\n                }\n            },\n\n            _clearFileAction: function(fileElement) {\n                $(\".k-upload-action\", fileElement).empty().hide();\n            },\n\n            _onFileAction: function(e) {\n                var that = this;\n                if (!that.wrapper.hasClass(\"k-disabled\")) {\n                    var button = $(e.target).closest(\".k-upload-action\");\n                    var icon = button.find(\".k-icon,.k-svg-icon\");\n                    var fileEntry = button.closest(\".k-file\");\n                    var files = fileEntry.data(\"fileNames\");\n                    var hasValidationErrors = that._filesContainValidationErrors(files);\n                    var eventArgs = {\n                        files: files,\n                        headers: {}\n                    };\n\n                    that._retryClicked = false;\n\n                    if (icon.is(\".k-i-x,.k-svg-i-x\")) {\n                        if (!that.trigger(REMOVE, eventArgs)) {\n                            that._module.onRemove({ target: $(fileEntry, that.wrapper) }, eventArgs, !hasValidationErrors);\n                            that.element.trigger(\"focus\");\n                        }\n                    } else if (icon.is(\".k-i-cancel,.k-svg-i-cancel\")) {\n                        that.trigger(CANCEL, eventArgs);\n                        that._module.onCancel({ target: $(fileEntry, that.wrapper) });\n                        that._checkAllComplete();\n                        that._updateHeaderUploadStatus();\n                        that.element.trigger(\"focus\");\n                    } else if (icon.is(\".k-i-pause-sm,.k-svg-i-pause-sm\")) {\n                        that.trigger(PAUSE, eventArgs);\n                        that.pause(fileEntry);\n                        that._updateHeaderUploadStatus();\n                    } else if (icon.is(\".k-i-play-sm,.k-svg-i-play-sm\")) {\n                        that.trigger(RESUME, eventArgs);\n                        that.resume(fileEntry);\n                    } else if (icon.hasClass(\"k-i-retry\")) {\n                        $(\".k-i-exclamation-circle\", fileEntry).remove();\n                        $(PROGRESSBAR_SELECTOR, fileEntry).finish().show();\n                        that._module.onRetry({ target: $(fileEntry, that.wrapper) });\n                        that._retryClicked = true;\n                    }\n\n                    fileEntry.addClass(FOCUS_STATE);\n                }\n\n                return false;\n            },\n\n            _onUploadSelected: function() {\n                var that = this;\n                var wrapper = that.wrapper;\n\n                if (!wrapper.hasClass(\"k-disabled\")) {\n                    this._module.onSaveSelected();\n                }\n\n                return false;\n            },\n\n            _onClearSelected: function() {\n                var that = this;\n                var wrapper = that.wrapper;\n\n                var clearEventArgs = { };\n                if (!wrapper.hasClass(\"k-disabled\") && !that.trigger(CLEAR, clearEventArgs)) {\n                    that.clearAllFiles();\n                }\n\n                return false;\n            },\n\n            _onFileProgress: function(e, percentComplete) {\n                var progressPct;\n                var progressBar = $(PROGRESSBAR_SELECTOR, e.target).data(\"kendoProgressBar\");\n\n                if (percentComplete > 100) {\n                    percentComplete = 100;\n                }\n\n                $(PROGRESSBAR_SELECTOR, e.target).removeClass('k-hidden');\n\n                if (!this.options.template) {\n                    progressPct = $(\".k-upload-pct\", e.target);\n\n                    if (progressPct.length === 0) {\n                        $(\".k-upload-actions\", e.target).prepend(\"<span class='k-upload-pct'></span>\");\n                    }\n\n                    if (percentComplete !== 100) {\n                        $(\".k-upload-pct\", e.target).text(percentComplete + \"%\");\n                    } else {\n                        $(\".k-upload-pct\", e.target).remove();\n                    }\n                }\n\n                if (progressBar) {\n                    progressBar.value(percentComplete);\n                }\n\n                this.trigger(PROGRESS, {\n                    files: getFileEntry(e).data(\"fileNames\"),\n                    percentComplete: percentComplete\n                });\n            },\n\n            _onUploadSuccess: function(e, response, xhr) {\n                var that = this;\n                var fileEntry = getFileEntry(e);\n                var files = fileEntry.data(\"fileNames\");\n                var fileInfo = fileEntry.find('.k-file-summary');\n                var fileSize = fileEntry.find('.k-file-size');\n\n                var prevented = that.trigger(SUCCESS, {\n                    files: fileEntry.data(\"fileNames\"),\n                    response: response,\n                    operation: \"upload\",\n                    XMLHttpRequest: xhr\n                });\n\n                if (prevented) {\n                    that._setUploadErrorState(fileEntry);\n                } else {\n                    that._fileState(fileEntry, \"uploaded\");\n                    fileEntry.removeClass('k-file-progress').addClass('k-file-success');\n\n                    if (fileInfo.length > 0) {\n                        fileInfo.addClass('k-hidden')\n                            .after('<span class=\"k-file-validation-message\">' + files.length + ' ' + that.localization.uploadSuccess + '</span>');\n                    } else if (fileSize.length > 0) {\n                        fileSize.addClass('k-hidden')\n                            .after('<span class=\"k-file-validation-message\">' + that.localization.uploadSuccess + '</span>');\n                    }\n\n                    that._updateHeaderUploadStatus();\n\n                    if (that._supportsRemove()) {\n                        that._fileAction(fileEntry, REMOVE);\n                    } else {\n                        that._clearFileAction(fileEntry);\n                    }\n                }\n\n                that._hideUploadProgress(fileEntry);\n\n                that._checkAllComplete();\n            },\n\n            _onUploadError: function(e, xhr) {\n                var that = this;\n                var module = that._module;\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data(\"uid\");\n\n                that._setUploadErrorState(fileEntry);\n\n                that.trigger(ERROR, {\n                    operation: \"upload\",\n                    files: fileEntry.data(\"fileNames\"),\n                    XMLHttpRequest: xhr\n                });\n\n                logToConsole(\"Server response: \" + xhr.responseText);\n\n                if (!that.options.async.chunkSize) {\n                    that._hideUploadProgress(fileEntry);\n                } else {\n                    if (module._decreasePosition) {\n                        module._decreasePosition(fileUid);\n                    }\n                }\n\n               that._checkAllComplete();\n\n                if (this.options.async.autoRetryAfter) {\n                   this._autoRetryAfter(fileEntry);\n                }\n            },\n            _autoRetryAfter: function(fileEntry) {\n                var that = this;\n                var retries = this._module.retries;\n\n                if (!retries) {\n                    return;\n                }\n\n                if (!retries[fileEntry.data(\"uid\")]) {\n                    retries[fileEntry.data(\"uid\")] = 1;\n                }\n\n                if (retries[fileEntry.data(\"uid\")] <= this.options.async.maxAutoRetries) {\n                    retries[fileEntry.data(\"uid\")]++;\n                    setTimeout(function() {\n                        that._module.performUpload(fileEntry);\n                    },this.options.async.autoRetryAfter);\n                }\n            },\n            _setUploadErrorState: function(fileEntry) {\n                var that = this,\n                    uploadPercentage,\n                    files = fileEntry.data(\"fileNames\"),\n                    fileInfo = fileEntry.find('.k-file-summary'),\n                    fileSize = fileEntry.find('.k-file-size');\n\n                that._fileState(fileEntry, \"failed\");\n                fileEntry.removeClass('k-file-progress').addClass('k-file-error');\n\n                if (fileInfo.length > 0) {\n                    fileInfo.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message\">' + files.length + ' ' + that.localization.uploadFail + '</span>');\n                } else if (fileSize.length > 0) {\n                    fileSize.addClass('k-hidden')\n                        .after('<span class=\"k-file-validation-message\">' + that.localization.uploadFail + '</span>');\n                }\n\n                that._updateUploadProgress(fileEntry);\n\n                uploadPercentage = $('.k-upload-pct', fileEntry);\n\n                if (uploadPercentage.length > 0) {\n                    uploadPercentage.remove();\n                }\n\n                this._updateHeaderUploadStatus();\n                this._fileAction(fileEntry, \"retry\");\n                this._fileAction(fileEntry, REMOVE, true);\n\n                if (that._retryClicked) {\n                    fileEntry.trigger(\"focus\");\n                }\n            },\n\n           _updateUploadProgress: function(fileEntry) {\n                var that = this;\n                var progressbar = $( PROGRESSBAR_SELECTOR, fileEntry);\n                var isProgressbar = progressbar.length > 0;\n\n                if (!that.options.async.chunkSize && isProgressbar) {\n                    progressbar.data(\"kendoProgressBar\").value(100);\n                } else {\n                    var fileUid = fileEntry.data(\"uid\");\n                    if (that._module.metaData) {\n                        var fileMetaData = that._module.metaData[fileUid];\n\n                        if (fileMetaData) {\n                            var percentComplete = fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n\n                            that._onFileProgress({ target: $(fileEntry, that.wrapper) }, percentComplete);\n                        }\n                    }\n                }\n            },\n\n            _hideUploadProgress: function(fileEntry) {\n                var that = this;\n\n                $(PROGRESSBAR_SELECTOR, fileEntry)\n                    .delay(PROGRESSHIDEDELAY)\n                    .fadeOut(PROGRESSHIDEDURATION, function() {\n                        $(this).data(\"kendoProgressBar\").value(0);\n                    });\n            },\n\n            _showActionButtons: function() {\n                var that = this;\n                var actionsWrapper = $(\".k-actions\", that.wrapper);\n                var uploadButton = $(\".k-upload-selected\", that.wrapper);\n                var clearButton = $(\".k-clear-selected\", that.wrapper);\n\n                if (uploadButton.length === 0) {\n                    uploadButton = $(kendo.html.renderButton((\"<button class='k-upload-selected'>\" + (this.localization.uploadSelectedFiles) + \"</button>\"), {\n                            icon: 'upload',\n                            themeColor: 'primary'\n                        }));\n\n                    clearButton = $(kendo.html.renderButton((\"<button class='k-clear-selected'>\" + (this.localization.clearSelectedFiles) + \"</button>\"), {\n                        icon: 'clear'\n                    }));\n\n                }\n\n                if (!actionsWrapper.length) {\n                    actionsWrapper = $(\"<div />\")\n                        .addClass(\"k-actions\")\n                        .append(uploadButton, clearButton);\n                }\n\n\n                this.wrapper.append(actionsWrapper);\n            },\n\n            _hideActionButtons: function() {\n                $(\".k-actions\", this.wrapper).remove();\n            },\n\n            _showHeaderUploadStatus: function(isUploading) {\n                var that = this;\n                var localization = that.localization;\n                var dropZone = $(\".k-dropzone\", that.wrapper);\n                var headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n\n                if (headerUploadStatus.length !== 0) {\n                    headerUploadStatus.remove();\n                }\n\n                $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n\n                headerUploadStatus = '<span class=\"k-upload-status k-upload-status-total\"><span class=\"k-icon\"></span></span>';\n\n                if (isUploading) {\n                    headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploading);\n                    kendo.ui.icon(headerUploadStatus.find(\".k-icon,.k-svg-icon\"), { icon: headerStatusIconName.loading });\n                } else {\n                    headerUploadStatus = $(headerUploadStatus).append(localization.headerStatusUploaded);\n                    kendo.ui.icon(headerUploadStatus.find(\".k-icon,.k-svg-icon\"), { icon: headerStatusIconName.warning });\n                }\n\n                if (dropZone.length > 0) {\n                    dropZone.append(headerUploadStatus);\n                } else {\n                    $('.k-upload-button', that.wrapper).after(headerUploadStatus);\n                }\n            },\n\n            _updateHeaderUploadStatus: function() {\n                var that = this;\n                var headerUploadStatus = $('.k-upload-status-total', this.wrapper);\n                var currentlyUploading = $('.k-file', that.wrapper).not('.k-file-success, .k-file-error');\n                var currentlyFailed = $('.k-file-error', that.wrapper);\n                var currentlyPaused = $('.k-file', that.wrapper).find(\".k-i-play-sm,.k-svg-i-play-sm\");\n                var headerUploadStatusIcon;\n\n                if (currentlyPaused.length &&\n                (currentlyPaused.length === currentlyUploading.length || !that.options.async.concurrent)) {\n                    headerUploadStatusIcon = $('.k-icon,.k-svg-icon', headerUploadStatus).removeClass();\n\n                    if (headerUploadStatusIcon.length) {\n                        kendo.ui.icon(headerUploadStatusIcon, { icon: \"pause-sm\" });\n\n                        headerUploadStatus.html(headerUploadStatusIcon)\n                            .append(that.localization.headerStatusPaused);\n                    }\n                } else if (currentlyUploading.length === 0 || currentlyFailed.length > 0) {\n                    headerUploadStatus = $('.k-upload-status-total', that.wrapper);\n                    headerUploadStatusIcon = $('.k-icon,.k-svg-icon', headerUploadStatus).removeClass();\n\n                    if (headerUploadStatusIcon.length) {\n\n                        kendo.ui.icon(headerUploadStatusIcon, { icon: currentlyFailed.length !== 0 ? headerStatusIconName.warning : headerStatusIconName.success });\n\n                        headerUploadStatus.html(headerUploadStatusIcon)\n                            .append(that.localization.headerStatusUploaded);\n                    }\n                }\n            },\n\n            _hideHeaderUploadstatus: function() {\n                var that = this,\n                    dropZone = that.options.dropZone;\n\n                $('.k-upload-status-total', this.wrapper).remove();\n\n                if (dropZone === \"\") {\n                    $('.k-dropzone-hint', that.wrapper).removeClass('k-hidden');\n                }\n            },\n\n            _onParentFormSubmit: function() {\n                var upload = this,\n                    element = upload.element;\n\n                if (typeof this._module.onAbort !== 'undefined') {\n                    this._module.onAbort();\n                }\n\n                if (!element.value) {\n                    var input = $(element);\n\n                    // Prevent submitting an empty input\n                    input.attr(\"disabled\", \"disabled\");\n\n                    window.setTimeout(function() {\n                        // Restore the input so the Upload remains functional\n                        // in case the user cancels the form submit\n                        input.prop(\"disabled\", false);\n                    }, 0);\n                }\n            },\n\n            _onParentFormReset: function() {\n                $(\".k-upload-files\", this.wrapper).remove();\n            },\n\n            _supportsFormData: function() {\n                return typeof(FormData) != \"undefined\";\n            },\n\n            _supportsMultiple: function() {\n                var windows = this._userAgent().indexOf(\"Windows\") > -1;\n\n                return !kendo.support.browser.opera &&\n                       !(kendo.support.browser.safari && windows);\n            },\n\n            _supportsDrop: function() {\n                var userAgent = this._userAgent().toLowerCase();\n                var isChrome = /chrome/.test(userAgent);\n                var isSafari = !isChrome && /safari/.test(userAgent);\n                var isWindowsSafari = isSafari && /windows/.test(userAgent);\n\n                return !isWindowsSafari && this._supportsFormData() && (this.options.async.saveUrl);\n            },\n\n            _userAgent: function() {\n                return navigator.userAgent;\n            },\n\n            _setupDropZone: function() {\n                var that = this;\n\n                var ns = that._ns;\n                var dropZone = $(\".k-dropzone\", that.wrapper)\n\n                    .on(\"dragenter\" + ns, stopEvent)\n                    .on(\"dragover\" + ns, function(e) {\n                        if (e.originalEvent) {\n                            e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                        }\n                        e.preventDefault();\n                     })\n                    .on(\"drop\" + ns, that._onDrop.bind(that));\n\n                if (!dropZone.find(\".k-dropzone-hint\").length) {\n                    dropZone.append($(\"<span class='k-dropzone-hint'>\" + that.localization.dropFilesHere + \"</span>\"));\n                }\n\n                bindDragEventWrappers(dropZone, ns,\n                    function() {\n                        if (!dropZone.closest('.k-upload').hasClass(\"k-disabled\")) {\n                            dropZone.addClass(HOVER_STATE);\n                        }\n                    },\n                    function() { dropZone.removeClass(HOVER_STATE); });\n\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n\n            _setupCustomDropZone: function() {\n                var that = this;\n                var dropZone = $(that.options.dropZone);\n\n                if (!that.wrapper.find(\".k-dropzone-hint\").length) {\n                    $(\".k-dropzone\", that.wrapper)\n                        .append($(\"<span class='k-dropzone-hint k-hidden'>\" + that.localization.dropFilesHere + \"</span>\"));\n                } else {\n                    // Dropzone hint in upload should be hidden if customDropZone is used\n                    $('.k-dropzone-hint', that.wrapper).addClass('k-hidden');\n                }\n\n                var ns = that._ns;\n                dropZone.on(\"dragenter\" + ns, stopEvent)\n                        .on(\"dragover\" + ns, function(e) {\n                            if (e.originalEvent) {\n                                e.originalEvent.dataTransfer.dropEffect = \"copy\";\n                            }\n                            e.preventDefault();\n                        })\n                        .on(\"drop\" + ns, that._onDrop.bind(that));\n\n                bindDragEventWrappers(dropZone, ns,\n                    function(e) {\n                        if (!that.wrapper.hasClass(\"k-disabled\")) {\n                            dropZone.removeClass(HOVER_STATE);\n                            dropZone.addClass(HOVER_STATE);\n                            $(e.target).addClass(HOVER_STATE);\n                        }\n                    },\n                    function() {\n                        dropZone.removeClass(HOVER_STATE);\n                    }\n                );\n\n                that._bindDocumentDragEventWrappers(dropZone);\n            },\n\n            _bindDocumentDragEventWrappers: function(dropZone) {\n                var that = this;\n                var ns = that._ns;\n\n                bindDragEventWrappers($(document), ns,\n                    function() {\n                        if (!that.wrapper.hasClass(\"k-disabled\")) {\n                            dropZone.addClass(\"k-dropzone-active\");\n                            dropZone.closest('.k-upload').removeClass('k-upload-empty');\n                            dropZone.find('.k-dropzone-hint').removeClass('k-hidden');\n                        }\n                    },\n                    function() {\n                        dropZone.removeClass(\"k-dropzone-active\");\n                        dropZone.find('.k-dropzone-hint').addClass('k-hidden');\n                        if ($('li.k-file', dropZone.closest('.k-upload')).length === 0) {\n                            dropZone.closest('.k-upload').addClass('k-upload-empty');\n                        }\n                    }\n                );\n            },\n\n            _toggleDropZone: function() {\n                var that = this,\n                    dropZone = that.options.dropZone;\n\n                if (!that._supportsDrop()) {\n                    return;\n                }\n\n                $(dropZone).off(that._ns);\n                $(\".k-dropzone\", that.wrapper).off(that._ns);\n\n                if (dropZone !== \"\") {\n                    that._setupCustomDropZone();\n                } else {\n                    that._setupDropZone();\n                }\n            },\n\n            _supportsRemove: function() {\n                return !!this.options.async.removeUrl;\n            },\n\n            _submitRemove: function(fileNames, eventArgs, onSuccess, onError) {\n                var upload = this,\n                    removeField = upload.options.async.removeField || \"fileNames\",\n                    params = $.extend(eventArgs.data, antiForgeryTokens());\n\n                params[removeField] = fileNames;\n\n                jQuery.ajax({\n                      type: this.options.async.removeVerb,\n                      dataType: \"json\",\n                      dataFilter: normalizeJSON,\n                      url: this.options.async.removeUrl,\n                      traditional: true,\n                      data: params,\n                      headers: eventArgs.headers,\n                      success: onSuccess,\n                      error: onError,\n                      xhrFields: {\n                        withCredentials: this.options.async.withCredentials\n                      }\n                });\n            },\n\n            _wrapInput: function(input) {\n                var that = this;\n                var options = that.options;\n                var hasLabel = !!input.attr(\"id\") && $(\"[for='\" + input.attr(\"id\") + \"']\").length > 0;\n                var uploadButton = $(\"<div class='k-button k-button-md k-rounded-md k-button-solid k-button-solid-base k-upload-button'><span class='k-button-text'>Select files...</span></div>\");\n\n                input.wrap(\"<div class='k-upload'><div class='k-dropzone k-upload-dropzone'><div class='k-upload-button-wrap'></div></div></div>\");\n                uploadButton.prependTo(input.parent());\n\n                if (!options.async.saveUrl) {\n                    input.closest(\".k-upload\").addClass(\"k-upload-sync\");\n                } else {\n                    input.closest(\".k-upload\").addClass(\"k-upload-async\");\n                }\n\n                input.closest(\".k-upload\").addClass(\"k-upload-empty\");\n\n                input.closest(\".k-button\")\n                    .append(\"<span>\" + that.localization.select + \"</span>\");\n\n                if (!hasLabel && !input.attr(\"aria-label\")) {\n                    input.attr(\"aria-label\", that.localization.select);\n                }\n\n                return input.closest(\".k-upload\");\n            },\n\n            _checkAllComplete: function() {\n                if ($(\".k-file.k-file-progress\", this.wrapper).length === 0) {\n                    this.trigger(COMPLETE);\n                }\n            },\n\n            _inputFiles: function(sourceInput) {\n                return inputFiles(sourceInput);\n            }\n        });\n\n        // Synchronous upload module\n        var syncUploadModule = function(upload) {\n            this.name = \"syncUploadModule\";\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.element\n                .closest(\"form\")\n                    .attr(\"enctype\", \"multipart/form-data\")\n                    .attr(\"encoding\", \"multipart/form-data\");\n        };\n\n        syncUploadModule.prototype = {\n            onSelect: function(e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var filesContainErrors = upload._filesContainValidationErrors(files);\n\n                upload._addInput(sourceInput);\n\n                var fileData = { \"fileNames\": files };\n\n                if (filesContainErrors) {\n                    sourceInput.remove();\n                } else {\n                    fileData.relatedInput = sourceInput;\n                }\n\n                var file = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n                if (filesContainErrors) {\n                    upload._hideUploadProgress(file);\n                }\n\n                upload._fileAction(file, REMOVE);\n            },\n\n            onRemove: function(e) {\n                var fileEntry = getFileEntry(e);\n                var relatedInput = fileEntry.data(\"relatedInput\");\n\n                if (relatedInput) {\n                    relatedInput.remove();\n                }\n\n                this.upload._removeFileEntry(fileEntry);\n            }\n        };\n\n        var iframeUploadModule = function(upload) {\n            this.name = \"iframeUploadModule\";\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.iframes = [];\n        };\n\n        Upload._frameId = 0;\n\n        iframeUploadModule.prototype = {\n            onSelect: function(e, files) {\n                var upload = this.upload;\n                var sourceInput = $(e.target);\n                var hasValidationErrors = upload._filesContainValidationErrors(files);\n\n                var fileEntry = this.prepareUpload(sourceInput, files, hasValidationErrors);\n\n                if (upload.options.async.autoUpload) {\n                    if (!hasValidationErrors) {\n                        this.performUpload(fileEntry);\n                    } else {\n                        upload._fileAction(fileEntry, REMOVE);\n                        upload._showHeaderUploadStatus(false);\n                    }\n                } else {\n                    upload._fileAction(fileEntry, REMOVE);\n\n                    if (!hasValidationErrors) {\n                        upload._showActionButtons();\n                    } else {\n                        upload._updateHeaderUploadStatus();\n                    }\n                }\n\n                if (hasValidationErrors) {\n                    upload._hideUploadProgress(fileEntry);\n                }\n            },\n\n            prepareUpload: function(sourceInput, files, hasValidationErrors) {\n                var upload = this.upload;\n                var activeInput = $(upload.element);\n                var name = upload.options.async.saveField || sourceInput.attr(\"name\");\n                var fileEntry, fileData, iframe, form;\n\n                upload._addInput(sourceInput);\n                sourceInput.attr(\"name\", name);\n\n                if (!hasValidationErrors) {\n                    iframe = this.createFrame(upload.name + \"_\" + Upload._frameId++);\n                    this.registerFrame(iframe);\n\n                    form = this.createForm(upload.options.async.saveUrl, iframe.attr(\"name\"))\n                        .append(activeInput);\n\n                    fileData = { \"frame\": iframe, \"relatedInput\": activeInput, \"fileNames\": files };\n                } else {\n                    sourceInput.remove();\n\n                    fileData = { \"fileNames\": files };\n                }\n\n                fileEntry = upload._enqueueFile(getFileName(sourceInput), fileData);\n\n                if (iframe) {\n                    iframe.data({ \"form\": form, \"file\": fileEntry });\n                }\n\n                return fileEntry;\n            },\n\n            performUpload: function(fileEntry) {\n                var e = { files: fileEntry.data(\"fileNames\") };\n                var iframe = fileEntry.data(\"frame\");\n                var upload = this.upload;\n                var fileValidation = fileEntry.find('.k-file-validation-message');\n                var fileInfo = fileEntry.find('.k-file-summary');\n                var fileSize = fileEntry.find('.k-file-size');\n\n                if (!upload.trigger(UPLOAD, e)) {\n                    upload._hideActionButtons();\n                    upload._showHeaderUploadStatus(true);\n\n                    iframe.appendTo(document.body);\n\n                    var form = iframe.data(\"form\")\n                        .attr(\"action\", upload.options.async.saveUrl)\n                        .appendTo(document.body);\n\n                    e.data = $.extend({ }, e.data, antiForgeryTokens());\n                    for (var key in e.data) {\n                        var dataInput = form.find(\"input[name='\" + key + \"']\");\n                        if (dataInput.length === 0) {\n                            dataInput = $(\"<input>\", { type: \"hidden\", name: key })\n                                .prependTo(form);\n                        }\n                        dataInput.val(e.data[key]);\n                    }\n\n                    upload._fileAction(fileEntry, CANCEL);\n                    upload._fileState(fileEntry, \"uploading\");\n                    $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                    if (fileValidation.length > 0) {\n                        fileValidation.remove();\n                    }\n\n                    if (fileInfo.length > 0) {\n                        fileInfo.removeClass('k-hidden');\n                    } else if (fileSize.length > 0) {\n                        fileSize.removeClass('k-hidden');\n                    }\n\n                    iframe\n                        .one(\"load\", this.onIframeLoad.bind(this));\n\n                    form[0].submit();\n                } else {\n                    upload._removeFileEntry(iframe.data(\"file\"));\n                    this.cleanupFrame(iframe);\n                    this.unregisterFrame(iframe);\n                }\n            },\n\n            onSaveSelected: function() {\n                var module = this;\n                var upload = module.upload;\n\n                $(\".k-file\", this.element).each(function() {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                    if (!started && !hasValidationErrors) {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n\n            onIframeLoad: function(e) {\n                var iframe = $(e.target),\n                    responseText;\n\n                try {\n                    responseText = iframe.contents().text();\n                } catch (ex) {\n                    responseText = \"Error trying to get server response: \" + ex;\n                }\n\n                this.processResponse(iframe, responseText);\n            },\n\n            processResponse: function(iframe, responseText) {\n                var fileEntry = iframe.data(\"file\"),\n                    module = this,\n                    fakeXHR = {\n                        responseText: responseText\n                    };\n                tryParseJSON(responseText,\n                    function(jsonResult) {\n                        $.extend(fakeXHR, { statusText: \"OK\", status: \"200\" });\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, fakeXHR);\n\n                        module.cleanupFrame(iframe);\n                        module.unregisterFrame(iframe);\n                    },\n                    function() {\n                        $.extend(fakeXHR, { statusText: \"error\", status: \"500\" });\n                        module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, fakeXHR);\n                    }\n                );\n            },\n\n            onCancel: function(e) {\n                var iframe = $(e.target).data(\"frame\");\n\n                this.stopFrameSubmit(iframe);\n                this.cleanupFrame(iframe);\n                this.unregisterFrame(iframe);\n                this.upload._removeFileEntry(iframe.data(\"file\"));\n            },\n\n            onRetry: function(e) {\n                var fileEntry = getFileEntry(e);\n                this.performUpload(fileEntry);\n            },\n\n            onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                var iframe = fileEntry.data(\"frame\");\n\n                if (iframe) {\n                    module.unregisterFrame(iframe);\n                    upload._removeFileEntry(fileEntry);\n                    module.cleanupFrame(iframe);\n                } else {\n                    if (fileEntry.hasClass(\"k-file-success\")) {\n                        removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                    } else {\n                        upload._removeFileEntry(fileEntry);\n                    }\n                }\n            },\n\n            onAbort: function() {\n                var element = this.element,\n                    module = this;\n\n                $.each(this.iframes, function() {\n                    $(\"input\", this.data(\"form\")).appendTo(element);\n                    module.stopFrameSubmit(this[0]);\n                    this.data(\"form\").remove();\n                    this.remove();\n                });\n\n                this.iframes = [];\n            },\n\n            createFrame: function(id) {\n                return $(\n                    \"<iframe\" +\n                    \" name='\" + id + \"'\" +\n                    \" id='\" + id + \"'\" +\n                    \" style='display:none;' />\"\n                );\n            },\n\n            createForm: function(action, target) {\n                return $(\n                    \"<form enctype='multipart/form-data' method='POST'\" +\n                    \" action='\" + action + \"'\" +\n                    \" target='\" + target + \"'\" +\n                    \"/>\");\n            },\n\n            stopFrameSubmit: function(frame) {\n                if (typeof(frame.stop) != \"undefined\") {\n                    frame.stop();\n                } else if (frame.document) {\n                    frame.document.execCommand(\"Stop\");\n                }\n            },\n\n            registerFrame: function(frame) {\n                this.iframes.push(frame);\n            },\n\n            unregisterFrame: function(frame) {\n                this.iframes = $.grep(this.iframes, function(value) {\n                    return value.attr(\"name\") != frame.attr(\"name\");\n                });\n            },\n\n            cleanupFrame: function(frame) {\n                var form = frame.data(\"form\");\n\n                frame.data(\"file\").data(\"frame\", null);\n\n                setTimeout(function() {\n                    form.remove();\n                    frame.remove();\n                }, 1);\n            }\n        };\n\n        // FormData upload module\n        var formDataUploadModule = function(upload) {\n            this.name = \"formDataUploadModule\";\n            this.element = upload.wrapper;\n            this.upload = upload;\n            this.position = {};\n            this.metaData = {};\n            this.cancelled = {};\n            this.resume = {};\n            this.paused = {};\n            this.retries = {};\n        };\n\n        formDataUploadModule.prototype = {\n            onSelect: function(e, files) {\n                var upload = this.upload;\n                var module = this;\n                var sourceElement = $(e.target);\n                var fileEntries = this.prepareUpload(sourceElement, files);\n                var hasValidationErrors;\n                var prev;\n\n                $.each(fileEntries, function(index) {\n                    hasValidationErrors = upload._filesContainValidationErrors($(this.data(\"fileNames\")));\n\n                    if (upload.options.async.autoUpload) {\n                        if (!hasValidationErrors) {\n                            if (upload.options.async.chunkSize) {\n                                module.prepareChunk(this);\n                                prev = this.prev();\n\n                                if (upload.options.async.concurrent || (index === 0 && !prev.length) ||\n                                 (index === 0 && prev.hasClass(\"k-file-success\"))) {\n                                    module.performUpload(this);\n                                }\n                            } else {\n                                module.performUpload(this);\n                            }\n                        } else {\n                            upload._fileAction(this, REMOVE);\n                            upload._showHeaderUploadStatus(false);\n                        }\n                    } else {\n                        upload._fileAction(this, REMOVE);\n\n                        if (!hasValidationErrors) {\n                            upload._showActionButtons();\n                            this.addClass(\"k-toupload\");\n                        } else {\n                            upload._updateHeaderUploadStatus();\n                        }\n                    }\n\n                    if (hasValidationErrors) {\n                        upload._hideUploadProgress(this);\n                    }\n                });\n            },\n\n            prepareUpload: function(sourceElement, files) {\n                var fileEntries = this.enqueueFiles(files);\n\n                if (sourceElement.is(\"input\")) {\n                    $.each(fileEntries, function() {\n                        $(this).data(\"relatedInput\", sourceElement);\n                    });\n                    sourceElement.data(\"relatedFileEntries\", fileEntries);\n                    this.upload._addInput(sourceElement);\n                }\n\n                return fileEntries;\n            },\n\n            enqueueFiles: function(files) {\n                var upload = this.upload;\n                var name;\n                var i;\n                var filesLength = files.length;\n                var currentFile;\n                var fileEntry;\n                var fileEntries = [];\n\n                if (upload.options.async.batch === true) {\n                    name = $.map(files, function(file) { return file.name; }).join(\", \");\n\n                    if (upload.directory || upload.options.directoryDrop) {\n                        $(files).each(function() {\n                            if (this.rawFile.webkitRelativePath || this.rawFile.relativePath) {\n                                this.name = this.rawFile.webkitRelativePath || this.rawFile.relativePath;\n                            }\n                        });\n                    }\n\n                    fileEntry = upload._enqueueFile(name, { fileNames: files });\n                    fileEntry.data(\"files\", files);\n\n                    fileEntries.push(fileEntry);\n                } else {\n                    for (i = 0; i < filesLength; i++) {\n                        currentFile = files[i];\n                        name = currentFile.name;\n                        if (upload.directory || upload.options.directoryDrop) {\n                            if (currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath) {\n                                currentFile.name = currentFile.rawFile.webkitRelativePath || currentFile.rawFile.relativePath;\n                            }\n                        }\n                        fileEntry = upload._enqueueFile(name, { fileNames: [currentFile] });\n                        fileEntry.data(\"files\", [currentFile]);\n\n                        fileEntries.push(fileEntry);\n                    }\n                }\n\n                return fileEntries;\n            },\n\n            performUpload: function(fileEntry) {\n                var upload = this.upload,\n                    formData = this.createFormData(),\n                    xhr = this.createXHR(),\n                    e = {\n                        files: fileEntry.data(\"fileNames\"),\n                        XMLHttpRequest: xhr\n                    },\n                    files;\n                var fileValidation = fileEntry.find('.k-file-validation-message');\n                var fileInfo = fileEntry.find('.k-file-summary');\n                var fileSize = fileEntry.find('.k-file-size');\n\n                if (!upload.trigger(UPLOAD, e)) {\n                    if (fileEntry.find(\".k-i-cancel,.k-svg-i-cancel\").length === 0) {\n                        if (upload.options.async.chunkSize) {\n                            upload._fileAction(fileEntry, PAUSE);\n                        }\n                        upload._fileAction(fileEntry, CANCEL, upload.options.async.chunkSize);\n                    }\n\n                    if (!upload.wrapper.find(\".k-toupload\").length) {\n                        upload._hideActionButtons();\n                    }\n\n                    upload._showHeaderUploadStatus(true);\n\n                    if (e.formData) {\n                        formData = e.formData;\n                    } else {\n                        e.data = $.extend({ }, e.data, antiForgeryTokens());\n                        for (var key in e.data) {\n                            formData.append(key, e.data[key]);\n                        }\n\n                        files = fileEntry.data(\"files\");\n                        if (files) {\n                            this.populateFormData(formData, files);\n                        }\n                    }\n\n                    upload._fileState(fileEntry, \"uploading\");\n                    $(fileEntry).removeClass(\"k-file-error\").addClass(\"k-file-progress\");\n\n                    if (fileValidation.length > 0) {\n                        fileValidation.remove();\n                    }\n\n                    if (fileInfo.length > 0) {\n                        fileInfo.removeClass('k-hidden');\n                    } else if (fileSize.length > 0) {\n                        fileSize.removeClass('k-hidden');\n                    }\n\n                    if (upload.options.async.useArrayBuffer && window.FileReader) {\n                        this._readFile(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                    } else {\n                        this.postFormData(upload.options.async.saveUrl, formData, fileEntry, xhr);\n                    }\n                } else {\n                    this.removeFileEntry(fileEntry);\n                }\n            },\n\n            _readFile: function(saveUrl, formData, fileEntry, xhr) {\n                var that = this;\n                var upload = that.upload;\n                var file = fileEntry.data(\"files\")[0];\n\n                var reader = new FileReader();\n                reader.onload = function(e) {\n                    try {\n                        if (!that.fileArrayBuffer) {\n                            that.fileArrayBuffer = e.target.result;\n                        } else {\n                            that.fileArrayBuffer = that._appendBuffer(that.fileArrayBuffer, e.target.result);\n                        }\n                    } catch (err) {\n                        upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                        return;\n                    }\n\n                    if (that.position[file.uid] > file.size) {\n                        that.postFormData(upload.options.async.saveUrl, that.fileArrayBuffer, fileEntry, xhr);\n                        that.fileArrayBuffer = null;\n                    } else {\n                        that._readFile(saveUrl, formData, fileEntry, xhr);\n                    }\n                };\n                reader.onerror = function() {\n                    upload._onUploadError({ target: $(fileEntry, upload.wrapper) }, xhr);\n                };\n                reader.readAsArrayBuffer(that._getCurrentChunk(file.rawFile, file.uid));\n            },\n\n            _appendBuffer: function(buffer1, buffer2) {\n                var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n\n                tmp.set(new Uint8Array(buffer1), 0);\n                tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n\n                return tmp.buffer;\n            },\n\n            onSaveSelected: function() {\n                var module = this;\n                var upload = module.upload;\n\n                $(\".k-toupload\", this.element).filter(function() {\n                    var fileEntry = $(this);\n                    var started = isFileUploadStarted(fileEntry);\n                    var hasValidationErrors = upload._filesContainValidationErrors(fileEntry.data(\"fileNames\"));\n\n                    return !started && !hasValidationErrors;\n                }).each(function(index) {\n                    var fileEntry = $(this);\n                    var prevEntry = fileEntry.prev();\n\n                    fileEntry.removeClass(\"k-toupload\");\n                    if (upload.options.async.chunkSize) {\n                        module.prepareChunk(fileEntry);\n\n                        if (upload.options.async.concurrent || (index === 0 && !prevEntry.length) ||\n                            (index === 0 && prevEntry.hasClass(\"k-file-success\") || prevEntry.hasClass(\"k-file-error:not(k-file-invalid)\"))) {\n                            module.performUpload(fileEntry);\n                        }\n                    } else {\n                        module.performUpload(fileEntry);\n                    }\n                });\n            },\n\n            onCancel: function(e) {\n                var fileEntry = getFileEntry(e);\n\n                if (this.upload.options.async.chunkSize) {\n                    this.cancelled[fileEntry.data(\"uid\")] = true;\n                }\n                this.stopUploadRequest(fileEntry);\n                this.removeFileEntry(fileEntry);\n            },\n\n            onPause: function(e) {\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data(\"uid\");\n                var async = this.upload.options.async;\n\n                if (async.chunkSize) {\n                    this.retries[fileUid] = async.maxAutoRetries + 1;\n                    this.paused[fileUid] = true;\n                    this.resume[fileUid] = false;\n                }\n            },\n\n            onResume: function(e) {\n                var fileEntry = getFileEntry(e);\n                var fileUid = fileEntry.data(\"uid\");\n\n                if (this.upload.options.async.chunkSize) {\n                    delete this.paused[fileUid];\n                    this.resume[fileUid] = true;\n                    this.retries[fileEntry.data(\"uid\")] = 1;\n                    this._increaseChunkIndex(fileUid);\n                    this.performUpload(fileEntry);\n                }\n            },\n\n            onRetry: function(e) {\n                var fileEntry = getFileEntry(e);\n                var async = this.upload.options.async;\n\n                if (async.chunkSize) {\n                    this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n                    delete this.paused[fileEntry.data(\"uid\")];\n                }\n\n                this.performUpload(fileEntry);\n            },\n\n            onRemove: function(e, eventArgs, shouldSendRemoveRequest) {\n                var module = this;\n                var upload = module.upload;\n                var fileEntry = getFileEntry(e);\n                var async = this.upload.options.async;\n\n                if (async.chunkSize) {\n                    this.retries[fileEntry.data(\"uid\")] = async.maxAutoRetries + 1;\n                }\n\n                if (fileEntry.hasClass(\"k-file-success\")) {\n                    removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest);\n                } else {\n                    module.removeFileEntry(fileEntry);\n                }\n            },\n\n            createXHR: function() {\n                return new XMLHttpRequest();\n            },\n\n            postFormData: function(url, data, fileEntry, xhr) {\n                var module = this;\n\n                fileEntry.data(\"request\", xhr);\n\n                xhr.addEventListener(\"load\", function(e) {\n                    module.onRequestSuccess.call(module, e, fileEntry);\n                }, false);\n\n                xhr.addEventListener(ERROR, function(e) {\n                    module.onRequestError.call(module, e, fileEntry);\n                }, false);\n\n                xhr.upload.addEventListener(\"progress\", function(e) {\n                    module.onRequestProgress.call(module, e, fileEntry);\n                }, false);\n\n                xhr.open(\"POST\", url, true);\n                xhr.withCredentials = this.upload.options.async.withCredentials;\n\n                var accept = this.upload.options.async.accept;\n                if (accept) {\n                    xhr.setRequestHeader(\"Accept\", accept);\n                }\n\n                xhr.send(data);\n            },\n\n            createFormData: function() {\n                return new FormData();\n            },\n\n            populateFormData: function(data, files) {\n                var chunk;\n                var i;\n                var length = files.length;\n                var uid;\n                var upload = this.upload;\n\n                if (upload.options.async.chunkSize) {\n                     uid = files[0].uid;\n                     chunk = this._getCurrentChunk(files[0].rawFile, uid);\n\n                    data.append(\n                        upload.options.async.saveField || upload.name,\n                        chunk\n                    );\n\n                    var serializedMetaData = JSON.stringify(this.metaData[uid]);\n                    data.append(\"metadata\", serializedMetaData);\n                } else {\n                     for (i = 0; i < length; i++) {\n                        data.append(\n                            upload.options.async.saveField || upload.name,\n                            files[i].rawFile\n                        );\n                     }\n                }\n\n                return data;\n            },\n\n            onRequestSuccess: function(e, fileEntry) {\n                var xhr = e.target,\n                    module = this;\n\n                function raiseError() {\n                    module.upload._onUploadError({ target: $(fileEntry, module.upload.wrapper) }, xhr);\n                }\n\n                function parseSuccess(jsonResult) {\n                    var batch = module.upload.options.async.batch;\n                    var chunkSize = module.upload.options.async.chunkSize;\n                    var concurrent = module.upload.options.async.concurrent;\n                    var fileUid = jsonResult.fileUid;\n\n                    if (module.paused[fileUid] || module.cancelled[fileUid]) {\n                        return;\n                    }\n\n                    delete module.retries[fileUid];\n\n                    if (chunkSize && !batch && !jsonResult.uploaded) {\n\n                        module._increaseChunkIndex(fileUid);\n                        module.performUpload(fileEntry);\n                    } else if (chunkSize && !batch && !concurrent && fileEntry.next().length && !fileEntry.next().hasClass(\"k-toupload\")) {\n                            module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                            module._resetChunkIndex(fileUid);\n                            module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n\n                            module.performUpload(fileEntry.next());\n                    } else {\n                        module.upload._onFileProgress({ target: $(fileEntry, module.upload.wrapper) }, 100);\n                        module.upload._onUploadSuccess({ target: $(fileEntry, module.upload.wrapper) }, jsonResult, xhr);\n                        module.cleanupFileEntry(fileEntry);\n                    }\n                }\n\n                if (xhr.status >= 200 && xhr.status <= 299) {\n                    tryParseJSON(xhr.responseText,\n                        parseSuccess,\n                        raiseError\n                    );\n                } else {\n                    raiseError();\n                }\n            },\n\n            onRequestError: function(e, fileEntry) {\n                var xhr = e.target;\n\n                this.upload._onUploadError({ target: $(fileEntry, this.upload.wrapper) }, xhr);\n            },\n\n            cleanupFileEntry: function(fileEntry) {\n                var relatedInput = fileEntry.data(\"relatedInput\"),\n                    uploadComplete = true;\n\n                if (relatedInput) {\n                    $.each(relatedInput.data(\"relatedFileEntries\") || [], function() {\n                        // Exclude removed file entries and self\n                        if (this.parent().length > 0 && this[0] != fileEntry[0]) {\n                            uploadComplete = uploadComplete && this.hasClass(\"k-file-success\");\n                        }\n                    });\n\n                    if (uploadComplete) {\n                        relatedInput.remove();\n                    }\n                }\n            },\n\n            removeFileEntry: function(fileEntry) {\n                var chunkSize = this.upload.options.async.chunkSize;\n                var concurrent = this.upload.options.async.concurrent;\n                var isUploadButtonVisible = this.upload.wrapper.find(\".k-upload-selected\").length > 0;\n\n                this.cleanupFileEntry(fileEntry);\n                if (chunkSize && !concurrent && !isUploadButtonVisible) {\n                     if (fileEntry.next().length) {\n                         this.performUpload(fileEntry.next());\n                     }\n                }\n                this.upload._removeFileEntry(fileEntry);\n            },\n\n            onRequestProgress: function(e, fileEntry) {\n                var percentComplete = Math.round(e.loaded * 100 / e.total);\n                var fileUid = fileEntry.data(\"uid\");\n                var fileMetaData;\n\n                if (this.upload.options.async.chunkSize) {\n                    fileMetaData = this.metaData[fileUid];\n                    percentComplete = fileMetaData && fileMetaData.totalChunks ? Math.round(((fileMetaData.chunkIndex) / fileMetaData.totalChunks) * 100) : 100;\n                }\n                this.upload._onFileProgress({ target: $(fileEntry, this.upload.wrapper) }, percentComplete);\n            },\n\n            stopUploadRequest: function(fileEntry) {\n                if (fileEntry.data(\"request\")) {\n                    fileEntry.data(\"request\").abort();\n                }\n            },\n\n            prepareChunk: function(fileEntry) {\n                var file = fileEntry.data(\"files\")[0];\n                var rawFile = file.rawFile;\n                var uid = file.uid;\n                var chunkSize = this.upload.options.async.chunkSize;\n                this.position[uid] = 0;\n\n                this.metaData[uid] = {\n                    chunkIndex: 0,\n                    contentType: rawFile.type,\n                    fileName: rawFile.name,\n                    relativePath: file.name,\n                    totalFileSize: rawFile.size,\n                    totalChunks: Math.ceil(rawFile.size / chunkSize),\n                    uploadUid: uid\n                };\n            },\n\n            _decreaseChunkIndex: function(uid) {\n                this.metaData[uid].chunkIndex--;\n            },\n\n            _increaseChunkIndex: function(uid) {\n                this.metaData[uid].chunkIndex++;\n            },\n\n            _resetChunkIndex: function(uid) {\n                this.metaData[uid].chunkIndex = 0;\n            },\n\n            _decreasePosition: function(uid) {\n                this.position[uid] -= this.upload.options.async.chunkSize;\n            },\n\n            _getCurrentChunk: function(file, uid) {\n                var oldPosition = this.position[uid];\n                var methodToInvoke;\n                var async = this.upload.options.async;\n                var chunkSize = async.chunkSize || async.bufferChunkSize;\n\n                if (!this.position[uid]) {\n                    this.position[uid] = 0;\n                }\n                this.position[uid] += chunkSize;\n\n                if (!!(methodToInvoke = this._getChunker(file))) {\n                    return file[methodToInvoke](oldPosition, this.position[uid]);\n                } else {\n                    return file;\n                }\n            },\n\n            _getChunker: function(file) {\n                if (file.slice) {\n                    return \"slice\";\n                } else if (file.mozSlice) {\n                    return \"mozSlice\";\n                } else if (file.webkitSlice) {\n                        return \"webkitSlice\";\n                } else {\n                    return null;\n                }\n            }\n        };\n\n        // Helper functions\n        function getFileName(input) {\n            return $.map(inputFiles(input), function(file) {\n                return file.name;\n            }).join(\", \");\n        }\n\n        function inputFiles($input) {\n            var input = $input[0];\n\n            if (input.files) {\n                return getAllFileInfo(input.files);\n            } else {\n                return [{\n                    name: stripPath(input.value),\n                    extension: getFileExtension(input.value),\n                    size: null\n                }];\n            }\n        }\n\n        function getAllFileInfo(rawFiles) {\n            return $.map(rawFiles, function(file) {\n                return getFileInfo(file);\n            });\n        }\n\n        function getFileInfo(rawFile) {\n            // Older Firefox versions (before 3.6) use fileName and fileSize\n            var fileName = rawFile.name || rawFile.fileName;\n            return {\n                name: kendo.htmlEncode(fileName),\n                extension: getFileExtension(fileName),\n                size: typeof rawFile.size == \"number\" ? rawFile.size : rawFile.fileSize, //rawFile.size || rawFile.fileSize,\n                rawFile: rawFile\n            };\n        }\n\n        function getFileExtension(fileName) {\n            var matches = fileName.match(rFileExtension);\n            return matches ? matches[0] : \"\";\n        }\n\n        function stripPath(name) {\n            var slashIndex = name.lastIndexOf(\"\\\\\");\n            return (slashIndex != -1) ? name.substr(slashIndex + 1) : name;\n        }\n\n        function assignGuidToFiles(files, unique) {\n            var uid = kendo.guid();\n\n            return $.map(files, function(file) {\n                file.uid = unique ? kendo.guid() : uid;\n\n                return file;\n            });\n        }\n\n        function validateFiles(files, validationInfo) {\n            var allowedExtensions = parseAllowedExtensions(validationInfo.allowedExtensions);\n            var maxFileSize = validationInfo.maxFileSize;\n            var minFileSize = validationInfo.minFileSize;\n\n            for (var i = 0; i < files.length; i++) {\n                validateFileExtension(files[i], allowedExtensions);\n                validateFileSize(files[i], minFileSize, maxFileSize);\n            }\n        }\n\n        function parseAllowedExtensions(extensions) {\n            var allowedExtensions = $.map(extensions, function(ext) {\n                var parsedExt = (ext.substring(0, 1) === \".\") ? ext : (\".\" + ext);\n                return parsedExt.toLowerCase();\n            });\n\n            return allowedExtensions;\n        }\n\n        function validateFileExtension(file, allowedExtensions) {\n            if (allowedExtensions.length > 0) {\n                if (allowedExtensions.indexOf(file.extension.toLowerCase()) < 0) {\n                    file.validationErrors = file.validationErrors || [];\n                    if ($.inArray(INVALIDFILEEXTENSION, file.validationErrors) === -1) {\n                        file.validationErrors.push(INVALIDFILEEXTENSION);\n                    }\n                }\n            }\n        }\n\n        function validateFileSize(file, minFileSize, maxFileSize) {\n            if (minFileSize !== 0 && file.size < minFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMINFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMINFILESIZE);\n                }\n            }\n\n            if (maxFileSize !== 0 && file.size > maxFileSize) {\n                file.validationErrors = file.validationErrors || [];\n                if ($.inArray(INVALIDMAXFILESIZE, file.validationErrors) === -1) {\n                    file.validationErrors.push(INVALIDMAXFILESIZE);\n                }\n            }\n        }\n\n        function getTotalFilesSizeMessage(files) {\n            var totalSize = 0;\n\n            if (typeof files[0].size == \"number\") {\n                for (var i = 0; i < files.length; i++) {\n                    if (files[i].size) {\n                        totalSize += files[i].size;\n                    }\n                }\n            } else {\n                return \"\";\n            }\n\n            totalSize /= 1024;\n\n            if (totalSize < 1024) {\n                return totalSize.toFixed(2) + \" KB\";\n            } else {\n                return (totalSize / 1024).toFixed(2) + \" MB\";\n            }\n        }\n\n        function shouldRemoveFileEntry(upload) {\n            return !upload.multiple && $(\".k-file\", upload.wrapper).length > 1;\n        }\n\n        function removeUploadedFile(fileEntry, upload, eventArgs, shouldSendRemoveRequest) {\n            if (!upload._supportsRemove()) {\n                if (shouldRemoveFileEntry(upload) || !shouldSendRemoveRequest) {\n                    upload._removeFileEntry(fileEntry);\n                }\n\n                return;\n            }\n\n            var files = fileEntry.data(\"fileNames\");\n            var fileNames = $.map(files, function(file) { return file.name; });\n\n            if (shouldSendRemoveRequest === false) {\n                upload._removeFileEntry(fileEntry);\n\n                return;\n            }\n\n            upload._submitRemove(fileNames, eventArgs,\n                function onSuccess(data, textStatus, xhr) {\n                    var prevented = upload.trigger(SUCCESS, {\n                        operation: \"remove\",\n                        files: files,\n                        response: data,\n                        XMLHttpRequest: xhr\n                    });\n\n                    if (!prevented) {\n                        upload._removeFileEntry(fileEntry);\n                    }\n                },\n\n                function onError(xhr) {\n                    if (shouldRemoveFileEntry(upload)) {\n                        upload._removeFileEntry(fileEntry);\n                    }\n\n                    upload.trigger(ERROR, {\n                        operation: \"remove\",\n                        files: files,\n                        XMLHttpRequest: xhr\n                    });\n\n                    logToConsole(\"Server response: \" + xhr.responseText);\n                }\n            );\n        }\n\n        function tryParseJSON(input, onSuccess, onError) {\n            var success = false,\n                json = \"\";\n\n            try {\n                json = JSON.parse(normalizeJSON(input));\n                success = true;\n            } catch (e) {\n                onError();\n            }\n\n            if (success) {\n                onSuccess(json);\n            }\n        }\n\n        function normalizeJSON(input) {\n            if (typeof input === \"undefined\" || input === \"\") {\n                input = \"{}\";\n            }\n\n            return input;\n        }\n\n        function stopEvent(e) {\n            if (e.originalEvent) {\n                e.originalEvent.dataTransfer.dropEffect = \"copy\";\n            }\n            e.stopPropagation(); e.preventDefault();\n        }\n\n        function bindDragEventWrappers(element, namespace, onDragEnter, onDragLeave) {\n            var hideInterval, lastDrag;\n\n            element\n                .on(\"dragenter\" + namespace, function(e) {\n                    onDragEnter(e);\n                    lastDrag = new Date();\n\n                    if (!hideInterval) {\n                        hideInterval = setInterval(function() {\n                            var sinceLastDrag = new Date() - lastDrag;\n                            if (sinceLastDrag > 100) {\n                                onDragLeave();\n\n                                clearInterval(hideInterval);\n                                hideInterval = null;\n                            }\n                        }, 100);\n                    }\n                })\n                .on(\"dragover\" + namespace, function() {\n                    lastDrag = new Date();\n                });\n        }\n\n        function isFileUploadStarted(fileEntry) {\n            return fileEntry.is(\".k-file-progress, .k-file-success, .k-file-error:not(.k-file-invalid)\");\n        }\n\n        function getFileEntry(e) {\n            return $(e.target).closest(\".k-file\");\n        }\n\n        kendo.ui.plugin(Upload);\n    })(window.kendo.jQuery);\n\n}));\n"]}