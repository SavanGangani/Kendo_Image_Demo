{"version":3,"file":"kendo.scheduler.dayview.min.js","names":["factory","define","amd","$","undefined$1","kendo","window","ui","encode","htmlEncode","setTime","date","SchedulerView","outerWidth","_outerWidth","outerHeight","_outerHeight","extend","getDate","MS_PER_MINUTE","MS_PER_DAY","INVERSE_COLOR_CLASS","getMilliseconds","NS","DAY_VIEW_EVENT_TEMPLATE","template","ref","start","end","title","format","replace","DAY_VIEW_ALL_DAY_EVENT_TEMPLATE","DATA_HEADER_TEMPLATE","isMobile","toString","ALLDAY_EVENT_WRAPPER_TEMPLATE","event","ariaLabel","attr","resources","tail","middle","icon","isException","isRecurring","showDelete","messages","head","resizable","singleDay","EVENT_WRAPPER_TEMPLATE","toInvariantTime","staticDate","Date","isInDateRange","value","min","max","isInTimeRange","overlaps","addContinuousEvent","group","range","element","isAllDay","events","_continuousEvents","lastEvent","length","startDate","getTime","idx","splice","uid","push","MultiDayView","init","options","that","this","fn","call","name","_workDays","workDays","dayIndex","workWeekStart","workWeekEnd","Math","abs","getWorkDays","_templates","_editable","calculateDateRange","_groups","_currentTime","_currentTimeMarkerUpdater","_updateCurrentTimeMarker","currentTime","currentTimeMarkers","currentContentMarkers","timesTableMarkerWidth","position","elementHtml","currentTimeMarker","useLocalTimezone","timezone","dataSource","schema","timezoneOffset","offset","convert","getTimezoneOffset","times","find","content","groupsCount","orientation","groups","firstTimesCell","first","lastTimesCell","last","_isRtl","left","groupIndex","currentGroup","utcCurrentTime","toUtcTime","ranges","timeSlotRanges","collection","slotByStartDate","timesTableMarker","eq","prependTo","markerTopPosition","round","innerRect","top","timesTableMarkerCss","right","addClass","CURRENT_TIME_MARKER_ARROW_CLASS","css","height","setUpdateTimer","markerOptions","updateInterval","_currentTimeUpdateTimer","setInterval","bind","_updateResizeHint","startTime","endTime","multiday","enforceAllDaySlot","isMultiDay","width","hint","_removeResizeHint","rangeIndex","startSlot","_isGroupedByDate","slotIdx","index","slot","_slots","offsetWidth","clientHeight","offsetTop","_createResizeHint","offsetLeft","_resizeHint","add","innerWidth","rect","outerRect","snap","bottom","container","appendTo","text","toLocalDate","_updateMoveHint","distance","duration","_removeMoveHint","_end","pop","eventHint","clientWidth","offsetHeight","_createEventElement","clone","inverseColor","_appendMoveHint","_moveHint","_slotByPosition","x","y","_isVerticallyGrouped","scrollTop","scrollLeft","ceil","daySlotByPosition","timeSlotByPosition","_groupCount","groupedResources","byDate","_groupOrientation","_columnCountForLevel","_rowCountForLevel","_columnOffsetForResource","_columnCountInResourceView","_timeSlotGroups","groupCount","columnCount","time","rowIndex","cellIndex","interval","_timeSlotInterval","verticalViews","tableRows","rowCount","floor","rowMultiplier","cellMultiplier","cells","children","timeIndex","_addTimeSlotGroup","cell","getTimeSlotCollection","currentDate","_dates","UTC","getFullYear","getMonth","addTimeSlot","_addDaySlotGroup","cellCount","addDaySlot","_daySlotGroups","getDaySlotCollection","view","_addResourceView","columnIndex","addTimeSlotCollection","addDays","allDaySlot","addDaySlotCollection","selectedDateFormat","selectedShortDateFormat","selectedMobileDateFormat","showWorkHours","today","minorTickCount","majorTick","majorTimeHeaderTemplate","minorTimeHeaderTemplate","groupHeaderTemplate","slotTemplate","allDaySlotTemplate","eventTemplate","allDayEventTemplate","dateHeaderTemplate","editable","workDayStart","workDayEnd","footer","command","allDay","showFullDay","showWorkDay","settings","Template","templateSettings","_isMobile","_touchEditable","_mouseEditable","on","e","trigger","closest","preventDefault","create","parent","hasClass","pageX","pageY","resourceInfo","_resourceBySlot","eventInfo","endDate","update","threshold","support","mobileOS","android","_addUserEvents","UserEvents","filter","useClickAsTap","browser","edge","tap","_scrolling","target","location","_allDayUserEvents","_editUserEvents","eventElement","touch","initialTouch","is","_layout","dates","columns","rows","column","isToday","className","cellContent","_forTimeRange","middleRow","lastSlotRow","row","_createDateLayout","_createColumnsLayout","_createRowsLayout","toggleFullDay","isWorkDay","_footerItems","items","_defaultTools","todayMobile","fulldayMobile","fulldayDesktop","action","after","msStart","msMin","msMax","msMajorInterval","msInterval","startDay","html","majorTickDivider","_content","_renderRows","rowLevels","columnLevels","append","_virtualContent","isVerticalGroupped","dateID","levels","_recalculateLevels","appendRow","groupIdx","dateIndex","_addCellsToContent","rowIdx","_allDayVerticalGroupRow","result","dateGroupIndex","tmplDate","classes","_isWorkDay","day","getDay","i","_render","_startDate","_endDate","createLayout","_footer","refreshLayout","_isVirtualized","_tryRenderContent","allDayHeader","_allDayHeaderHeight","th","currentTarget","additioanlWidth","additionalHeight","datesHeader","nextDate","nextDay","previousDate","previousDay","destroy","clearInterval","off","inRange","selectionByElement","innerHeight","_timeSlotIndex","_slotIndex","_dateSlotIndex","slots","_positionAllDayEvent","slotRange","slotWidth","startIndex","endIndex","allDayEvents","collidingEvents","currentColumnCount","_headerColumnCount","rightOffset","eventHeight","addEvent","slotIndex","createRows","rowEvents","j","eventLength","_arrangeColumns","columnEvents","eventRightOffset","eventElements","slotEvents","tableEl","table","contentEl","columnWidth","createColumns","calculatedWidth","style","scrollWidth","_positionEvent","_startTime","_endTime","borderWidths","getComputedStyles","parseFloat","isOneDayEvent","resize","eventStartTime","_time","eventEndTime","eventStartDate","eventEndDate","eventResources","apply","data","ns","_formatEventAriaLabel","angular","elements","dataItem","_isInTimeSlot","slotStartTime","slotEndTime","_date","_isInDateSlot","slotStart","firstSlot","slotEnd","lastSlot","_updateAllDayHeaderHeight","_height","allDaySlots","refresh","_renderEvents","allDayEventContainer","isMultiDayEvent","slotRanges","newStart","newEnd","dateRange","daySlotRanges","_inverseEventColor","rangeCount","occurrence","render","_cachedEvents","remove","Query","sort","field","dir","toArray","eventsByResource","_eventsByResource","eventsPerDate","map","grep","parentValue","resource","item","itemParentValue","getter","dataParentValueField","itemIdx","_resourceValue","eventsFilteredByResource","operator","groupEqFilter","slice","level","columnLevel","rowLevel","clearSelection","removeAttr","removeClass","_updateDirection","selection","multiple","reverse","vertical","isDaySlot","endSlot","collectionIndex","backward","_changeViewPeriod","endMilliseconds","newDateStart","newDateEnd","verticalByDate","_timeSlotCollections","_getCollections","daySlotCollectionCount","_isInRange","DayView","WeekView","selectedDate","dayOfWeek","calendarInfo","firstDay","WorkWeekView","weekStart","indexOf","jQuery"],"sources":["kendo.scheduler.dayview.js"],"mappings":"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","sourcesContent":["(function (factory) {\n    typeof define === 'function' && define.amd ? define(['kendo.scheduler.view', 'kendo.icons'], factory) :\n    factory();\n})((function () {\n    var __meta__ = {\n        id: \"scheduler.dayview\",\n        name: \"Scheduler Day View\",\n        category: \"web\",\n        description: \"The Scheduler Day View\",\n        depends: [ \"scheduler.view\", \"icons\" ],\n        hidden: true\n    };\n\n    (function($, undefined$1) {\n        var kendo = window.kendo,\n            ui = kendo.ui,\n            encode = kendo.htmlEncode,\n            setTime = kendo.date.setTime,\n            SchedulerView = ui.SchedulerView,\n            outerWidth = kendo._outerWidth,\n            outerHeight = kendo._outerHeight,\n            extend = $.extend,\n            getDate = kendo.date.getDate,\n            MS_PER_MINUTE = kendo.date.MS_PER_MINUTE,\n            MS_PER_DAY = kendo.date.MS_PER_DAY,\n            CURRENT_TIME_MARKER_CLASS = \"k-current-time\",\n            CURRENT_TIME_MARKER_ARROW_CLASS = \"k-current-time-arrow\",\n            INVERSE_COLOR_CLASS = \"k-event-inverse\",\n            BORDER_SIZE_COEFF = 0.8666,\n            getMilliseconds = kendo.date.getMilliseconds,\n            NS = \".kendoMultiDayView\";\n\n        var DAY_VIEW_EVENT_TEMPLATE = kendo.template(function (ref) {\n            var start = ref.start;\n            var end = ref.end;\n            var title = ref.title;\n\n            return \"<div title=\\\"(\" + (kendo.format(\"{0:t} - {1:t}\", start, end)) + \"): \" + (title.replace(/\"/g,\"&#34;\")) + \"\\\">\" +\n                        \"<div class=\\\"k-event-template k-event-time\\\">\" + (encode(kendo.format(\"{0:t} - {1:t}\", start, end))) + \"</div>\" +\n                        \"<div class=\\\"k-event-template\\\">\" + title + \"</div>\" +\n                    '</div>';\n        }),\n\n            DAY_VIEW_ALL_DAY_EVENT_TEMPLATE = kendo.template(function (ref) {\n                var start = ref.start;\n                var title = ref.title;\n\n                return \"<div title=\\\"(\" + (kendo.format(\"{0:t}\", start)) + \"): \" + (title.replace(/\"/g,\"&#34;\")) + \"\\\">\" +\n                        \"<div class=\\\"k-event-template\\\">\" + title + \"</div>\" +\n                    '</div>';\n        }),\n\n            DATA_HEADER_TEMPLATE = kendo.template(function (ref) {\n                var isMobile = ref.isMobile;\n                var date = ref.date;\n\n                return (\"<span class='k-link k-nav-day'>\" + (isMobile ? kendo.toString(date,'ddd')[0] : kendo.toString(date,'ddd M/dd')) + \"</span>\");\n        }),\n\n            ALLDAY_EVENT_WRAPPER_TEMPLATE = function (event) { return \"<div role=\\\"button\\\" aria-label=\\\"\" + (encode(event.ariaLabel)) + \"\\\" \" + (kendo.attr('uid')) + \"=\\\"\" + (event.uid) + \"\\\"\" +\n                    ((event.resources[0] ? (\"style=\\\"background-color:\" + (event.resources[0].color) + \"; border-color: \" + (event.resources[0].color) + \"\\\"\") : '')) + \" class=\\\"k-event\\\">\" +\n                    '<span class=\"k-event-actions\">' +\n                        (event.tail || event.middle ? kendo.ui.icon(\"caret-alt-left\") : '') +\n                        (event.isException() ? kendo.ui.icon(\"arrows-no-repeat\") : (event.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '') ) +\n                    '</span>' +\n                    kendo.template(event.template)(event) +\n                    '<span class=\"k-event-actions\">' +\n                        (event.showDelete ? (\"<a href=\\\"#\\\" class=\\\"k-link k-event-delete\\\" title=\\\"\" + (event.messages.destroy) + \"\\\" aria-label=\\\"\" + (event.messages.destroy) + \"\\\">\" + (kendo.ui.icon(\"x\")) + \"</a>\") : '') +\n                        (event.head || event.middle ? kendo.ui.icon(\"caret-alt-right\") : '') +\n                    '</span>' +\n                    (event.resizable && !event.singleDay && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-w\"></span>' : '') +\n                    (event.resizable && !event.singleDay && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-e\"></span>' : '') +\n                '</div>'; },\n\n            EVENT_WRAPPER_TEMPLATE = function (event) { return \"<div role=\\\"button\\\" aria-label=\\\"\" + (encode(event.ariaLabel)) + \"\\\" \" + (kendo.attr('uid')) + \"=\\\"\" + (event.uid) + \"\\\"\" +\n                    ((event.resources[0] ? (\"style=\\\"background-color:\" + (event.resources[0].color) + \"; border-color: \" + (event.resources[0].color) + \"\\\"\") : '')) + \" class=\\\"k-event\\\">\" +\n                     '<span class=\"k-event-actions\">' +\n                        (event.isException() ? kendo.ui.icon(\"arrows-no-repeat\") : (event.isRecurring() ? kendo.ui.icon(\"arrow-rotate-cw\") : '') ) +\n                    '</span>' +\n                    kendo.template(event.template)(event) +\n                    '<span class=\"k-event-actions\">' +\n                        (event.showDelete ? (\"<a href=\\\"#\\\" class=\\\"k-link k-event-delete\\\" title=\\\"\" + (event.messages.destroy) + \"\\\" aria-label=\\\"\" + (event.messages.destroy) + \"\\\">\" + (kendo.ui.icon(\"x\")) + \"</a>\") : '') +\n                    '</span>' +\n                    '<span class=\"k-event-top-actions\">' +\n                        (event.tail || event.middle ? kendo.ui.icon(\"caret-alt-up\") : '') +\n                    '</span>' +\n                    '<span class=\"k-event-bottom-actions\">' +\n                        (event.head || event.middle ? kendo.ui.icon(\"caret-alt-down\") : '') +\n                    '</span>' +\n                    (event.resizable && !event.tail && !event.middle ? '<span class=\"k-resize-handle k-resize-n\"></span>' : '') +\n                    (event.resizable && !event.head && !event.middle ? '<span class=\"k-resize-handle k-resize-s\"></span>' : '') +\n                '</div>'; };\n\n        function toInvariantTime(date) {\n            var staticDate = new Date(1980, 1, 1, 0, 0, 0);\n            setTime(staticDate, getMilliseconds(date));\n            return staticDate;\n        }\n\n        function isInDateRange(value, min, max) {\n            return value >= min && value <= max;\n        }\n\n        function isInTimeRange(value, min, max, overlaps) {\n            overlaps = overlaps ? value <= max : value < max;\n            return value > min && overlaps;\n        }\n\n        function addContinuousEvent(group, range, element, isAllDay) {\n            var events = group._continuousEvents;\n            var lastEvent = events[events.length - 1];\n            var startDate = getDate(range.start.startDate()).getTime();\n\n            //this handles all day event which is over multiple slots but starts\n            //after one of the time events\n            if (isAllDay && lastEvent &&\n                getDate(lastEvent.start.startDate()).getTime() == startDate) {\n\n                    var idx = events.length - 1;\n                    for ( ; idx > -1; idx --) {\n                        if (events[idx].isAllDay ||\n                            getDate(events[idx].start.startDate()).getTime() < startDate) {\n                                break;\n                            }\n                    }\n\n                    events.splice(idx + 1, 0, {\n                        element: element,\n                        isAllDay: true,\n                        uid: element.attr(kendo.attr(\"uid\")),\n                        start: range.start,\n                        end: range.end\n                    });\n                } else {\n                    events.push({\n                        element: element,\n                        isAllDay: isAllDay,\n                        uid: element.attr(kendo.attr(\"uid\")),\n                        start: range.start,\n                        end: range.end\n                    });\n                }\n        }\n\n        function getWorkDays(options) {\n            if (options.workDays && options.workDays.length) {\n                return options.workDays;\n            }\n\n            var workDays = [];\n            var dayIndex = options.workWeekStart % 7;\n            var workWeekEnd = Math.abs(options.workWeekEnd % 7);\n\n            workDays.push(dayIndex);\n\n            while (workWeekEnd != dayIndex) {\n                if (dayIndex > 6 ) {\n                    dayIndex -= 7;\n                } else {\n                    dayIndex++;\n                }\n                workDays.push(dayIndex);\n            }\n            return workDays;\n        }\n\n        var MultiDayView = SchedulerView.extend({\n            init: function(element, options) {\n                var that = this;\n\n                SchedulerView.fn.init.call(that, element, options);\n\n                that.title = that.options.title || that.options.name;\n\n                that._workDays = getWorkDays(that.options);\n\n                that._templates();\n\n                that._editable();\n\n                that.calculateDateRange();\n\n                that._groups();\n\n                that._currentTime(true);\n            },\n\n            _currentTimeMarkerUpdater: function() {\n                this._updateCurrentTimeMarker(new Date());\n            },\n\n            _updateCurrentTimeMarker: function(currentTime) {\n                var options = this.options,\n                    currentTimeMarkers, currentContentMarkers, timesTableMarkerWidth, position,\n                    elementHtml = \"<div class='\" + CURRENT_TIME_MARKER_CLASS + \"'></div>\";\n\n                if (options.currentTimeMarker.useLocalTimezone === false) {\n                    var timezone = options.dataSource.options.schema.timezone;\n\n                    if (options.dataSource && timezone) {\n                       var timezoneOffset = kendo.timezone.offset(currentTime, timezone);\n                       currentTime = kendo.timezone.convert(currentTime, currentTime.getTimezoneOffset(), timezoneOffset);\n                    }\n                }\n\n                currentTimeMarkers = this.times.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n                currentContentMarkers = this.content.find(\".\" + CURRENT_TIME_MARKER_CLASS);\n\n                var groupsCount = !options.group || options.group.orientation == \"horizontal\" ? 1 : this.groups.length;\n                var firstTimesCell = this.times.find(\"tr\").first().find(\"th\").first();\n                var lastTimesCell = this.times.find(\"tr\").first().find(\"th\").last();\n\n                if (firstTimesCell.length > 0 && lastTimesCell.length > 0) {\n                    if (this._isRtl) {\n                        position = firstTimesCell.position().left + outerHeight(firstTimesCell) - outerHeight(lastTimesCell);\n                    } else {\n                        position = lastTimesCell.position().left;\n                    }\n                }\n\n                for (var groupIndex = 0; groupIndex < groupsCount; groupIndex++) {\n                    var currentGroup = this.groups[groupIndex];\n\n                    if (!currentGroup) {\n                        return;\n                    }\n\n                    var utcCurrentTime = kendo.date.toUtcTime(currentTime);\n                    var ranges = currentGroup.timeSlotRanges(utcCurrentTime, utcCurrentTime + 1);\n\n                    if (ranges.length === 0) {\n                        return;\n                    }\n\n                    var collection = ranges[0].collection;\n                    var slotElement = collection.slotByStartDate(currentTime);\n\n                    if (slotElement) {\n                        var timesTableMarker = currentTimeMarkers[groupIndex] ? currentTimeMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.times);\n                        var markerTopPosition = Math.round(ranges[0].innerRect(currentTime, new Date(currentTime.getTime() + 1), false).top);\n\n                        var timesTableMarkerCss = {};\n\n                        if (this._isRtl) {\n                            timesTableMarkerCss.right = position;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-left\");\n                        } else {\n                            timesTableMarkerCss.left = position;\n                            timesTableMarker.addClass(CURRENT_TIME_MARKER_ARROW_CLASS + \"-right\");\n                        }\n\n                        if (!timesTableMarkerWidth) {\n                            timesTableMarkerWidth = (outerWidth(timesTableMarker) * BORDER_SIZE_COEFF / 2);\n                        }\n\n                        timesTableMarkerCss.top = markerTopPosition - timesTableMarkerWidth;\n\n                        timesTableMarker.css(timesTableMarkerCss);\n\n                        var contentMarker = currentContentMarkers[groupIndex] ? currentContentMarkers.eq(groupIndex) : $(elementHtml).prependTo(this.content);\n\n                        contentMarker.css({\n                            top: markerTopPosition,\n                            height: \"1px\",\n                            right: 0,\n                            left: 0\n                        });\n                    }\n                }\n            },\n\n            _currentTime: function(setUpdateTimer) {\n                var that = this;\n                var markerOptions = that.options.currentTimeMarker;\n\n                if (markerOptions !== false && markerOptions.updateInterval !== undefined$1) {\n                    that._currentTimeMarkerUpdater();\n\n                    if (setUpdateTimer) {\n                        that._currentTimeUpdateTimer = setInterval(this._currentTimeMarkerUpdater.bind(that), markerOptions.updateInterval);\n                    }\n                }\n            },\n\n            _updateResizeHint: function(event, groupIndex, startTime, endTime) {\n                var multiday;\n\n                if (this.options.enforceAllDaySlot) {\n                    multiday = event.isMultiDay();\n                } else {\n                    multiday = event.isAllDay;\n                }\n\n                var group = this.groups[groupIndex];\n\n                var ranges = group.ranges(startTime, endTime, multiday, event.isAllDay);\n                var width, height, top, hint;\n\n                this._removeResizeHint();\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var start = range.startSlot();\n\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = start.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n                            width = slot.offsetWidth;\n                            height = slot.clientHeight;\n                            top = slot.offsetTop;\n\n                            hint = SchedulerView.fn._createResizeHint.call(this,\n                                slot.offsetLeft,\n                                top,\n                                width,\n                                height\n                            );\n\n                            this._resizeHint = this._resizeHint.add(hint);\n                        }\n                    } else {\n                        width = start.offsetWidth;\n                        height = start.clientHeight;\n                        top = start.offsetTop;\n\n                        if (multiday) {\n                            width = range.innerWidth();\n                        } else {\n                            var rect = range.outerRect(startTime, endTime, this.options.snap);\n                            top = rect.top;\n                            height = rect.bottom - rect.top;\n                        }\n\n                        hint = SchedulerView.fn._createResizeHint.call(this,\n                            start.offsetLeft,\n                            top,\n                            width,\n                            height\n                        );\n\n                       this._resizeHint = this._resizeHint.add(hint);\n                    }\n                }\n\n                var format = \"t\";\n                var container = this.content;\n\n                if (multiday) {\n                    format = \"M/dd\";\n                    container = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                    if (!container.length) {\n                        container = this.content;\n                    }\n                }\n\n                this._resizeHint.appendTo(container);\n\n                this._resizeHint.find(\".k-label-top,.k-label-bottom\").text(\"\");\n\n                this._resizeHint.first().addClass(\"k-first\").find(\".k-label-top\").text(kendo.toString(kendo.timezone.toLocalDate(startTime), format));\n\n                this._resizeHint.last().addClass(\"k-last\").find(\".k-label-bottom\").text(kendo.toString(kendo.timezone.toLocalDate(endTime), format));\n            },\n\n            _updateMoveHint: function(event, groupIndex, distance) {\n                var multiday;\n\n                if (this.options.enforceAllDaySlot) {\n                    multiday = event.isMultiDay();\n                } else {\n                    multiday = event.isAllDay;\n                }\n\n                var group = this.groups[groupIndex];\n\n                var start = kendo.date.toUtcTime(event.start) + distance;\n\n                var end = start + event.duration();\n\n                var ranges = group.ranges(start, end, multiday, event.isAllDay);\n\n                start = kendo.timezone.toLocalDate(start);\n\n                end = kendo.timezone.toLocalDate(end);\n\n                this._removeMoveHint(event.uid);\n\n                if (!multiday &&\n                    getMilliseconds(end) < getMilliseconds(this.startTime()) &&\n                    (end < this._end().getTime()) &&\n                    getMilliseconds(end) !== 0 &&\n                    ranges.length > 1) {\n                        ranges.pop();\n                }\n\n                var eventHint = $();\n\n                for (var rangeIndex = 0; rangeIndex < ranges.length; rangeIndex++) {\n                    var range = ranges[rangeIndex];\n                    var startSlot = range.start;\n                    var hint;\n                    var css = {\n                        left: startSlot.offsetLeft + 2,\n                        top: startSlot.offsetTop\n                    };\n\n                    if (this._isGroupedByDate() && multiday) {\n                        for (var slotIdx = startSlot.index; slotIdx <= range.end.index; slotIdx++) {\n                            var slot = range.collection._slots[slotIdx];\n\n                            css.left = this._isRtl ? slot.clientWidth * 0.1 + slot.offsetLeft + 2 : slot.offsetLeft + 2;\n                            css.height = slot.offsetHeight;\n                            css.width = slot.clientWidth * 0.9 - 2;\n\n                            hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                            if (event.inverseColor) {\n                                hint.addClass(INVERSE_COLOR_CLASS);\n                            }\n\n                            this._appendMoveHint(hint, css);\n                            eventHint = eventHint.add(hint);\n                        }\n                    } else {\n                        if (this._isRtl) {\n                           css.left = startSlot.clientWidth * 0.1 + startSlot.offsetLeft + 2;\n                        }\n\n                        if (multiday) {\n                            css.width = range.innerWidth() - 2;\n                        } else {\n                            var rect = range.outerRect(start, end, this.options.snap);\n                            css.top = rect.top;\n                            css.height = rect.bottom - rect.top;\n                            css.width = startSlot.clientWidth * 0.9 - 2;\n                        }\n\n                        hint = this._createEventElement(event.clone({ start: start, end: end }), !multiday);\n\n                        if (event.inverseColor) {\n                            hint.addClass(INVERSE_COLOR_CLASS);\n                        }\n\n                        this._appendMoveHint(hint, css);\n                        eventHint = eventHint.add(hint);\n                    }\n                }\n\n                var content = this.content;\n\n                if (multiday) {\n                    content = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day) > div\");\n                    if (!content.length) {\n                        content = this.content;\n                    }\n                }\n\n                eventHint.appendTo(content);\n            },\n\n            _appendMoveHint: function(hint, css) {\n                hint.addClass(\"k-event-drag-hint\");\n\n                hint.css(css);\n\n                this._moveHint = this._moveHint.add(hint);\n           },\n\n           _slotByPosition: function(x, y) {\n               var slot, offset;\n\n               if (this._isVerticallyGrouped()) {\n                   offset = this.content.offset();\n                   y += this.content[0].scrollTop;\n                   x += this.content[0].scrollLeft;\n               } else {\n                   offset = this.element.find(\".k-scheduler-header-wrap:has(.k-scheduler-header-all-day)\").find(\">div\").offset();\n               }\n\n               if (offset) {\n                   x -= offset.left;\n                   y -= offset.top;\n               }\n\n               x = Math.ceil(x);\n               y = Math.ceil(y);\n\n               var group;\n               var groupIndex;\n\n               for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n\n                    slot = group.daySlotByPosition(x, y, this._isGroupedByDate());\n\n                    if (slot) {\n                        return slot;\n                    }\n               }\n\n               if (offset) {\n                   x += offset.left;\n                   y += offset.top;\n               }\n\n               offset = this.content.offset();\n\n               x -= offset.left;\n               y -= offset.top;\n\n               if (!this._isVerticallyGrouped()) {\n                   y += this.content[0].scrollTop;\n                   x += this.content[0].scrollLeft;\n               }\n\n               x = Math.ceil(x);\n               y = Math.ceil(y);\n\n               for (groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                    group = this.groups[groupIndex];\n\n                    slot = group.timeSlotByPosition(x, y);\n\n                    if (slot) {\n                        return slot;\n                    }\n               }\n\n               return null;\n           },\n\n           _groupCount: function() {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n\n                if (resources.length) {\n                    if (this._groupOrientation() === \"vertical\") {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length - 1);\n                        } else {\n                            return this._rowCountForLevel(resources.length - 1);\n                        }\n                    } else {\n                        if (byDate) {\n                            return this._columnCountForLevel(resources.length) / this._columnCountForLevel(0);\n                        } else {\n                              return this._columnCountForLevel(resources.length) / this._columnOffsetForResource(resources.length);\n                        }\n                    }\n                }\n                return 1;\n            },\n\n            _columnCountInResourceView: function() {\n                var resources = this.groupedResources;\n                var byDate = this._isGroupedByDate();\n\n                if (!resources.length || this._isVerticallyGrouped()) {\n                    if (byDate) {\n                         return this._rowCountForLevel(0);\n                    } else {\n                         return this._columnCountForLevel(0);\n                    }\n                }\n\n                if (byDate) {\n                    return this._columnCountForLevel(0);\n                } else {\n                    return this._columnOffsetForResource(resources.length);\n                }\n            },\n\n            _timeSlotGroups: function(groupCount, columnCount) {\n                var interval = this._timeSlotInterval();\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n                var tableRows = this.content.find(\"tr:not(.k-scheduler-header-all-day)\");\n                var group, time, rowIndex, cellIndex;\n                var rowCount = tableRows.length;\n\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    rowCount = Math.floor(rowCount / verticalViews);\n                }\n\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var cellMultiplier = 0;\n\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    } else {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    rowIndex = rowMultiplier * rowCount;\n\n                  while (rowIndex < (rowMultiplier + 1) * rowCount) {\n                        var cells = tableRows[rowIndex].children;\n\n                        if (rowIndex % rowCount === 0) {\n                            time = getMilliseconds(new Date(+this.startTime()));\n                        }\n\n                        var timeIndex = 0;\n                        if (byDate) {\n                            if (this._isVerticallyGrouped()) {\n                                for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                    group = this.groups[cellIndex];\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, groupIndex);\n                                }\n                            } else {\n                                group = this.groups[groupIndex];\n                                for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                    this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                    timeIndex++;\n                                }\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                                this._addTimeSlotGroup(group, cells, cellIndex, time, interval, timeIndex);\n                                 timeIndex++;\n                            }\n                        }\n\n                        time += interval;\n                        rowIndex ++;\n                    }\n                }\n            },\n\n            _addTimeSlotGroup: function(group, cells, cellIndex, time, interval, timeIndex) {\n                  var cell = cells[cellIndex];\n                  var collection = group.getTimeSlotCollection(timeIndex);\n                  var currentDate = this._dates[timeIndex];\n                  if (!currentDate || !cell) {\n                      return;\n                  }\n                  var currentTime = Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate());\n                  var start = currentTime + time;\n                  var end = start + interval;\n\n                  collection.addTimeSlot(cell, start, end);\n            },\n\n             _addDaySlotGroup: function(collection, cells, cellIndex, columnCount, cellCount) {\n                    var cell = cells[cellIndex];\n                    var start = this._dates[cellCount];\n                    if (!start) {\n                        return;\n                    }\n                    var currentTime = Date.UTC(start.getFullYear(), start.getMonth(), start.getDate());\n\n                    collection.addDaySlot(cell, currentTime, currentTime + kendo.date.MS_PER_DAY);\n            },\n\n            _daySlotGroups: function(groupCount, columnCount) {\n                var tableRows, cellIndex;\n                var verticalViews = groupCount;\n                var byDate = this._isGroupedByDate();\n\n                if (this._isVerticallyGrouped()) {\n                    if (byDate) {\n                        verticalViews = columnCount;\n                    }\n                    tableRows = this.element.find(\".k-scheduler-header-all-day\");\n                } else {\n                    tableRows = this.element.find(\".k-scheduler-header-all-day tr\");\n                }\n\n                for (var groupIndex = 0; groupIndex < verticalViews; groupIndex++) {\n                    var rowMultiplier = 0;\n                    var group, collection;\n\n                    if (this._isVerticallyGrouped()) {\n                        rowMultiplier = groupIndex;\n                    }\n\n                    var cells = tableRows[rowMultiplier].children;\n                    var cellMultiplier = 0;\n\n                    if (!this._isVerticallyGrouped()) {\n                        cellMultiplier = groupIndex;\n                    }\n\n                    var cellCount = 0;\n                    if (byDate) {\n                        if (this._isVerticallyGrouped()) {\n                            for (cellIndex = 0; cellIndex < groupCount; cellIndex++) {\n                                group = this.groups[cellIndex];\n                                collection = group.getDaySlotCollection(0);\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, groupIndex);\n                            }\n                        } else {\n                            group = this.groups[groupIndex];\n                            collection = group.getDaySlotCollection(0);\n                            for (cellIndex = cellMultiplier; cellIndex < groupCount * columnCount; cellIndex = cellIndex + groupCount) {\n                                this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                                cellCount++;\n                            }\n                        }\n                    } else {\n                        group = this.groups[groupIndex];\n                        collection = group.getDaySlotCollection(0);\n                        for (cellIndex = cellMultiplier * columnCount; cellIndex < (cellMultiplier + 1) * columnCount; cellIndex++) {\n\n                            this._addDaySlotGroup(collection, cells, cellIndex, columnCount, cellCount);\n                            cellCount++;\n                        }\n                    }\n                }\n            },\n\n            _groups: function() {\n                var groupCount = this._groupCount();\n                var columnCount = this._columnCountInResourceView();\n\n                this.groups = [];\n\n                for (var idx = 0; idx < groupCount; idx++) {\n                    var view = this._addResourceView(idx);\n\n                    for (var columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n                        if (this._dates[columnIndex]) {\n                            view.addTimeSlotCollection(this._dates[columnIndex], kendo.date.addDays(this._dates[columnIndex], 1));\n                        }\n                    }\n\n                    if (this.options.allDaySlot) {\n                        view.addDaySlotCollection(this._dates[0], kendo.date.addDays(this._dates[this._dates.length - 1], 1));\n                    }\n                }\n\n                this._timeSlotGroups(groupCount, columnCount);\n\n                if (this.options.allDaySlot) {\n                    this._daySlotGroups(groupCount, columnCount);\n                }\n            },\n\n            options: {\n                name: \"MultiDayView\",\n                selectedDateFormat: \"{0:D}\",\n                selectedShortDateFormat: \"{0:d}\",\n                selectedMobileDateFormat: \"{0:MMM} {0:dd} - {1:dd}\",\n                allDaySlot: true,\n                showWorkHours: false,\n                title: \"\",\n                startTime: kendo.date.today(),\n                endTime: kendo.date.today(),\n                minorTickCount: 2,\n                majorTick: 60,\n                majorTimeHeaderTemplate: function (ref) {\n                    var date = ref.date;\n\n                    return (\"<span>\" + (kendo.toString(date, 't')) + \"</span>\");\n        },\n                minorTimeHeaderTemplate: function () { return \"&#8203;\"; },\n                groupHeaderTemplate: function (ref) {\n                    var text = ref.text;\n\n                    return text;\n        },\n                slotTemplate: function () { return \"&nbsp;\"; },\n                allDaySlotTemplate: function () { return \"&nbsp;\"; },\n                eventTemplate: DAY_VIEW_EVENT_TEMPLATE,\n                allDayEventTemplate: DAY_VIEW_ALL_DAY_EVENT_TEMPLATE,\n                dateHeaderTemplate: DATA_HEADER_TEMPLATE,\n                editable: true,\n                workDayStart: new Date(1980, 1, 1, 8, 0, 0),\n                workDayEnd: new Date(1980, 1, 1, 17, 0, 0),\n                workWeekStart: 1,\n                workWeekEnd: 5,\n                footer: {\n                    command: \"workDay\"\n                },\n                messages: {\n                    allDay: \"all day\",\n                    showFullDay: \"Show full day\",\n                    showWorkDay: \"Show business hours\"\n                },\n                currentTimeMarker: {\n                     updateInterval: 10000,\n                     useLocalTimezone: true\n                },\n                // a hidden option that provides us a fallback to the previous behaviour\n                // e.g. all events of 24 hours or more will be rendered in the allDaySlot\n                enforceAllDaySlot: false\n            },\n\n            events: [\"remove\", \"add\", \"edit\"],\n\n            _templates: function() {\n                var options = this.options,\n                    settings = extend({}, kendo.Template, options.templateSettings);\n\n                this.allDayEventTemplate = kendo.template(ALLDAY_EVENT_WRAPPER_TEMPLATE);\n                this.eventTemplate = kendo.template(EVENT_WRAPPER_TEMPLATE);\n\n                this.majorTimeHeaderTemplate = kendo.template(options.majorTimeHeaderTemplate, settings);\n                this.minorTimeHeaderTemplate = kendo.template(options.minorTimeHeaderTemplate, settings);\n                this.dateHeaderTemplate = kendo.template(options.dateHeaderTemplate, settings);\n                this.slotTemplate = kendo.template(options.slotTemplate, settings);\n                this.allDaySlotTemplate = kendo.template(options.allDaySlotTemplate, settings);\n                this.groupHeaderTemplate = kendo.template(options.groupHeaderTemplate, settings);\n            },\n\n            _editable: function() {\n                if (this.options.editable) {\n                    if (this._isMobile()) {\n                        this._touchEditable();\n                    } else {\n                        this._mouseEditable();\n                    }\n                }\n            },\n\n            _mouseEditable: function() {\n                var that = this;\n                that.element.on(\"click\" + NS, \".k-event a:has(.k-i-x),.k-event a:has(.k-svg-i-x)\", function(e) {\n                    that.trigger(\"remove\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                    e.preventDefault();\n                });\n\n                if (that.options.editable.create !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-scheduler-content > table td\", function(e) {\n                        if (!$(this).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                            var slot = that._slotByPosition(e.pageX, e.pageY);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    }).on(\"dblclick\" + NS, \".k-scheduler-header-all-day td\", function(e) {\n                        var slot = that._slotByPosition(e.pageX, e.pageY);\n                        if (slot) {\n                            var resourceInfo = that._resourceBySlot(slot);\n                            that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                        }\n                        e.preventDefault();\n                    });\n                }\n\n                if (that.options.editable.update !== false) {\n                    that.element.on(\"dblclick\" + NS, \".k-event\", function(e) {\n                        that.trigger(\"edit\", { uid: $(this).closest(\".k-event\").attr(kendo.attr(\"uid\")) });\n                        e.preventDefault();\n                    });\n                }\n            },\n\n            _touchEditable: function() {\n                var that = this;\n                var threshold = 0;\n\n                if (kendo.support.mobileOS.android) {\n                    threshold = 5;\n                }\n\n                if (that.options.editable.create !== false) {\n                    that._addUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        filter: \".k-scheduler-content td\",\n                        useClickAsTap: !kendo.support.browser.edge,\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            if (!$(e.target).parent().hasClass(\"k-scheduler-header-all-day\")) {\n                                var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                                var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                                var slot = that._slotByPosition(x, y);\n\n                                if (slot) {\n                                    var resourceInfo = that._resourceBySlot(slot);\n                                    that.trigger(\"add\", { eventInfo: extend({ start: slot.startDate(), end: slot.endDate() }, resourceInfo) });\n                                }\n\n                                e.preventDefault();\n                            }\n                        }\n                    });\n\n                    that._allDayUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: \".k-scheduler-header-all-day td\",\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var x = e.x.location !== undefined$1 ? e.x.location : e.x;\n                            var y = e.y.location !== undefined$1 ? e.y.location : e.y;\n                            var slot = that._slotByPosition(x, y);\n\n                            if (slot) {\n                                var resourceInfo = that._resourceBySlot(slot);\n                                that.trigger(\"add\", { eventInfo: extend({}, { isAllDay: true, start: kendo.date.getDate(slot.startDate()), end: kendo.date.getDate(slot.startDate()) }, resourceInfo) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    });\n                }\n\n                if (that.options.editable.update !== false) {\n                    that._editUserEvents = new kendo.UserEvents(that.element, {\n                        threshold: threshold,\n                        useClickAsTap: !kendo.support.browser.edge,\n                        filter: \".k-event\",\n                        tap: function(e) {\n                            if (that._scrolling) {\n                                return;\n                            }\n                            var eventElement = $(e.target).closest(\".k-event\");\n                            var touchElement = $(e.touch.initialTouch);\n\n                            if (touchElement.is(\".k-i-x,.k-svg-i-x\")) {\n                                that.trigger(\"remove\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                            } else if (!eventElement.hasClass(\"k-event-active\")) {\n                                that.trigger(\"edit\", { uid: eventElement.attr(kendo.attr(\"uid\")) });\n                            }\n\n                            e.preventDefault();\n                        }\n                    });\n                }\n            },\n\n            _layout: function(dates) {\n                var columns = [];\n                var rows = [];\n                var options = this.options;\n                var that = this;\n                var byDate = that._isGroupedByDate();\n\n                for (var idx = 0; idx < dates.length; idx++) {\n                    var column = {};\n\n                    column.text = that.dateHeaderTemplate({ date: dates[idx], isMobile: that._isMobile() });\n\n                    if (kendo.date.isToday(dates[idx])) {\n                        column.className = \"k-today\";\n                    }\n\n                    columns.push(column);\n                }\n\n                var resources = this.groupedResources;\n\n                if (options.allDaySlot) {\n                    rows.push({\n                        text: options.messages.allDay, allDay: true,\n                        cellContent: function(idx) {\n                            var groupIndex = idx;\n\n                            idx = resources.length && that._groupOrientation() !== \"vertical\" ? idx % dates.length : idx;\n\n                            return that.allDaySlotTemplate({ date: dates[idx], resources: function() {\n                                    return that._resourceBySlot({ groupIndex: groupIndex });\n                                }\n                            });\n                        }\n                    });\n                }\n\n                this._forTimeRange(this.startTime(), this.endTime(), function(date, majorTick, middleRow, lastSlotRow) {\n                    var template = majorTick ? that.majorTimeHeaderTemplate : that.minorTimeHeaderTemplate;\n\n                    var row = {\n                        text: template({ date: date }),\n                        className: lastSlotRow ? \"k-slot-cell\" : \"\"\n                    };\n\n                    rows.push(row);\n                });\n\n\n                if (resources.length) {\n                    if (this._groupOrientation() === \"vertical\") {\n                        if (byDate) {\n                            rows = this._createDateLayout(columns, rows);\n                            columns = this._createColumnsLayout(resources, null, this.groupHeaderTemplate);\n                        } else {\n                            rows = this._createRowsLayout(resources, rows, this.groupHeaderTemplate);\n                        }\n                    } else {\n                          if (byDate) {\n                             columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate, columns);\n                          } else {\n                             columns = this._createColumnsLayout(resources, columns, this.groupHeaderTemplate);\n                          }\n                    }\n                }\n\n                return {\n                    columns: columns,\n                    rows: rows\n                };\n            },\n\n            toggleFullDay: function() {\n                var options = this.options;\n\n                this.trigger(\"navigate\", { view: this.name || options.name, date: options.date, isWorkDay: !options.showWorkHours });\n            },\n\n            _footerItems: function() {\n                var that = this,\n                    items = [],\n                    options = this.options,\n                    command = options.footer.command;\n\n                if (that._isMobile()) {\n                    items.push(that._defaultTools.todayMobile);\n                }\n\n                if (command && command === \"workDay\") {\n                    if (that._isMobile()) {\n                        items.push(that._defaultTools.fulldayMobile);\n                    } else {\n                        items.push(that._defaultTools.fulldayDesktop);\n                    }\n                }\n\n                return items;\n            },\n\n            _forTimeRange: function(min, max, action, after) {\n                min = toInvariantTime(min); //convert the date to 1/2/1980 and sets the time\n                max = toInvariantTime(max);\n\n                var that = this,\n                    msMin = getMilliseconds(min),\n                    msMax = getMilliseconds(max),\n                    minorTickCount = that.options.minorTickCount,\n                    msMajorInterval = that.options.majorTick * MS_PER_MINUTE,\n                    msInterval = msMajorInterval / minorTickCount || 1,\n                    start = new Date(+min),\n                    startDay = start.getDate(),\n                    msStart,\n                    idx = 0, length,\n                    html = \"\";\n\n                length = MS_PER_DAY / msInterval;\n\n                if (msMin != msMax) {\n                    if (msMin > msMax) {\n                        msMax += MS_PER_DAY;\n                    }\n\n                    length = ((msMax - msMin) / msInterval);\n                }\n\n                length = Math.round(length);\n\n                for (; idx < length; idx++) {\n                    var majorTickDivider = idx % (msMajorInterval / msInterval),\n                        isMajorTickRow = majorTickDivider === 0,\n                        isMiddleRow = majorTickDivider < minorTickCount - 1,\n                        isLastSlotRow = majorTickDivider === minorTickCount - 1;\n\n                    html += action(start, isMajorTickRow, isMiddleRow, isLastSlotRow);\n\n                    setTime(start, msInterval, false);\n                }\n\n                if (msMax) {\n                    msStart = getMilliseconds(start);\n                    if (startDay < start.getDate()) {\n                        msStart += MS_PER_DAY;\n                    }\n\n                    if (msStart > msMax) {\n                        start = new Date(+max);\n                    }\n                }\n\n                if (after) {\n                    html += after(start);\n                }\n\n                return html;\n            },\n\n            _content: function(dates) {\n                var that = this;\n                var html = '';\n\n                html += '<tbody>';\n\n                html += that._renderRows(dates, that.rowLevels, that.columnLevels);\n\n                html += '</tbody>';\n\n                this.content.find(\"table\").append(html);\n            },\n\n            _virtualContent: function(rowLevels, columnLevels) {\n                var that = this;\n                var html = '';\n                var dates = that._dates;\n\n                html += that._renderRows(dates, rowLevels, columnLevels);\n\n                that.content.find(\"table tbody\").append(html);\n            },\n\n            _renderRows: function(dates, rowLevels, columnLevels) {\n                var that = this;\n                var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n                var byDate = that._isGroupedByDate();\n                var dateID = 0;\n                var columnCount = dates.length;\n                var options = that.options;\n                var start = that.startTime();\n                var end = this.endTime();\n                var groupsCount = 1;\n                var rowCount = 1;\n                var resources = this.groupedResources;\n                var html = '';\n\n                if (resources.length) {\n                    var levels = that._recalculateLevels(rowLevels, columnLevels);\n\n                    rowCount = levels.rowCount;\n                    groupsCount = levels.groupsCount;\n                }\n\n                var appendRow = function(date, majorTick, middleRow) {\n                    var content = \"\";\n                    var groupIdx = 0;\n                    var idx, length;\n\n                    content = '<tr' + (middleRow ? ' class=\"k-middle-row\"' : \"\") + '>';\n\n                    if (byDate) {\n                        for (idx = 0, length = columnCount; idx < length; idx++) {\n                            for (groupIdx = 0; groupIdx < groupsCount; groupIdx++) {\n                                var dateIndex = idx;\n                                if (isVerticalGroupped) {\n                                    dateIndex = dateID;\n                                }\n                                content = that._addCellsToContent(content, dates, date, dateIndex, groupIdx, rowIdx);\n\n                            }\n                            if (isVerticalGroupped) {\n\n                                break;\n                            }\n                        }\n                    } else {\n                         for (; groupIdx < groupsCount; groupIdx++) {\n                            for (idx = 0, length = columnCount; idx < length; idx++) {\n                                content = that._addCellsToContent(content, dates, date, idx, groupIdx, rowIdx);\n                            }\n                         }\n                    }\n\n                    content += \"</tr>\";\n\n                    return content;\n                };\n\n                for (var rowIdx = 0; rowIdx < rowCount; rowIdx++) {\n                    html += options.allDaySlot && isVerticalGroupped ? this._allDayVerticalGroupRow(dates, rowIdx, groupsCount, dateID) : \"\";\n\n                    html += this._forTimeRange(start, end, appendRow);\n                    if (isVerticalGroupped) {\n                            dateID++;\n                    }\n                }\n\n                return html;\n            },\n\n            _recalculateLevels: function(rowLevels, columnLevels) {\n                var that = this;\n                var byDate = that._isGroupedByDate();\n                var isVerticalGroupped = that._groupOrientation() === \"vertical\";\n                var groupsCount = 1;\n                var rowCount = 1;\n\n                if (isVerticalGroupped) {\n                    rowCount = that._rowCountForLevel(rowLevels.length - 2, rowLevels);\n\n                    if (byDate) {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 1);\n                    }\n                } else {\n                    if (byDate) {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 1) / this._columnCountForLevel(0);\n                    } else {\n                         groupsCount = that._columnCountForLevel(columnLevels.length - 2);\n                    }\n                }\n\n                return {\n                    rowCount: rowCount,\n                    groupsCount: groupsCount\n                };\n            },\n\n            _allDayVerticalGroupRow: function(dates, groupIndex, groupsCount, dateID) {\n                var that = this;\n                var result = '<tr class=\"k-scheduler-header-all-day\">';\n                var byDate = that._isGroupedByDate();\n                var dateGroupIndex = byDate ? 0 : groupIndex;\n                var allDaySlotTemplate = that.allDaySlotTemplate;\n\n                var resources = function() {\n                    return that._resourceBySlot({ groupIndex: dateGroupIndex });\n                };\n\n                if (byDate) {\n                    for (; dateGroupIndex < groupsCount; dateGroupIndex++) {\n                        result += \"<td>\" + allDaySlotTemplate({ date: dates[dateID], resources: resources }) + \"</td>\";\n                    }\n                } else {\n                    for (var idx = 0; idx < dates.length; idx++) {\n                        result += \"<td>\" + allDaySlotTemplate({ date: dates[idx], resources: resources }) + \"</td>\";\n                    }\n                }\n\n                return result + \"</tr>\";\n            },\n\n            _addCellsToContent: function(content, dates, date, idx, groupIdx, rowIdx) {\n                var that = this;\n                var classes = \"\";\n                var tmplDate;\n                var slotTemplate = this.slotTemplate;\n                var isVerticalGroupped = this._groupOrientation() === \"vertical\";\n                var resources = function(groupIndex) {\n                    return function() {\n                        return that._resourceBySlot({ groupIndex: groupIndex });\n                    };\n                };\n\n                if (kendo.date.isToday(dates[idx])) {\n                    classes += \"k-today\";\n                }\n\n                if (kendo.date.getMilliseconds(date) < kendo.date.getMilliseconds(this.options.workDayStart) ||\n                    kendo.date.getMilliseconds(date) >= kendo.date.getMilliseconds(this.options.workDayEnd) ||\n                    !this._isWorkDay(dates[idx])) {\n                    classes += \" k-nonwork-hour\";\n                }\n\n                content += '<td' + (classes !== \"\" ? ' class=\"' + classes + '\"' : \"\") + \">\";\n                tmplDate = kendo.date.getDate(dates[idx]);\n                kendo.date.setTime(tmplDate, kendo.date.getMilliseconds(date));\n\n                content += slotTemplate({ date: tmplDate, resources: resources(isVerticalGroupped && !that._isGroupedByDate() ? rowIdx : groupIdx) });\n                content += \"</td>\";\n                return content;\n            },\n\n            _isWorkDay: function(date) {\n                var day = date.getDay();\n                var workDays = this._workDays;\n\n                for (var i = 0; i < workDays.length; i++) {\n                    if (workDays[i] === day) {\n                        return true;\n                    }\n                }\n                return false;\n            },\n\n            _render: function(dates) {\n                var that = this;\n\n                dates = dates || [];\n\n                this._dates = dates;\n\n                this._startDate = dates[0];\n\n                this._endDate = dates[(dates.length - 1) || 0];\n\n                this.createLayout(this._layout(dates));\n\n                this._content(dates);\n\n                this._footer();\n\n                this.refreshLayout();\n\n                if (this._isVirtualized()) {\n                    this._tryRenderContent();\n                }\n\n                var allDayHeader = this.element.find(\".k-scheduler-header-all-day td\");\n\n                if (allDayHeader.length) {\n                    this._allDayHeaderHeight = allDayHeader.first()[0].clientHeight;\n                }\n\n                that.element.on(\"click\" + NS, \".k-nav-day\", function(e) {\n                    var th = $(e.currentTarget).closest(\"th\");\n                    var offset = th.offset();\n                    var additioanlWidth = 0;\n                    var additionalHeight = outerHeight(th);\n\n                    if (that._isGroupedByDate()) {\n                        if (that._isVerticallyGrouped()) {\n                            additioanlWidth = outerWidth(that.times);\n                            additionalHeight = 0;\n                        } else {\n                            additionalHeight = outerHeight(that.datesHeader);\n                        }\n                    }\n\n                    var slot = that._slotByPosition(offset.left + additioanlWidth, offset.top + additionalHeight);\n\n                    that.trigger(\"navigate\", { view: \"day\", date: slot.startDate() });\n                });\n            },\n\n            startTime: function() {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayStart : options.startTime;\n            },\n\n            endTime: function() {\n                var options = this.options;\n                return options.showWorkHours ? options.workDayEnd : options.endTime;\n            },\n\n            startDate: function() {\n                return this._startDate;\n            },\n\n            endDate: function() {\n                return this._endDate;\n            },\n\n            _end: function(isAllDay) {\n                var time = getMilliseconds(this.endTime()) || MS_PER_DAY;\n\n                if (isAllDay) {\n                    time = 0;\n                }\n\n                return new Date(this._endDate.getTime() + time);\n            },\n\n            nextDate: function() {\n                return kendo.date.nextDay(this.endDate());\n            },\n\n            previousDate: function() {\n                return kendo.date.previousDay(this.startDate());\n            },\n\n            calculateDateRange: function() {\n                this._render([this.options.date]);\n            },\n\n            destroy: function() {\n                var that = this;\n\n                if (that._currentTimeUpdateTimer) {\n                    clearInterval(that._currentTimeUpdateTimer);\n                }\n\n                if (that.datesHeader) {\n                    that.datesHeader.off(NS);\n                }\n\n                if (that.element) {\n                    that.element.off(NS);\n                }\n\n                SchedulerView.fn.destroy.call(this);\n\n                if (this._isMobile() && that.options.editable) {\n                    if (that.options.editable.create !== false) {\n                        that._addUserEvents.destroy();\n                        that._allDayUserEvents.destroy();\n                    }\n\n                    if (that.options.editable.update !== false) {\n                        that._editUserEvents.destroy();\n                    }\n                }\n            },\n\n            inRange: function(options) {\n                var inRange = SchedulerView.fn.inRange.call(this, options);\n\n                if (options.isAllDay) {\n                    return inRange;\n                }\n\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime()) || kendo.date.MS_PER_DAY;\n\n                var start = getMilliseconds(options.start);\n                var end = getMilliseconds(options.end) || kendo.date.MS_PER_DAY;\n\n                return inRange && startTime <= start && end <= endTime;\n            },\n\n            selectionByElement: function(cell) {\n                var offset = cell.offset();\n                // The magical number 5 is to buffer properly the height of the cell for all browsers\n                var height = Math.round(cell.innerHeight()) - 5;\n\n                return this._slotByPosition(offset.left, offset.top + height);\n            },\n\n            _timeSlotInterval: function() {\n                var options = this.options;\n                return (options.majorTick / options.minorTickCount) * MS_PER_MINUTE;\n            },\n\n            _timeSlotIndex: function(date) {\n                var options = this.options;\n                var eventStartTime = getMilliseconds(date);\n                var startTime = getMilliseconds(this.startTime());\n                var timeSlotInterval = ((options.majorTick / options.minorTickCount) * MS_PER_MINUTE);\n\n                return (eventStartTime - startTime) / (timeSlotInterval);\n            },\n\n            _slotIndex: function(date, multiday) {\n                if (multiday) {\n                    return this._dateSlotIndex(date);\n                }\n\n                return this._timeSlotIndex(date);\n            },\n\n            _dateSlotIndex: function(date, overlaps) {\n                var idx;\n                var length;\n                var slots = this._dates || [];\n                var slotStart;\n                var slotEnd;\n                var offset = 1;\n\n                for (idx = 0, length = slots.length; idx < length; idx++) {\n                    slotStart = kendo.date.getDate(slots[idx]);\n                    slotEnd = new Date(kendo.date.getDate(slots[idx]).getTime() + MS_PER_DAY - (overlaps ? 0 : 1));\n\n                    if (isInDateRange(date, slotStart, slotEnd)) {\n                        return idx * offset;\n                    }\n                }\n                return -1;\n            },\n\n            _positionAllDayEvent: function(element, slotRange) {\n                var slotWidth = slotRange.innerWidth();\n                var startIndex = slotRange.start.index;\n                var endIndex = slotRange.end.index;\n\n                var allDayEvents = SchedulerView.collidingEvents(slotRange.events(), startIndex, endIndex);\n\n                var currentColumnCount = this._headerColumnCount || 0;\n\n                var leftOffset = 2;\n\n                var rightOffset = startIndex !== endIndex ? 3 : 2;\n\n                var eventHeight = this._allDayHeaderHeight;\n\n                var start = slotRange.startSlot();\n\n                element\n                    .css({\n                        left: start.offsetLeft + leftOffset,\n                        width: slotWidth - rightOffset\n                    });\n\n                slotRange.addEvent({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n                allDayEvents.push({ slotIndex: startIndex, start: startIndex, end: endIndex, element: element });\n\n                var rows = SchedulerView.createRows(allDayEvents);\n\n                if (rows.length && rows.length > currentColumnCount) {\n                    this._headerColumnCount = rows.length;\n                }\n\n                var top = slotRange.start.offsetTop;\n\n                for (var idx = 0, length = rows.length; idx < length; idx++) {\n                    var rowEvents = rows[idx].events;\n\n                    for (var j = 0, eventLength = rowEvents.length; j < eventLength; j++) {\n                        $(rowEvents[j].element).css({\n                            top: top + idx * eventHeight,\n                            // apply calculated height.\n                            // -2 is to match normal events\n                            height: eventHeight - 2\n                        });\n                    }\n                }\n            },\n\n            _arrangeColumns: function(element, top, height, slotRange) {\n                var startSlot = slotRange.start;\n\n                element = { element: element, slotIndex: startSlot.index, start: top, end: top + height };\n\n                var columns,\n                    slotWidth = startSlot.clientWidth,\n                    eventRightOffset = slotWidth * 0.10,\n                    columnEvents,\n                    eventElements = slotRange.events(),\n                    slotEvents = SchedulerView.collidingEvents(eventElements, element.start, element.end),\n                    tableEl = this.table.find(\".k-scheduler-content .k-scheduler-table\")[0],\n                    contentEl = this.table.find(\".k-scheduler-content\")[0];\n\n                slotRange.addEvent(element);\n\n                slotEvents.push(element);\n\n                columns = SchedulerView.createColumns(slotEvents);\n\n                var columnWidth = (slotWidth - eventRightOffset) / columns.length;\n\n                for (var idx = 0, length = columns.length; idx < length; idx++) {\n                    columnEvents = columns[idx].events;\n\n                    for (var j = 0, eventLength = columnEvents.length; j < eventLength; j++) {\n                        var calculatedWidth = columnWidth - 2;\n                        columnEvents[j].element[0].style.width = (calculatedWidth > 0 ? calculatedWidth : columnWidth) + \"px\";\n\n                        if (this._isRtl && contentEl.clientWidth < contentEl.scrollWidth) {\n                            // RTL mobile rendering with horizontal scroll\n                            columnEvents[j].element[0].style.left = eventRightOffset +\n                                startSlot.offsetLeft +\n                                idx * columnWidth -\n                                (tableEl.clientWidth - contentEl.clientWidth) +\n                                \"px\";\n                        } else {\n                            columnEvents[j].element[0].style.left = (this._isRtl ? eventRightOffset : 0) + startSlot.offsetLeft + idx * columnWidth + 2 + \"px\";\n                        }\n                    }\n                }\n            },\n\n            _positionEvent: function(event, element, slotRange) {\n                var start = event._startTime || event.start;\n                var end = event._endTime || event.end;\n                var borderWidths = kendo.getComputedStyles(slotRange.start.element, [\"border-top-width\", \"border-bottom-width\"]);\n\n                var rect = slotRange.innerRect(start, end, false);\n\n                var height = rect.bottom - rect.top -\n                                parseFloat(borderWidths[\"border-top-width\"]) -\n                                parseFloat(borderWidths[\"border-bottom-width\"]);\n\n                if (height < 0) {\n                    height = 0;\n                }\n\n                element.css( {\n                    top: rect.top,\n                    height: height\n                } );\n\n                this._arrangeColumns(element, rect.top, element[0].clientHeight, slotRange);\n           },\n\n           _createEventElement: function(event, isOneDayEvent, head, tail) {\n                var template = isOneDayEvent ? this.eventTemplate : this.allDayEventTemplate;\n                var options = this.options;\n                var editable = options.editable;\n                var isMobile = this._isMobile();\n                var showDelete = editable && editable.destroy !== false && !isMobile;\n                var resizable = editable && editable.resize !== false;\n                var startDate = getDate(this.startDate());\n                var endDate = getDate(this.endDate());\n                var startTime = getMilliseconds(this.startTime());\n                var endTime = getMilliseconds(this.endTime());\n                var eventStartTime = event._time(\"start\");\n                var eventEndTime = event._time(\"end\");\n                var eventTemplate = isOneDayEvent ? options.eventTemplate : options.allDayEventTemplate;\n                var middle;\n\n                if (startTime >= endTime) {\n                    endTime = getMilliseconds(new Date(this.endTime().getTime() + MS_PER_DAY - 1));\n                }\n\n                if (!isOneDayEvent && !event.isAllDay) {\n                    endDate = new Date(endDate.getTime() + MS_PER_DAY);\n                }\n\n                var eventStartDate = event.start;\n                var eventEndDate = event.end;\n\n                if (event.isAllDay) {\n                    eventEndDate = getDate(event.end);\n                }\n                if ((!isInDateRange(getDate(eventStartDate), startDate, endDate) &&\n                    !isInDateRange(eventEndDate, startDate, endDate)) ||\n                    (isOneDayEvent &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventStartTime < startTime || eventStartTime >= endTime) &&\n                        (eventEndTime > endTime || eventEndTime <= startTime ))) {\n\n                    middle = true;\n                } else if (getDate(eventStartDate) < startDate ||\n                    (isOneDayEvent &&\n                        eventStartTime !== 0 &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventStartTime < startTime || eventStartTime >= endTime))) {\n\n                    tail = true;\n                } else if ((eventEndDate > endDate && !isOneDayEvent) ||\n                    (isOneDayEvent &&\n                        eventEndTime !== 0 &&\n                        event.start.getTime() !== event.end.getTime() &&\n                        (eventEndTime > endTime || eventEndTime <= startTime))) {\n\n                    head = true;\n                }\n\n                var resources = this.eventResources(event);\n\n               if (event._startTime && eventStartTime !== kendo.date.getMilliseconds(event.start)) {\n                    eventStartDate = new Date(eventStartTime);\n                    eventStartDate = kendo.timezone.apply(eventStartDate, \"Etc/UTC\");\n                }\n\n               if (event._endTime && eventEndTime !== kendo.date.getMilliseconds(event.end)) {\n                    eventEndDate = new Date(eventEndTime);\n                    eventEndDate = kendo.timezone.apply(eventEndDate, \"Etc/UTC\");\n                }\n\n                var data = extend({}, {\n                    ns: kendo.ns,\n                    resizable: resizable,\n                    showDelete: showDelete,\n                    middle: middle,\n                    head: head,\n                    tail: tail,\n                    singleDay: this._dates.length == 1,\n                    resources: resources,\n                    inverseColor: false,\n                    messages: options.messages,\n                    ariaLabel: this._formatEventAriaLabel(event.title, eventStartDate, eventEndDate, event.isAllDay),\n                    template: eventTemplate\n                }, event, {\n                    start: eventStartDate,\n                    end: eventEndDate\n                });\n\n                var element = $(template(data));\n\n                this.angular(\"compile\", function() {\n                    return {\n                        elements: element,\n                        data: [ { dataItem: data } ]\n                    };\n                });\n\n                return element;\n            },\n\n            _isInTimeSlot: function(event) {\n                var slotStartTime = this.startTime(),\n                    slotEndTime = this.endTime(),\n                    startTime = event._startTime || event.start,\n                    endTime = event._endTime || event.end;\n\n                if (getMilliseconds(slotEndTime) === getMilliseconds(kendo.date.getDate(slotEndTime))) {\n                    slotEndTime = kendo.date.getDate(slotEndTime);\n                    setTime(slotEndTime, MS_PER_DAY - 1);\n                }\n\n                if (event._date(\"end\") > event._date(\"start\")) {\n                   endTime = +event._date(\"end\") + (MS_PER_DAY - 1);\n                }\n\n                endTime = event._endTime ? endTime - event._date(\"end\") : getMilliseconds(new Date(endTime));\n                startTime = event._startTime ? startTime - event._date(\"start\") : getMilliseconds(new Date(startTime));\n\n                slotEndTime = getMilliseconds(slotEndTime);\n                slotStartTime = getMilliseconds(slotStartTime);\n\n                if (slotStartTime === startTime && startTime === endTime) {\n                    return true;\n                }\n\n                var overlaps = startTime !== slotEndTime;\n\n                return isInTimeRange(startTime, slotStartTime, slotEndTime, overlaps) ||\n                    isInTimeRange(endTime, slotStartTime, slotEndTime, overlaps) ||\n                    isInTimeRange(slotStartTime, startTime, endTime) ||\n                    isInTimeRange(slotEndTime, startTime, endTime) ||\n                    (event.end.getDate() > event.start.getDate() && endTime > slotStartTime);\n            },\n\n            _isInDateSlot: function(event) {\n                var groups = this.groups[0];\n                var slotStart = groups.firstSlot().start;\n                var slotEnd = groups.lastSlot().end - 1;\n\n                var startTime = kendo.date.toUtcTime(event.start);\n                var endTime = kendo.date.toUtcTime(event.end);\n\n                return (isInDateRange(startTime, slotStart, slotEnd) ||\n                    isInDateRange(endTime, slotStart, slotEnd) ||\n                    isInDateRange(slotStart, startTime, endTime) ||\n                    isInDateRange(slotEnd, startTime, endTime)) &&\n                    (!isInDateRange(endTime, slotStart, slotStart) || isInDateRange(endTime, startTime, startTime) || event.isAllDay );\n            },\n\n            _updateAllDayHeaderHeight: function(height) {\n                if (this._height !== height) {\n                    this._height = height;\n\n                    var allDaySlots = this.element.find(\".k-scheduler-header-all-day td\");\n\n                    if (allDaySlots.length) {\n                        allDaySlots.parent()\n                            .add(this.element.find(\".k-scheduler-times-all-day\").parent())\n                            .height(height);\n\n                        for (var groupIndex = 0; groupIndex < this.groups.length; groupIndex++) {\n                            this.groups[groupIndex].refresh();\n                        }\n                    }\n                }\n            },\n\n            _renderEvents: function(events, groupIndex) {\n                var allDayEventContainer = this.datesHeader.find(\".k-scheduler-header-wrap > div\");\n                var byDate = this._isGroupedByDate();\n                var event;\n\n                var idx;\n                var length;\n\n                for (idx = 0, length = events.length; idx < length; idx++) {\n                    event = events[idx];\n\n                    if (this._isInDateSlot(event)) {\n                        var isMultiDayEvent, container, element, ranges, range, start, end, group;\n\n                        if (this.options.enforceAllDaySlot) {\n                            isMultiDayEvent = event.isAllDay || event.duration() >= MS_PER_DAY;\n                        } else {\n                            isMultiDayEvent = event.isAllDay;\n                        }\n\n                        container = isMultiDayEvent && !this._isVerticallyGrouped() ? allDayEventContainer : this.content;\n\n                        if (!isMultiDayEvent) {\n                            if (this._isInTimeSlot(event)) {\n                                group = this.groups[groupIndex];\n\n                                if (!group) {\n                                    continue;\n                                }\n\n                                if (!group._continuousEvents) {\n                                    group._continuousEvents = [];\n                                }\n\n                                ranges = group.slotRanges(event);\n\n                                var rangeCount = ranges.length;\n\n                                for (var rangeIndex = 0; rangeIndex < rangeCount; rangeIndex++) {\n                                    range = ranges[rangeIndex];\n                                    start = event.start;\n                                    end = event.end;\n\n                                    if (rangeCount > 1) {\n                                        if (rangeIndex === 0) {\n                                            end = range.end.endDate();\n                                        } else if (rangeIndex == rangeCount - 1) {\n                                            start = range.start.startDate();\n                                        } else {\n                                            start = range.start.startDate();\n                                            end = range.end.endDate();\n                                        }\n                                    }\n\n                                    var occurrence = event.clone({ start: start, end: end, _startTime: event._startTime, _endTime: event.endTime });\n\n                                    if (this._isInTimeSlot(occurrence)) {\n                                        var head = range.head;\n\n                                        element = this._createEventElement(event, !isMultiDayEvent, head, range.tail);\n\n                                        element.appendTo(container);\n\n                                        this._inverseEventColor(element);\n\n                                        this._positionEvent(occurrence, element, range);\n\n                                        addContinuousEvent(group, range, element, false);\n                                    }\n                                }\n                            }\n\n                        } else if (this.options.allDaySlot) {\n                            group = this.groups[groupIndex];\n\n                            if (!group) {\n                                continue;\n                            }\n\n                            if (!group._continuousEvents) {\n                                group._continuousEvents = [];\n                            }\n\n                            ranges = group.slotRanges(event);\n\n                            if (ranges.length) {\n                                range = ranges[0];\n                                var startIndex = range.start.index;\n                                var endIndex = range.end.index;\n\n                                if (byDate && startIndex !== endIndex) {\n                                    start = range.start.start;\n                                    end = range.end.end;\n                                    var newStart = start;\n                                    var newEnd = start;\n\n                                    for (var i = range.start.index; i <= range.end.index; i++) {\n                                        element = this._createEventElement(event, !isMultiDayEvent, i !== endIndex, i !== startIndex);\n\n                                        var dateRange = group.daySlotRanges(newStart, newEnd, true)[0];\n                                        newStart = newEnd += kendo.date.MS_PER_DAY;\n\n                                        this._positionAllDayEvent(element, dateRange);\n\n                                        addContinuousEvent(group, dateRange, element, true);\n\n                                        element.appendTo(container);\n\n                                        this._inverseEventColor(element);\n                                    }\n                                } else {\n                                    element = this._createEventElement(event, !isMultiDayEvent);\n\n                                    this._positionAllDayEvent(element, ranges[0]);\n\n                                    addContinuousEvent(group, ranges[0], element, true);\n\n                                    element.appendTo(container);\n\n                                    this._inverseEventColor(element);\n                                }\n                            }\n                        }\n                    }\n                }\n            },\n\n            render: function(events) {\n                var that = this;\n\n                this._headerColumnCount = 0;\n\n                this._cachedEvents = events;\n\n                this._groups();\n\n                this.element.find(\".k-event\").remove();\n\n                events = new kendo.data.Query(events)\n                    .sort([{ field: \"start\", dir: \"asc\" },{ field: \"end\", dir: \"desc\" }])\n                    .toArray();\n\n                var eventsByResource = [];\n\n                this._eventsByResource(events, this.groupedResources, eventsByResource);\n\n                var eventsPerDate = $.map(this._dates, function(date) {\n                    return Math.max.apply(null,\n                        $.map(eventsByResource, function(events) {\n                            return $.grep(events, function(event) {\n                                if (that.options.enforceAllDaySlot) {\n                                    return event.isMultiDay() && isInDateRange(date, getDate(event.start), getDate(event.end));\n                                } else {\n                                    return event.isAllDay && isInDateRange(date, getDate(event.start), getDate(event.end));\n                                }\n                            }).length;\n                        })\n                    );\n                });\n\n                var height = Math.max.apply(null, eventsPerDate);\n\n                this._updateAllDayHeaderHeight((height + 1) * this._allDayHeaderHeight);\n\n                for (var groupIndex = 0; groupIndex < eventsByResource.length; groupIndex++) {\n                    this._renderEvents(eventsByResource[groupIndex], groupIndex);\n                }\n\n                this.refreshLayout();\n\n                this._currentTime(false);\n\n                this.trigger(\"activate\");\n            },\n\n            _eventsByResource: function(events, resources, result, parentValue) {\n                var resource = resources[0];\n\n                if (resource) {\n                    var view = resource.dataSource.view();\n\n                    view = view.filter(function(item) {\n                        var itemParentValue = kendo.getter(resource.dataParentValueField)(item);\n\n                        return itemParentValue === null || itemParentValue === undefined$1 || itemParentValue === parentValue;\n                    });\n\n                    for (var itemIdx = 0; itemIdx < view.length; itemIdx++) {\n                        var value = this._resourceValue(resource, view[itemIdx]);\n\n                        var eventsFilteredByResource = new kendo.data.Query(events).filter({ field: resource.field, operator: SchedulerView.groupEqFilter(value) }).toArray();\n\n                        if (resources.length > 1) {\n                            this._eventsByResource(eventsFilteredByResource, resources.slice(1), result, value);\n                        } else {\n                            result.push(eventsFilteredByResource);\n                        }\n                    }\n                } else {\n                    result.push(events);\n                }\n            },\n\n            _columnOffsetForResource: function(index) {\n                return this._columnCountForLevel(index) / this._columnCountForLevel(index - 1);\n            },\n\n            _columnCountForLevel: function(level) {\n                var columnLevel = this.columnLevels[level];\n                return columnLevel ? columnLevel.length : 0;\n            },\n\n            _rowCountForLevel: function(level, rowLevels) {\n                rowLevels = rowLevels || this.rowLevels;\n                var rowLevel = rowLevels[level];\n                return rowLevel ? rowLevel.length : 0;\n            },\n\n            clearSelection: function() {\n\n                this.content.add(this.datesHeader)\n                    .find(\".k-selected\")\n                    .removeAttr(\"id\")\n                    .removeClass(\"k-selected\");\n            },\n\n            _updateDirection: function(selection, ranges, multiple, reverse, vertical) {\n                var isDaySlot = selection.isAllDay;\n                var startSlot = ranges[0].start;\n                var endSlot = ranges[ranges.length - 1].end;\n\n                if (multiple) {\n                    if (vertical) {\n                        if (!isDaySlot &&\n                            startSlot.index === endSlot.index &&\n                            startSlot.collectionIndex === endSlot.collectionIndex) {\n                                selection.backward = reverse;\n                        }\n                    } else {\n                        if ((isDaySlot && startSlot.index === endSlot.index) ||\n                            (!isDaySlot && startSlot.collectionIndex === endSlot.collectionIndex)) {\n                                selection.backward = reverse;\n                        }\n                    }\n                }\n            },\n\n            _changeViewPeriod: function(selection, reverse, vertical) {\n                if (!vertical) {\n                    var date = reverse ? this.previousDate() : this.nextDate();\n                    var start = selection.start;\n                    var end = selection.end;\n                    var verticalByDate = this._isGroupedByDate() && this._isVerticallyGrouped();\n                    var group = this.groups[selection.groupIndex];\n                    var collection = reverse ? group._timeSlotCollections : group._getCollections(group.daySlotCollectionCount());\n                    var slots = collection[collection.length - 1]._slots;\n                    var slotIndex = (!reverse && !group.daySlotCollectionCount()) ? 0 : slots.length - 1;\n                    var endMilliseconds;\n                    var newDateStart, newDateEnd;\n\n                    newDateStart = new Date(date);\n                    newDateEnd = new Date(date);\n\n                    if (this._isInRange(newDateStart, newDateEnd)) {\n                        return false;\n                    }\n\n                    selection.start = newDateStart;\n                    selection.end = newDateEnd;\n\n                    if (verticalByDate) {\n                        var newStart = new Date(slots[slotIndex].startDate());\n                        var newEnd = new Date(slots[slotIndex].endDate());\n                        endMilliseconds = getMilliseconds(newEnd) ? getMilliseconds(newEnd) : MS_PER_DAY;\n\n                            setTime(selection.start, getMilliseconds(newStart));\n                            setTime(selection.end, endMilliseconds);\n                            if (group.daySlotCollectionCount()) {\n                                selection.isAllDay = !selection.isAllDay;\n                            }\n                    } else {\n                        endMilliseconds = (selection.isAllDay || !getMilliseconds(end)) ? MS_PER_DAY : getMilliseconds(end);\n\n                        setTime(selection.start, getMilliseconds(start));\n                        setTime(selection.end, endMilliseconds);\n                    }\n\n                    if (!this._isVerticallyGrouped()) {\n                        selection.groupIndex = reverse ? this.groups.length - 1 : 0;\n                    }\n\n                    selection.events = [];\n\n                    return true;\n                }\n            }\n        });\n\n        extend(true, ui, {\n            MultiDayView: MultiDayView,\n            DayView: MultiDayView.extend({\n                options: {\n                    name: \"DayView\",\n                    title: \"Day\",\n                    selectedMobileDateFormat: \"{0:MMM d}\"\n                },\n                name: \"day\"\n            }),\n            WeekView: MultiDayView.extend({\n                options: {\n                    name: \"WeekView\",\n                    title: \"Week\",\n                    selectedDateFormat: \"{0:D} - {1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\"\n                },\n                name: \"week\",\n                calculateDateRange: function() {\n                    var selectedDate = this.options.date,\n                        start = kendo.date.dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                        idx, length,\n                        dates = [];\n\n                    for (idx = 0, length = 7; idx < length; idx++) {\n                        dates.push(start);\n                        start = kendo.date.nextDay(start);\n                    }\n                    this._render(dates);\n                }\n            }),\n            WorkWeekView: MultiDayView.extend({\n                options: {\n                    name: \"WorkWeekView\",\n                    title: \"Work Week\",\n                    selectedDateFormat: \"{0:D} - {1:D}\",\n                    selectedShortDateFormat: \"{0:d} - {1:d}\"\n                },\n                name: \"workWeek\",\n                nextDate: function() {\n                    var weekStart = kendo.date.dayOfWeek(kendo.date.nextDay(this.startDate()), this.calendarInfo().firstDay, 1);\n                    return kendo.date.addDays(weekStart, this._workDays[0]);\n                },\n                previousDate: function() {\n                    var weekStart = kendo.date.dayOfWeek(this.startDate(), this.calendarInfo().firstDay, -1);\n                    var workDays = this._workDays;\n\n                    return kendo.date.addDays(weekStart, workDays[workDays.length - 1] - 7);\n                },\n                calculateDateRange: function() {\n                    var options = this.options,\n                        selectedDate = options.date,\n                        dayOfWeek = kendo.date.dayOfWeek,\n                        weekStart = dayOfWeek(selectedDate, this.calendarInfo().firstDay, -1),\n                        start = dayOfWeek(weekStart, options.workWeekStart, 1),\n                        end = dayOfWeek(start, options.workWeekEnd, 1),\n                        dates = [],\n                        workDays = (options.workDays && options.workDays.length) ? options.workDays.map(function(day) {\n                            return dayOfWeek(weekStart, day, 1).getTime();\n                        }) : null;\n\n                    if (workDays) {\n                        start = weekStart;\n                        end = dayOfWeek(start, this.calendarInfo().firstDay + 6, 1);\n                    }\n\n                    while (start <= end) {\n                        if (workDays && workDays.indexOf(start.getTime()) > -1) {\n                            dates.push(start);\n                        } else if (!workDays) {\n                            dates.push(start);\n                        }\n\n                        start = kendo.date.nextDay(start);\n                    }\n\n                    this._render(dates);\n                }\n            })\n        });\n\n    })(window.kendo.jQuery);\n\n}));\n"]}